(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    453667,       9516]
NotebookOptionsPosition[    437030,       9169]
NotebookOutlinePosition[    439789,       9235]
CellTagsIndexPosition[    439665,       9229]
WindowTitle->LindbladSolve
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell["QUANTUM MOB/ Q3S SYMBOL", "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "61dd15e6-e3a8-4be0-aa11-597eef339f00"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "afad59a6-e28e-411b-bb32-fc4023ad84ca"],
        Background->RGBColor[0.490196, 0.576471, 0.690196],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "See Also",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "d1d4df7f-aaec-4117-a7bb-0c5cd4f05254"]
         }],ExpressionUUID->"eac31c4f-4647-4fbe-ae91-cfee0cfa1061"],
         StripOnInput->False],{
        StyleBox[
          "\"NLindbladSolve\"", "SeeAlsoRelated", StripOnInput -> False] :> 
         Documentation`HelpLookup["paclet:QuantumMob/Q3S/ref/NLindbladSolve"],
          StyleBox[
          "\"LindbladStationary\"", "SeeAlsoRelated", StripOnInput -> False] :> 
         Documentation`HelpLookup[
          "paclet:QuantumMob/Q3S/ref/LindbladStationary"], 
         StyleBox[
          "\"LindbladConvert\"", "SeeAlsoRelated", StripOnInput -> False] :> 
         Documentation`HelpLookup[
          "paclet:QuantumMob/Q3S/ref/LindbladConvert"], 
         StyleBox["\"LieBasis\"", "SeeAlsoRelated", StripOnInput -> False] :> 
         Documentation`HelpLookup["paclet:QuantumMob/Q3S/ref/LieBasis"], 
         StyleBox[
          "\"LindbladSupermap\"", "SeeAlsoRelated", StripOnInput -> False] :> 
         Documentation`HelpLookup[
          "paclet:QuantumMob/Q3S/ref/LindbladSupermap"], 
         StyleBox[
          "\"DampingOperator\"", "SeeAlsoRelated", StripOnInput -> False] :> 
         Documentation`HelpLookup[
          "paclet:QuantumMob/Q3S/ref/DampingOperator"], 
         StyleBox["\"Supermap\"", "SeeAlsoRelated", StripOnInput -> False] :> 
         Documentation`HelpLookup["paclet:QuantumMob/Q3S/ref/Supermap"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"SeeAlso"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "6b8b881c-b613-4439-ad66-8a6987b1bde5"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Related Guides",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "cee4e1fe-0a53-4dbb-bbca-9025c3551730"]
         }],ExpressionUUID->"de762788-9a60-485f-b1c4-e9403d42ff2b"],
         StripOnInput->False],{
        "\"Dynamical Process of Decoherence\"" :> 
         Documentation`HelpLookup[
          "paclet:QuantumMob/Q3S/guide/DynamicalProcessOfDecoherence"], 
         "\"Quantum Information Systems\"" :> 
         Documentation`HelpLookup[
          "paclet:QuantumMob/Q3S/guide/QuantumInformationSystems"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"MoreAbout"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "f675cda7-40b8-47fc-8d40-d57c2433a89a"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Tech Notes",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "2c65fbb0-5688-4eb0-884f-ad73a475ebdc"]
         }],ExpressionUUID->"0e451bec-6d7f-4bf7-9a1e-4cad72be7fef"],
         StripOnInput->False],{
        "\"Quantum Noise and Decoherence\"" :> 
         Documentation`HelpLookup[
          "paclet:QuantumMob/Q3S/tutorial/QuantumNoiseAndDecoherence"], 
         "\"Quantum Information Systems with Q3\"" :> 
         Documentation`HelpLookup[
          "paclet:QuantumMob/Q3S/tutorial/QuantumInformationSystems"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"Tutorials"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "3ea16933-66bf-418d-8a21-ed6b7c15188b"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "f33f3cb9-0259-41bb-a097-140c2b7dfcec"]
         }],ExpressionUUID->"b62d183a-1ecc-4a1b-a583-3cc53628de55"],
         StripOnInput->False],{
        "\"QuantumMob/Q3S/ref/LindbladSolve\"" :> None, 
         "\"Copy Wolfram Documentation Center URL\"" :> 
         CopyToClipboard["QuantumMob/Q3S/ref/LindbladSolve"], Delimiter, 
         "\"Copy web URL\"" :> 
         Module[{DocumentationSearch`Private`nb$}, 
           DocumentationSearch`Private`nb$ = 
            NotebookPut[
             Notebook[{
               Cell[BoxData[
                 MakeBoxes[
                  Hyperlink[
                   "http://reference.wolfram.com/language/QuantumMob/Q3S/ref/\
LindbladSolve.html"], StandardForm]], "Input", TextClipboardType -> 
                 "PlainText"]}, Visible -> False]]; 
           SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
           FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
           NotebookClose[DocumentationSearch`Private`nb$]; Null], 
         "\"Go to web URL\"" :> 
         FrontEndExecute[{
           NotebookLocate[{
             URL[If[TrueQ[False], 
                 "http://reference.wolfram.com/system-modeler/", 
                 "http://reference.wolfram.com/language/"] <> 
               "QuantumMob/Q3S/ref/LindbladSolve" <> ".html"], None}]}]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "b704af8a-6868-49a6-8cc2-422d41a8d6a0"]
    }], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "cdf3ea83-ee9f-4854-bb17-a01a9c03cc71"]}
  }]], "AnchorBarGrid",
 CellID->1,ExpressionUUID->"3dd04b69-516d-4b2f-8244-8b6fe73c7bf5"],

Cell["QuantumMob`Q3S`", "ContextNameCell",ExpressionUUID->"45d39901-ebd4-4dcf-aa5b-7f3d6d9a70e2"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {Cell[TextData[{
     Cell[
     "LindbladSolve", "ObjectName",ExpressionUUID->
      "056764c6-ef4f-40b4-b012-e7749a94487b"],
     Cell[BoxData[
      TemplateBox[{8},
       "Spacer1"]],ExpressionUUID->"87ffc614-c464-4460-810f-b913a71ed8d3"],
     Cell[BoxData[
     ""], "ObjectNameTranslation",ExpressionUUID->
      "03b2d3d8-dc53-4546-bfcd-336b98fb5051"]
    }],ExpressionUUID->"5e4cc211-a284-45d5-a9d9-1724a018f22b"], 
    "\[SpanFromLeft]"}
  }]], "ObjectNameGrid",ExpressionUUID->"2f296b96-cf2a-4554-8eb1-\
67baf294714f"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"LindbladSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["a", "TI"], ",", 
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["1", "TR"]], ",", 
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["2", "TR"]], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
        StyleBox["init", "TI"], ",", 
        StyleBox["t", "TI"]}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "c81af390-8fbc-4af8-a16f-0617af39502a"],
     "\[LineSeparator]returns the solution of the Lindblad equation specified \
by the effective Hamiltonian ",
     Cell[BoxData[
      StyleBox["a", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "9d12b857-253e-4e85-a216-d81c0d4326a1"],
     " and the Lindblad operators ",
     Cell[BoxData[
      RowBox[{
       SubscriptBox[
        StyleBox["b", "TI"], 
        StyleBox["1", "TR"]], ",", 
       SubscriptBox[
        StyleBox["b", "TI"], 
        StyleBox["2", "TR"]], ",", 
       StyleBox["\[Ellipsis]", "TR"]}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "9cb55753-fa56-41f7-b082-67c38abbeedc"],
     " with the initial condition ",
     Cell[BoxData[
      StyleBox["init", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "013934af-f6d4-4e58-8d84-c117ac33084b"],
     " as a function of time ",
     Cell[BoxData[
      StyleBox["t", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "6eee2709-3257-4696-a333-a338eacc1aa4"],
     "."
    }],ExpressionUUID->"3ce89495-ed9c-4ceb-8995-757645f992c4"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"LindbladSolve", "[", 
       RowBox[{
        StyleBox["a", "TI"], ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["1", "TR"]], ",", 
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["2", "TR"]], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
        StyleBox["init", "TI"], ",", 
        StyleBox["t", "TI"]}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "55ef1eda-440a-4543-bce4-1fdbcf0e219a"],
     "\[LineSeparator]is also allowed."
    }],ExpressionUUID->"cdd999c3-24c1-443c-a9d4-62728b4a6262"]}
  }]], "Usage",
 CellID->982511436,ExpressionUUID->"36d294c7-65ad-4677-b95e-6ff5e6e47ce3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    DynamicBox[ToBoxes[
      If[
       MatchQ[
        CurrentValue[
         EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, 
         Closed], 
        Alternatives[Open, True]], 
       Style[
        Graphics[{
          Thickness[0.18], 
          RGBColor[0.8509803921568627, 0.396078431372549, 0], 
          Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
         PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
        0.68 Inherited], 
       Rotate[
        Style[
         Graphics[{
           Thickness[0.18], 
           RGBColor[0.8509803921568627, 0.396078431372549, 0], 
           Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
          PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
         0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
     ImageSizeCache->{
      13.600000000000001`, {-0.1685058593749993, 13.768505859375}}]],
    ExpressionUUID->"60d2c781-aa40-4293-b4ad-ae0caf8ceae3"],
   Cell[BoxData[
    TemplateBox[{1},
     "Spacer1"]],ExpressionUUID->"ddfc816f-0127-4272-9a43-e1163ec955db"],
   "Details and Options"
  }], "NotesFrameText",ExpressionUUID->"eed959ee-afd2-45dc-b30c-049fe1476ddb"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"d6ee63f1-b8f0-4db8-bf8f-8edc3507d668"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CacheGraphics->False,
 CellID->520274210,ExpressionUUID->"f7a2904b-29f8-4709-ac6c-131b5e500689"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LindbladSolve"]], "paclet:QuantumMob/Q3S/ref/LindbladSolve", 
    "QuantumMob Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "65cb29c4-a593-492b-88d4-425032d37a70"],
 " tries to find the analytic solution to the given Lindblad equation. It is \
convenient for relatively small systems. For larger systems, it may be more \
convenient to first convert the Lindblad equation into a set of first-order \
ordinary differential equations by using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LindbladConvert"]], 
    "paclet:QuantumMob/Q3S/ref/LindbladConvert", "QuantumMob Package Symbol"},
   
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "3839b5c3-6076-4438-bb8d-4f57f6ef157e"],
 "."
}], "Notes",
 CellID->1067943069,ExpressionUUID->"f9730bf9-a3df-4498-9028-b1614e86f36a"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["NLindbladSolve"]], "paclet:QuantumMob/Q3S/ref/NLindbladSolve", 
    "QuantumMob Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f8b4ffa3-5ac9-4c08-8049-271eb76cd40f"],
 " to find a numerical solution."
}], "Notes",
 CellID->94066822,ExpressionUUID->"251087f2-fd62-4dac-933d-18d6a0a1a408"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection"}, Open], 
      Alternatives[True, Open]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {4.251494140625001, 9.348505859375}}]],
  ExpressionUUID->"010c1bc4-39a5-48df-bdf9-6a405f804cc7"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"9517fe64-20f7-466a-b3a0-fb03f6ad623c"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(6)", "ExampleCount",ExpressionUUID->
  "0145adf6-2f82-4aa5-baa2-0fd070a7a422"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellTags->"PrimaryExamplesSection",
 CellID->1842720533,ExpressionUUID->"1cb64417-8e1f-4500-9531-b24331d7a440"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<QuantumMob`Q3S`\>\"", "]"}]], "Input", \
"ExampleInitialization",
 CellLabel->"In[1]:=",
 CellID->1927565408,ExpressionUUID->"f5966dca-a897-4aa4-8bba-5576f9eb69d7"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {4.551318359375001, 9.048681640625}}]],
  ExpressionUUID->"c51209cb-0053-4d8d-ad01-e9b99136fdb7"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"e4dca65c-eb96-4119-b79b-86a5c5de0a67"],
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(6)", "ExampleCount",ExpressionUUID->
  "07ae50db-860b-440a-ad40-7a6413269dc6"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1742324744,ExpressionUUID->"d8a54e8f-c63c-495b-a18d-abf663625728"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"in", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ThePauli", "[", "0", "]"}], "/", "2"}], "+", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{"x", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
      RowBox[{"ThePauli", "/@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"in", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[1]:=",
 CellID->383286299,ExpressionUUID->"b62c2195-8339-41f6-865e-365f91973a9c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], "+", 
       InterpretationBox[
        SubscriptBox["x", 
         TemplateBox[{",", "\",\"", "3"},
          "RowWithSeparators"]],
        $CellContext`x[3]]}], 
      RowBox[{
       InterpretationBox[
        SubscriptBox["x", 
         TemplateBox[{",", "\",\"", "1"},
          "RowWithSeparators"]],
        $CellContext`x[1]], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        InterpretationBox[
         SubscriptBox["x", 
          TemplateBox[{",", "\",\"", "2"},
           "RowWithSeparators"]],
         $CellContext`x[2]]}]}]},
     {
      RowBox[{
       InterpretationBox[
        SubscriptBox["x", 
         TemplateBox[{",", "\",\"", "1"},
          "RowWithSeparators"]],
        $CellContext`x[1]], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        InterpretationBox[
         SubscriptBox["x", 
          TemplateBox[{",", "\",\"", "2"},
           "RowWithSeparators"]],
         $CellContext`x[2]]}]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       InterpretationBox[
        SubscriptBox["x", 
         TemplateBox[{",", "\",\"", "3"},
          "RowWithSeparators"]],
        $CellContext`x[3]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->52888244,ExpressionUUID->"3f3a81c6-6261-42c7-82d0-873cda5689e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"Zero", "[", 
    RowBox[{"2", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"opH", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[2]:=",
 CellID->575047188,ExpressionUUID->"1bafd019-044b-48fe-acdd-7170d5e4c3e6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[Automatic, {2, 2}, 0, {1, {{0, 0, 0}, {}}, {}}]]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->1390411339,ExpressionUUID->"7e19b720-4acc-4bf1-b639-5c217464c39e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opL", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "]"}], " ", 
      RowBox[{"ThePauli", "[", "4", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "]"}], 
      RowBox[{"ThePauli", "[", "5", "]"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "opL"}]}], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[3]:=",
 CellID->1820491489,ExpressionUUID->"5873a3e0-7ec1-4cc1-9f91-cfc0df3fdee5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        SqrtBox[
         InterpretationBox[
          SubscriptBox["\[CapitalGamma]", 
           TemplateBox[{",", "\",\"", "\"+\""},
            "RowWithSeparators"]],
          $CellContext`\[CapitalGamma]["+"]]]},
       {"0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 1, 1}, {{2}}}, {$CellContext`\[CapitalGamma]["+"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {
        SqrtBox[
         InterpretationBox[
          SubscriptBox["\[CapitalGamma]", 
           TemplateBox[{",", "\",\"", "\"-\""},
            "RowWithSeparators"]],
          $CellContext`\[CapitalGamma]["-"]]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 0, 1}, {{1}}}, {$CellContext`\[CapitalGamma]["-"]^
         Rational[1, 2]}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->2030628541,ExpressionUUID->"64f3006a-efa6-48bb-9810-fd3a749309e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rho", "[", "t_", "]"}], "=", 
  RowBox[{"LindbladSolve", "[", 
   RowBox[{"opH", ",", "opL", ",", "in", ",", "t"}], "]"}]}]], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[4]:=",
 CellID->309037009,ExpressionUUID->"eb8ee413-e792-495f-9212-8f0a441a15a8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "t"}], " ", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "\"-\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma]["-"]]}], "-", 
          RowBox[{"t", " ", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "\"+\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma]["+"]]}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "\"-\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma]["-"]]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             RowBox[{"(", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["\[CapitalGamma]", 
                 TemplateBox[{",", "\",\"", "\"-\""},
                  "RowWithSeparators"]],
                $CellContext`\[CapitalGamma]["-"]], "+", 
               InterpretationBox[
                SubscriptBox["\[CapitalGamma]", 
                 TemplateBox[{",", "\",\"", "\"+\""},
                  "RowWithSeparators"]],
                $CellContext`\[CapitalGamma]["+"]]}], ")"}]}]], " ", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "\"-\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma]["-"]]}], "-", 
          RowBox[{"2", " ", 
           InterpretationBox[
            SubscriptBox["x", 
             TemplateBox[{",", "\",\"", "3"},
              "RowWithSeparators"]],
            $CellContext`x[3]], " ", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "\"-\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma]["-"]]}], "+", 
          InterpretationBox[
           SubscriptBox["\[CapitalGamma]", 
            TemplateBox[{",", "\",\"", "\"+\""},
             "RowWithSeparators"]],
           $CellContext`\[CapitalGamma]["+"]], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             RowBox[{"(", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["\[CapitalGamma]", 
                 TemplateBox[{",", "\",\"", "\"-\""},
                  "RowWithSeparators"]],
                $CellContext`\[CapitalGamma]["-"]], "+", 
               InterpretationBox[
                SubscriptBox["\[CapitalGamma]", 
                 TemplateBox[{",", "\",\"", "\"+\""},
                  "RowWithSeparators"]],
                $CellContext`\[CapitalGamma]["+"]]}], ")"}]}]], " ", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "\"+\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma]["+"]]}], "-", 
          RowBox[{"2", " ", 
           InterpretationBox[
            SubscriptBox["x", 
             TemplateBox[{",", "\",\"", "3"},
              "RowWithSeparators"]],
            $CellContext`x[3]], " ", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "\"+\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma]["+"]]}]}], ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          InterpretationBox[
           SubscriptBox["\[CapitalGamma]", 
            TemplateBox[{",", "\",\"", "\"-\""},
             "RowWithSeparators"]],
           $CellContext`\[CapitalGamma]["-"]], "+", 
          InterpretationBox[
           SubscriptBox["\[CapitalGamma]", 
            TemplateBox[{",", "\",\"", "\"+\""},
             "RowWithSeparators"]],
           $CellContext`\[CapitalGamma]["+"]]}], ")"}]}]]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", "t", " ", 
          InterpretationBox[
           SubscriptBox["\[CapitalGamma]", 
            TemplateBox[{",", "\",\"", "\"-\""},
             "RowWithSeparators"]],
           $CellContext`\[CapitalGamma]["-"]]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "t", " ", 
          InterpretationBox[
           SubscriptBox["\[CapitalGamma]", 
            TemplateBox[{",", "\",\"", "\"+\""},
             "RowWithSeparators"]],
           $CellContext`\[CapitalGamma]["+"]]}]}]], " ", 
       InterpretationBox[
        SubscriptBox["x", 
         TemplateBox[{",", "\",\"", "1"},
          "RowWithSeparators"]],
        $CellContext`x[1]]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", "t", " ", 
          InterpretationBox[
           SubscriptBox["\[CapitalGamma]", 
            TemplateBox[{",", "\",\"", "\"-\""},
             "RowWithSeparators"]],
           $CellContext`\[CapitalGamma]["-"]]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "t", " ", 
          InterpretationBox[
           SubscriptBox["\[CapitalGamma]", 
            TemplateBox[{",", "\",\"", "\"+\""},
             "RowWithSeparators"]],
           $CellContext`\[CapitalGamma]["+"]]}]}]], " ", 
       InterpretationBox[
        SubscriptBox["x", 
         TemplateBox[{",", "\",\"", "2"},
          "RowWithSeparators"]],
        $CellContext`x[2]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", "t", " ", 
          InterpretationBox[
           SubscriptBox["\[CapitalGamma]", 
            TemplateBox[{",", "\",\"", "\"-\""},
             "RowWithSeparators"]],
           $CellContext`\[CapitalGamma]["-"]]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "t", " ", 
          InterpretationBox[
           SubscriptBox["\[CapitalGamma]", 
            TemplateBox[{",", "\",\"", "\"+\""},
             "RowWithSeparators"]],
           $CellContext`\[CapitalGamma]["+"]]}]}]], " ", 
       InterpretationBox[
        SubscriptBox["x", 
         TemplateBox[{",", "\",\"", "1"},
          "RowWithSeparators"]],
        $CellContext`x[1]]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", "t", " ", 
          InterpretationBox[
           SubscriptBox["\[CapitalGamma]", 
            TemplateBox[{",", "\",\"", "\"-\""},
             "RowWithSeparators"]],
           $CellContext`\[CapitalGamma]["-"]]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "t", " ", 
          InterpretationBox[
           SubscriptBox["\[CapitalGamma]", 
            TemplateBox[{",", "\",\"", "\"+\""},
             "RowWithSeparators"]],
           $CellContext`\[CapitalGamma]["+"]]}]}]], " ", 
       InterpretationBox[
        SubscriptBox["x", 
         TemplateBox[{",", "\",\"", "2"},
          "RowWithSeparators"]],
        $CellContext`x[2]]}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "t"}], " ", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "\"-\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma]["-"]]}], "-", 
          RowBox[{"t", " ", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "\"+\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma]["+"]]}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "\"-\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma]["-"]]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             RowBox[{"(", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["\[CapitalGamma]", 
                 TemplateBox[{",", "\",\"", "\"-\""},
                  "RowWithSeparators"]],
                $CellContext`\[CapitalGamma]["-"]], "+", 
               InterpretationBox[
                SubscriptBox["\[CapitalGamma]", 
                 TemplateBox[{",", "\",\"", "\"+\""},
                  "RowWithSeparators"]],
                $CellContext`\[CapitalGamma]["+"]]}], ")"}]}]], " ", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "\"-\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma]["-"]]}], "-", 
          RowBox[{"2", " ", 
           InterpretationBox[
            SubscriptBox["x", 
             TemplateBox[{",", "\",\"", "3"},
              "RowWithSeparators"]],
            $CellContext`x[3]], " ", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "\"-\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma]["-"]]}], "+", 
          InterpretationBox[
           SubscriptBox["\[CapitalGamma]", 
            TemplateBox[{",", "\",\"", "\"+\""},
             "RowWithSeparators"]],
           $CellContext`\[CapitalGamma]["+"]], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             RowBox[{"(", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["\[CapitalGamma]", 
                 TemplateBox[{",", "\",\"", "\"-\""},
                  "RowWithSeparators"]],
                $CellContext`\[CapitalGamma]["-"]], "+", 
               InterpretationBox[
                SubscriptBox["\[CapitalGamma]", 
                 TemplateBox[{",", "\",\"", "\"+\""},
                  "RowWithSeparators"]],
                $CellContext`\[CapitalGamma]["+"]]}], ")"}]}]], " ", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "\"+\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma]["+"]]}], "-", 
          RowBox[{"2", " ", 
           InterpretationBox[
            SubscriptBox["x", 
             TemplateBox[{",", "\",\"", "3"},
              "RowWithSeparators"]],
            $CellContext`x[3]], " ", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "\"+\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma]["+"]]}]}], ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          InterpretationBox[
           SubscriptBox["\[CapitalGamma]", 
            TemplateBox[{",", "\",\"", "\"-\""},
             "RowWithSeparators"]],
           $CellContext`\[CapitalGamma]["-"]], "+", 
          InterpretationBox[
           SubscriptBox["\[CapitalGamma]", 
            TemplateBox[{",", "\",\"", "\"+\""},
             "RowWithSeparators"]],
           $CellContext`\[CapitalGamma]["+"]]}], ")"}]}]]}]}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->1989675227,ExpressionUUID->"4794f348-4ed2-4ca3-b2ae-bb0d81af7bfe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"rho", "[", "t", "]"}], ",", 
     RowBox[{"t", "\[Rule]", "0"}]}], "]"}], "//", "Simplify"}], "//", 
  "MatrixForm"}]], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[5]:=",
 CellID->1017770999,ExpressionUUID->"f88c023b-be1c-443d-9bf0-1d5884e4bf07"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], "+", 
       InterpretationBox[
        SubscriptBox["x", 
         TemplateBox[{",", "\",\"", "3"},
          "RowWithSeparators"]],
        $CellContext`x[3]]}], 
      RowBox[{
       InterpretationBox[
        SubscriptBox["x", 
         TemplateBox[{",", "\",\"", "1"},
          "RowWithSeparators"]],
        $CellContext`x[1]], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        InterpretationBox[
         SubscriptBox["x", 
          TemplateBox[{",", "\",\"", "2"},
           "RowWithSeparators"]],
         $CellContext`x[2]]}]}]},
     {
      RowBox[{
       InterpretationBox[
        SubscriptBox["x", 
         TemplateBox[{",", "\",\"", "1"},
          "RowWithSeparators"]],
        $CellContext`x[1]], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        InterpretationBox[
         SubscriptBox["x", 
          TemplateBox[{",", "\",\"", "2"},
           "RowWithSeparators"]],
         $CellContext`x[2]]}]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       InterpretationBox[
        SubscriptBox["x", 
         TemplateBox[{",", "\",\"", "3"},
          "RowWithSeparators"]],
        $CellContext`x[3]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[5]//MatrixForm=",
 CellID->1850263197,ExpressionUUID->"614d403f-3c2e-4962-a908-964c8e43b7f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"rho", "[", "t", "]"}], ",", 
     RowBox[{"t", "\[Rule]", "Infinity"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], ">", "0"}], ",", 
        
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], ">", "0"}]}], 
       "}"}]}]}], "]"}], "//", "Simplify"}], "//", "MatrixForm"}]], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[6]:=",
 CellID->766568750,ExpressionUUID->"a220232c-3e9b-4725-b7ea-cc78e6e6ead7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       InterpretationBox[
        SubscriptBox["\[CapitalGamma]", 
         TemplateBox[{",", "\",\"", "\"+\""},
          "RowWithSeparators"]],
        $CellContext`\[CapitalGamma]["+"]], 
       RowBox[{
        InterpretationBox[
         SubscriptBox["\[CapitalGamma]", 
          TemplateBox[{",", "\",\"", "\"-\""},
           "RowWithSeparators"]],
         $CellContext`\[CapitalGamma]["-"]], "+", 
        InterpretationBox[
         SubscriptBox["\[CapitalGamma]", 
          TemplateBox[{",", "\",\"", "\"+\""},
           "RowWithSeparators"]],
         $CellContext`\[CapitalGamma]["+"]]}]], "0"},
     {"0", 
      FractionBox[
       InterpretationBox[
        SubscriptBox["\[CapitalGamma]", 
         TemplateBox[{",", "\",\"", "\"-\""},
          "RowWithSeparators"]],
        $CellContext`\[CapitalGamma]["-"]], 
       RowBox[{
        InterpretationBox[
         SubscriptBox["\[CapitalGamma]", 
          TemplateBox[{",", "\",\"", "\"-\""},
           "RowWithSeparators"]],
         $CellContext`\[CapitalGamma]["-"]], "+", 
        InterpretationBox[
         SubscriptBox["\[CapitalGamma]", 
          TemplateBox[{",", "\",\"", "\"+\""},
           "RowWithSeparators"]],
         $CellContext`\[CapitalGamma]["+"]]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[6]//MatrixForm=",
 CellID->731377188,ExpressionUUID->"9bcdde36-bd0c-4245-ade4-a5040457210b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "1aa4f546-624a-4b77-91cb-fff8ee10b629"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1200765697,ExpressionUUID->"a85f5556-69b0-459d-80f2-0f19331365f9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"in", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ThePauli", "[", "0", "]"}], "+", 
      RowBox[{"ThePauli", "[", "1", "]"}]}], ")"}], "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"in", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[1]:=",
 CellID->435145815,ExpressionUUID->"9d5bb9d6-e9a7-4563-9896-51ed5603c463"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"]},
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {
     1, {{0, 2, 4}, {{1}, {2}, {2}, {1}}}, {
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
       1, 2]}}]]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->389448053,ExpressionUUID->"4a0f08f1-6667-4288-8359-dd82715fc323"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"ThePauli", "[", "3", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"opH", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[2]:=",
 CellID->1196829607,ExpressionUUID->"a37b5f97-b656-4d8d-af6c-4a189ed4dcb6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{1}, {2}}}, {1, -1}}]]]]], "Output",\

 CellLabel->"Out[2]//MatrixForm=",
 CellID->670783829,ExpressionUUID->"82aa99e7-91bd-40a4-bcc1-6fc57ccfde15"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rho", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalGamma]", ",", "\[Rho]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", ".3"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", ".7"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "/@", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "opH", "}"}], ",", "opL"}], "}"}], ",", "1"}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"opH", ",", "opL", ",", "in", ",", "t"}], "]"}], "//", 
       "Chop"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rho", "[", "t", "]"}], "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[3]:=",
 CellID->1273375212,ExpressionUUID->"5941bdf2-d531-4ec5-b935-8d3956389664"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{1}, {2}}}, {1, -1}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        SqrtBox[
         RowBox[{"\[CapitalGamma]", "[", "\<\"+\"\>", "]"}]]},
       {"0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 1, 1}, {{2}}}, {$CellContext`\[CapitalGamma]["+"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {
        SqrtBox[
         RowBox[{"\[CapitalGamma]", "[", "\<\"-\"\>", "]"}]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 0, 1}, {{1}}}, {$CellContext`\[CapitalGamma]["-"]^
         Rational[1, 2]}}]]]]}], "}"}]], "Print",
 CellLabel->"During evaluation of In[21]:=",
 CellID->1267029127,ExpressionUUID->"61d9378e-2eae-4ba7-aebd-a3059d8b1798"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{"0.2`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"1.`", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"1.`", " ", "t"}]]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"0.4999999999999999`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"0.4999999999999999`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}], 
      RowBox[{
       FractionBox["1", "2"], "+", 
       RowBox[{"0.2`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"1.`", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"1.`", " ", "t"}]]}]}], ")"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[3]//MatrixForm=",
 CellID->510693837,ExpressionUUID->"aad120a4-b524-4a01-959a-c9e1add1669c"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"avgX", "[", "t_", "]"}], "=", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"rho", "[", "t", "]"}], ".", 
     RowBox[{"ThePauli", "[", "1", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avgY", "[", "t_", "]"}], "=", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"rho", "[", "t", "]"}], ".", 
     RowBox[{"ThePauli", "[", "2", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avgZ", "[", "t_", "]"}], "=", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"rho", "[", "t", "]"}], ".", 
     RowBox[{"ThePauli", "[", "3", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[4]:=",
 CellID->374788519,ExpressionUUID->"0b25324e-34e4-4cf0-874a-3dc9976be282"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgX", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgY", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgZ", "[", "t", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) t\>\"", 
      ",", "\"\<\[LeftAngleBracket]X\[RightAngleBracket], \
\[LeftAngleBracket]Y\[RightAngleBracket], \[LeftAngleBracket]Z\
\[RightAngleBracket]\>\""}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[5]:=",
 CellID->667061092,ExpressionUUID->"860f0568-e42e-4cdf-acd1-745301e76be4"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJw11AtU01UcwHFe4y1vEcdgGyM1QkUoDkR2f0SIhDyTBIQOJqCRxEspXgIL
LGYwkC0IejAIUCgFJV7lBjFAQEgOEo94igfEeLZERqQ59/N3zs7O//zv/dxz
vndnzA+i/cKVFBQUwp99ZN8v5slT2ayQ4q9l00xy19a0LYeW8LmbJIqdw4/U
PCSv2slmkCz+Pq8V+sscvh8lUWmh4cNwj8i1aXIpmGVnszyG62cJ77qAZrlv
gJyKkM0ccQuzck27IsT9C2Rgzi9ZoskT9d2WzSLhN+l/bHbxN5HcWyVzUZlN
kbvviOTr14hvlg5X0jIkkvsSUmrVsRo7N4r7/yERDaYClmBcJD9vnVTrm9/Y
WJtAb4MEVUjz+pYm0JMSx3dO58PP4+j9S3oEjxVd4sbQ2yKffs90y/IfRu8J
WX/3/N7xgkH0FGCmynX6XFc/rleAHG6uev2jDvQVYVki/iLJpgX3K8FQ8pga
b18ZnqcMcQFHCgq3irGfClBV+JRd/fVE7qmA3yTDRjGgFXtRIFfU6c/T7cCe
quBWIr4sSbqFvdXA+rpg4uxXPeipg3XhObrPmV701GGGZR9636AXPQ24anbn
s8vV3ehpgnXNI87c8S70tEB96Zp7yFExetpwoHAhc1bcip42lFn9GekubEZv
GyxSHa+ZVNWhpwONemcPtR8sR08XPtJM9Q+MTUNPD046D25JXuZhHz0IoVkH
CoMqsace5OnwjePdakXPt9vpg0PF5tLhg/XYVx/Wb2efuKvYiPdhAO6vJdbz
+E3oGcCGaonAldKMngEo1abdP3C6CfsbwvCwpM55sgE9Q9DIMqiayqlHzwge
0D8c7xPUoWcEpVGJUkruj+gZQbVlvKe7fwV628Hhzc1a8XQJetvhAkWq5iji
oGcMvrtT3r/BscU+xhA5ldBqezgbexpDf0C6YaNXIfbaAUneF29mKJVi3x2g
z29MCfYqx34mcNe0aKSFXYGeCQz9FbOQUF6JngnkRXr/tEdUid5OGOvK6cpe
qkBvJ7z1Ro9rmecP6FFhxf6lpD+Uy9CjQv/+zsnR6O/QowKby3dw2VWEnikU
CfOn6lLy0TOFdalQVYOdhR4NOnvuZVxdiEGPBnTqyXRWTgj2owEzm8yrGqVi
PzP4tcbIZa/4c+xnBrSHb1OC9nCxnzn4pQyOpHtcwvswB23bIe8F5Rf/H+bg
Izi2/KCdhx4dwsTG6RElPPTooNj2upNlWQF6DNgmDXDQWs/H3xcDXPhN0rY4
LvoMyDv/n/djJgf3M8BrBoZ1XDPxPAbw4kdUGjxS0GPCzLHeb6oMY9BjAp02
0lOa6oseE/afmDHxKAjEXkwIO+T0ZVFbNPZlQpJZMGd+4BPsZwGraS3Jt7TO
E7lnAf7Rm98+dcrAnhbgKYzsOsNho2cBjrqp2TelbPQsYHHUtLu2mI0eC97b
qswRZmbg/bGggKVtrXIlDT0WhP1dR33laDJ6LOBzo4/PeiWg9+x5ZTy2fSIG
PUvwqeTZn7oQQf4HRVrHfA==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJxd0nkwnGccwPFtIkgd69rNWte+lnSaaaNIiGCfnxiNkExKHBFXUJEw0Y0y
utImVNy1krriSAZtkGpYMWkcq+uIESrYUK04Q2wZOkUSdY20ur/809/MOzvv
vM/zed75vksFf+YeuoNGo4X+e23//n8KC7angbCnppnxHz0m8vsucoEuel8r
c4gcsNyeATJoMOt/lT2Bz4dJrdDjktcvU0SuTJLdTZ7LKasvcP00eTqx0O7N
kpGwc9sjI0Ihxeo7JMP9c0Rh6X7xPH+GPOnZngXS+CbO6PfxafQWiaPVySuK
5c9x/RIRdrl0f/1sDP2XpM+jl53b8Bvuf0UCrSz5ZjZSPG+FBDcPZq64dKC3
Sg4qJ0VXaNSit0acTAIDB0YKJXJvgySIvQTrr5skcm+T7LuTeydWqVMi97bI
6AkL2eyxXglmA4kgdyZeKsX1NPDZSONpJw1I5P47kK3XYtrnNIj7dwD9+IqW
KncQz9sJJ/lxQ0OWA+gpQOEom+ac+9ZTAM4P1j2p0l70dsHe0osDsd93oacI
1syMr5YW2tFTgsq6RXc7WRN6yrAiLvlcOl+DnjKMWSraqNO/RW83mNAbUuNY
N7HXu+ASq3TPtqwa+6qAht13vvf1HmI/Vfh4+PSq+uFm7K0Kvnw1yVx3C/ZU
A/3oT36NZrahpw5/7mo5OJTShh4djs4+WuCZtaGnAUVRolMCbiuu14C/XSPO
NNIk6GuArsi1OLy7kfy33VITom5ofeEme4DnacLmgll5ZL4IPS0YTyzpD7Av
R08LHuYblKtO5aGnBT8eOv7kA98QfB9tKLUylNSaX8ce2tAVytzLMS/Bfjqg
4t3faTpWjr11wGMta7h5vQp76oDYPSxZ5XIN9mdA3/qntDKRCD0GRJ51uxk+
KUKPCTyRtXKavwg9Jhg7RwakflmNHhMcolvPcg9XobcHHDS3KN7+CvT2wATX
evFRbhl6LJjnhaQp+BahxwKLxxUF/oE30GOBpMmvrlF4BT1daGdE/GRb5I39
dGGYm3G35FQi9mNDADVV31p9Hfux4aWp6VKO39t+bBAYyqp8Cgqxnx6IXb2Y
sX630NOD85QjI+DebfT04cg+m+4HpbfR04fgYt5ryvcWevqQkGYx2a5QhJ4B
dJ0RmOf156NnAEGBYxfbXmWjZwjDxyrSWO5Z6BlCpnfxhSHnZPQMQWozk1gU
EYeeEVw+L8zaPx6EnhG4htqdC9vyw34cMK9izh0tiJHI/18coGLysx1H4rEn
BypPvMkJr0zC/hx4bqLt9B6Vhn054BZBT1c7koEeBZy/0umTjG/QoyATnv3c
WZeBHgWCq35iK/t09Cgo84xszRlJQY+CCG2+0tPma+gZQ2mHtfUmIwE9YzAy
jbEf/TAOPWP445p4K+DFJfSMoX5xmedzOgQ9Y7AX9Vn0J9ujx4W1KBf/ep4n
9uGCw/LOMGfTMOzJBaltT8fdDj724oLsQA1/oyca+3Ihr1oThEWx+D1MIEht
utjMQkD+AYpHtsE=
          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJxd0nlMk3cYB/CKoDCgltNCOXrgDkEc4oFC9nsUDTKOgeAgEwxDjhmiDBno
nAfInFBEbto6DSODbGOYBVAn6uzGYYVWZi30iINxJBhAAgyiRdaizN/TP/ZN
3rz55X2+n+fNm5eXnLkv1YzBYKS+vpbv/89lyXLaSMLkYMmu099L35y7SWj1
5L6B0hbpZv/lqMgcOXAyTHibPteRW81OCb7Dv0vfKEPk3l+tFnvXddL5UVJ9
MHfqkYtMmp62nDHCmI7MOHC/m/bHSU2B8dM//BTSh4rlPCMxzPuKLcm91Jsh
X6tuRzX6PqLzs6R/vkvEdlRSf47k6r8tax5V0v48SW+QeRbVPqb7npMUOfNi
XqiKenqy8YLwo7BRFfUWiPzj9Ozso33UWyRbmo/nJz7ro96/RNbT6hR+sJ96
RrK0Ws4+1NVPPQYwx2yaGvlqOs8AuWhdr91xNfVXACfwC+nnHWraN4PdQo5P
saWG7lsJVt/F8+xDNNQzh6UIL1XDWQ31zGE25KetmhYN9SzgN0VjznvDGuqt
gpmkyg8crLXUWw0JdYXzS+9rqWcJxuDS9qgYLfUsQbw9ryrxmJZ6VsB6GK7P
uaSl3lvQOv54fPgH9KzhXFdY8cg99Gyg/ssNihYVejZwlePNKBxDzxYCtqvT
K16gx4TgB6TJsEpHvTUw9WF/5KyjjnoseNopZpbzdHSeBTs0N4MNPjrqs+Cf
xtRNMdt00v/q/nZgMAztvwY6us8OeFnB9YJQ9OyhampCLo9Czx5qj1hktMWh
Zw9zX/XtNCbi+zjAkN+7SY2H0HOA5MBvIhWfoecInOg0/6wj6DlCa+nofH0W
eo6wuBQQdywHPSfQZ8SxR0+g5wS7fJ9YMk6h5wx7p+v4yjPoOcMK3x1XE/PR
cwbDdBKjqQC9teC1cHdz+3n01kLsYbPKhgvosaG7qGH2kyL02DAxQprHhOix
YSpBJgu/iJ4LDLx9vaesBD0XaEjZqL9xCT1XuLM+mUhL0XOFRdbLkF/K0HOF
gdrnJwrL0ePAZQulMbwCPQ5Uam2Vxgr03GDSO+TX2kr03KD+7zsRflXouYHn
k0yrG1XouYN359NAn2r03CG6o8hZXI2eB5gbfr62UI2eB6RVxS9G16DnAfMR
vcN1Neh5Aiuwc8NEDXqeYBGUK/YWoccFK/HZ7jQR/l9cyMsojL8iQp8LBQE9
vQoR9rlw+HTmj3oR7uOCpVq5nytGjwc9aknQbjF6PFhf0HErRYweD3Qvi9zP
idHjQXZb0M0rYvR44FXMkF03eXwQep0p6TF5fAhyz9s5aPL40D6c7zRj8vhg
Ze23jSFBjw+26SN/MiXoCWDr4KK5mwS/jwBW7onVvyNBTwCJa4QPNknQE4Cs
I7o8yOQJIPbF3Yw9Js8L0gpPHo14fX4Fnc/2Cg==
          "]]},
        Annotation[#, "Charting`Private`Tag#3"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Line[CompressedData["
1:eJw11AtU01UcwHFe4y1vEcdgGyM1QkUoDkR2f0SIhDyTBIQOJqCRxEspXgIL
LGYwkC0IejAIUCgFJV7lBjFAQEgOEo94igfEeLZERqQ59/N3zs7O//zv/dxz
vndnzA+i/cKVFBQUwp99ZN8v5slT2ayQ4q9l00xy19a0LYeW8LmbJIqdw4/U
PCSv2slmkCz+Pq8V+sscvh8lUWmh4cNwj8i1aXIpmGVnszyG62cJ77qAZrlv
gJyKkM0ccQuzck27IsT9C2Rgzi9ZoskT9d2WzSLhN+l/bHbxN5HcWyVzUZlN
kbvviOTr14hvlg5X0jIkkvsSUmrVsRo7N4r7/yERDaYClmBcJD9vnVTrm9/Y
WJtAb4MEVUjz+pYm0JMSx3dO58PP4+j9S3oEjxVd4sbQ2yKffs90y/IfRu8J
WX/3/N7xgkH0FGCmynX6XFc/rleAHG6uev2jDvQVYVki/iLJpgX3K8FQ8pga
b18ZnqcMcQFHCgq3irGfClBV+JRd/fVE7qmA3yTDRjGgFXtRIFfU6c/T7cCe
quBWIr4sSbqFvdXA+rpg4uxXPeipg3XhObrPmV701GGGZR9636AXPQ24anbn
s8vV3ehpgnXNI87c8S70tEB96Zp7yFExetpwoHAhc1bcip42lFn9GekubEZv
GyxSHa+ZVNWhpwONemcPtR8sR08XPtJM9Q+MTUNPD046D25JXuZhHz0IoVkH
CoMqsace5OnwjePdakXPt9vpg0PF5tLhg/XYVx/Wb2efuKvYiPdhAO6vJdbz
+E3oGcCGaonAldKMngEo1abdP3C6CfsbwvCwpM55sgE9Q9DIMqiayqlHzwge
0D8c7xPUoWcEpVGJUkruj+gZQbVlvKe7fwV628Hhzc1a8XQJetvhAkWq5iji
oGcMvrtT3r/BscU+xhA5ldBqezgbexpDf0C6YaNXIfbaAUneF29mKJVi3x2g
z29MCfYqx34mcNe0aKSFXYGeCQz9FbOQUF6JngnkRXr/tEdUid5OGOvK6cpe
qkBvJ7z1Ro9rmecP6FFhxf6lpD+Uy9CjQv/+zsnR6O/QowKby3dw2VWEnikU
CfOn6lLy0TOFdalQVYOdhR4NOnvuZVxdiEGPBnTqyXRWTgj2owEzm8yrGqVi
PzP4tcbIZa/4c+xnBrSHb1OC9nCxnzn4pQyOpHtcwvswB23bIe8F5Rf/H+bg
Izi2/KCdhx4dwsTG6RElPPTooNj2upNlWQF6DNgmDXDQWs/H3xcDXPhN0rY4
LvoMyDv/n/djJgf3M8BrBoZ1XDPxPAbw4kdUGjxS0GPCzLHeb6oMY9BjAp02
0lOa6oseE/afmDHxKAjEXkwIO+T0ZVFbNPZlQpJZMGd+4BPsZwGraS3Jt7TO
E7lnAf7Rm98+dcrAnhbgKYzsOsNho2cBjrqp2TelbPQsYHHUtLu2mI0eC97b
qswRZmbg/bGggKVtrXIlDT0WhP1dR33laDJ6LOBzo4/PeiWg9+x5ZTy2fSIG
PUvwqeTZn7oQQf4HRVrHfA==
              "]]}, "Charting`Private`Tag#1"], 
           Annotation[{
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Line[CompressedData["
1:eJxd0nkwnGccwPFtIkgd69rNWte+lnSaaaNIiGCfnxiNkExKHBFXUJEw0Y0y
utImVNy1krriSAZtkGpYMWkcq+uIESrYUK04Q2wZOkUSdY20ur/809/MOzvv
vM/zed75vksFf+YeuoNGo4X+e23//n8KC7angbCnppnxHz0m8vsucoEuel8r
c4gcsNyeATJoMOt/lT2Bz4dJrdDjktcvU0SuTJLdTZ7LKasvcP00eTqx0O7N
kpGwc9sjI0Ihxeo7JMP9c0Rh6X7xPH+GPOnZngXS+CbO6PfxafQWiaPVySuK
5c9x/RIRdrl0f/1sDP2XpM+jl53b8Bvuf0UCrSz5ZjZSPG+FBDcPZq64dKC3
Sg4qJ0VXaNSit0acTAIDB0YKJXJvgySIvQTrr5skcm+T7LuTeydWqVMi97bI
6AkL2eyxXglmA4kgdyZeKsX1NPDZSONpJw1I5P47kK3XYtrnNIj7dwD9+IqW
KncQz9sJJ/lxQ0OWA+gpQOEom+ac+9ZTAM4P1j2p0l70dsHe0osDsd93oacI
1syMr5YW2tFTgsq6RXc7WRN6yrAiLvlcOl+DnjKMWSraqNO/RW83mNAbUuNY
N7HXu+ASq3TPtqwa+6qAht13vvf1HmI/Vfh4+PSq+uFm7K0Kvnw1yVx3C/ZU
A/3oT36NZrahpw5/7mo5OJTShh4djs4+WuCZtaGnAUVRolMCbiuu14C/XSPO
NNIk6GuArsi1OLy7kfy33VITom5ofeEme4DnacLmgll5ZL4IPS0YTyzpD7Av
R08LHuYblKtO5aGnBT8eOv7kA98QfB9tKLUylNSaX8ce2tAVytzLMS/Bfjqg
4t3faTpWjr11wGMta7h5vQp76oDYPSxZ5XIN9mdA3/qntDKRCD0GRJ51uxk+
KUKPCTyRtXKavwg9Jhg7RwakflmNHhMcolvPcg9XobcHHDS3KN7+CvT2wATX
evFRbhl6LJjnhaQp+BahxwKLxxUF/oE30GOBpMmvrlF4BT1daGdE/GRb5I39
dGGYm3G35FQi9mNDADVV31p9Hfux4aWp6VKO39t+bBAYyqp8Cgqxnx6IXb2Y
sX630NOD85QjI+DebfT04cg+m+4HpbfR04fgYt5ryvcWevqQkGYx2a5QhJ4B
dJ0RmOf156NnAEGBYxfbXmWjZwjDxyrSWO5Z6BlCpnfxhSHnZPQMQWozk1gU
EYeeEVw+L8zaPx6EnhG4htqdC9vyw34cMK9izh0tiJHI/18coGLysx1H4rEn
BypPvMkJr0zC/hx4bqLt9B6Vhn054BZBT1c7koEeBZy/0umTjG/QoyATnv3c
WZeBHgWCq35iK/t09Cgo84xszRlJQY+CCG2+0tPma+gZQ2mHtfUmIwE9YzAy
jbEf/TAOPWP445p4K+DFJfSMoX5xmedzOgQ9Y7AX9Vn0J9ujx4W1KBf/ep4n
9uGCw/LOMGfTMOzJBaltT8fdDj724oLsQA1/oyca+3Ihr1oThEWx+D1MIEht
utjMQkD+AYpHtsE=
              "]]}, "Charting`Private`Tag#2"], 
           Annotation[{
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Line[CompressedData["
1:eJxd0nlMk3cYB/CKoDCgltNCOXrgDkEc4oFC9nsUDTKOgeAgEwxDjhmiDBno
nAfInFBEbto6DSODbGOYBVAn6uzGYYVWZi30iINxJBhAAgyiRdaizN/TP/ZN
3rz55X2+n+fNm5eXnLkv1YzBYKS+vpbv/89lyXLaSMLkYMmu099L35y7SWj1
5L6B0hbpZv/lqMgcOXAyTHibPteRW81OCb7Dv0vfKEPk3l+tFnvXddL5UVJ9
MHfqkYtMmp62nDHCmI7MOHC/m/bHSU2B8dM//BTSh4rlPCMxzPuKLcm91Jsh
X6tuRzX6PqLzs6R/vkvEdlRSf47k6r8tax5V0v48SW+QeRbVPqb7npMUOfNi
XqiKenqy8YLwo7BRFfUWiPzj9Ozso33UWyRbmo/nJz7ro96/RNbT6hR+sJ96
RrK0Ws4+1NVPPQYwx2yaGvlqOs8AuWhdr91xNfVXACfwC+nnHWraN4PdQo5P
saWG7lsJVt/F8+xDNNQzh6UIL1XDWQ31zGE25KetmhYN9SzgN0VjznvDGuqt
gpmkyg8crLXUWw0JdYXzS+9rqWcJxuDS9qgYLfUsQbw9ryrxmJZ6VsB6GK7P
uaSl3lvQOv54fPgH9KzhXFdY8cg99Gyg/ssNihYVejZwlePNKBxDzxYCtqvT
K16gx4TgB6TJsEpHvTUw9WF/5KyjjnoseNopZpbzdHSeBTs0N4MNPjrqs+Cf
xtRNMdt00v/q/nZgMAztvwY6us8OeFnB9YJQ9OyhampCLo9Czx5qj1hktMWh
Zw9zX/XtNCbi+zjAkN+7SY2H0HOA5MBvIhWfoecInOg0/6wj6DlCa+nofH0W
eo6wuBQQdywHPSfQZ8SxR0+g5wS7fJ9YMk6h5wx7p+v4yjPoOcMK3x1XE/PR
cwbDdBKjqQC9teC1cHdz+3n01kLsYbPKhgvosaG7qGH2kyL02DAxQprHhOix
YSpBJgu/iJ4LDLx9vaesBD0XaEjZqL9xCT1XuLM+mUhL0XOFRdbLkF/K0HOF
gdrnJwrL0ePAZQulMbwCPQ5Uam2Vxgr03GDSO+TX2kr03KD+7zsRflXouYHn
k0yrG1XouYN359NAn2r03CG6o8hZXI2eB5gbfr62UI2eB6RVxS9G16DnAfMR
vcN1Neh5Aiuwc8NEDXqeYBGUK/YWoccFK/HZ7jQR/l9cyMsojL8iQp8LBQE9
vQoR9rlw+HTmj3oR7uOCpVq5nytGjwc9aknQbjF6PFhf0HErRYweD3Qvi9zP
idHjQXZb0M0rYvR44FXMkF03eXwQep0p6TF5fAhyz9s5aPL40D6c7zRj8vhg
Ze23jSFBjw+26SN/MiXoCWDr4KK5mwS/jwBW7onVvyNBTwCJa4QPNknQE4Cs
I7o8yOQJIPbF3Yw9Js8L0gpPHo14fX4Fnc/2Cg==
              "]]}, "Charting`Private`Tag#3"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0, 10.}, {-0.46789376727999843`, 
              0.9999999999999998}}, "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
            "Axes" -> {False, False}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[1, 90]], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[2], 
               Thickness[Large]], 
              Directive[
               PointSize[
                Rational[1, 90]], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[2], 
               Thickness[Large]], 
              Directive[
               PointSize[
                Rational[1, 90]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2], 
               Thickness[Large]]}, 
            "HighlightLabelingFunctions" -> <|
             "CoordinatesToolOptions" -> Identity, 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0, 10.}, {-0.46789376727999843`, 
             0.9999999999999998}}, "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
           "Axes" -> {False, False}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              Thickness[Large]]}, 
           "HighlightLabelingFunctions" -> <|
            "CoordinatesToolOptions" -> Identity, 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJw11AtU01UcwHFe4y1vEcdgGyM1QkUoDkR2f0SIhDyTBIQOJqCRxEspXgIL
LGYwkC0IejAIUCgFJV7lBjFAQEgOEo94igfEeLZERqQ59/N3zs7O//zv/dxz
vndnzA+i/cKVFBQUwp99ZN8v5slT2ayQ4q9l00xy19a0LYeW8LmbJIqdw4/U
PCSv2slmkCz+Pq8V+sscvh8lUWmh4cNwj8i1aXIpmGVnszyG62cJ77qAZrlv
gJyKkM0ccQuzck27IsT9C2Rgzi9ZoskT9d2WzSLhN+l/bHbxN5HcWyVzUZlN
kbvviOTr14hvlg5X0jIkkvsSUmrVsRo7N4r7/yERDaYClmBcJD9vnVTrm9/Y
WJtAb4MEVUjz+pYm0JMSx3dO58PP4+j9S3oEjxVd4sbQ2yKffs90y/IfRu8J
WX/3/N7xgkH0FGCmynX6XFc/rleAHG6uev2jDvQVYVki/iLJpgX3K8FQ8pga
b18ZnqcMcQFHCgq3irGfClBV+JRd/fVE7qmA3yTDRjGgFXtRIFfU6c/T7cCe
quBWIr4sSbqFvdXA+rpg4uxXPeipg3XhObrPmV701GGGZR9636AXPQ24anbn
s8vV3ehpgnXNI87c8S70tEB96Zp7yFExetpwoHAhc1bcip42lFn9GekubEZv
GyxSHa+ZVNWhpwONemcPtR8sR08XPtJM9Q+MTUNPD046D25JXuZhHz0IoVkH
CoMqsace5OnwjePdakXPt9vpg0PF5tLhg/XYVx/Wb2efuKvYiPdhAO6vJdbz
+E3oGcCGaonAldKMngEo1abdP3C6CfsbwvCwpM55sgE9Q9DIMqiayqlHzwge
0D8c7xPUoWcEpVGJUkruj+gZQbVlvKe7fwV628Hhzc1a8XQJetvhAkWq5iji
oGcMvrtT3r/BscU+xhA5ldBqezgbexpDf0C6YaNXIfbaAUneF29mKJVi3x2g
z29MCfYqx34mcNe0aKSFXYGeCQz9FbOQUF6JngnkRXr/tEdUid5OGOvK6cpe
qkBvJ7z1Ro9rmecP6FFhxf6lpD+Uy9CjQv/+zsnR6O/QowKby3dw2VWEnikU
CfOn6lLy0TOFdalQVYOdhR4NOnvuZVxdiEGPBnTqyXRWTgj2owEzm8yrGqVi
PzP4tcbIZa/4c+xnBrSHb1OC9nCxnzn4pQyOpHtcwvswB23bIe8F5Rf/H+bg
Izi2/KCdhx4dwsTG6RElPPTooNj2upNlWQF6DNgmDXDQWs/H3xcDXPhN0rY4
LvoMyDv/n/djJgf3M8BrBoZ1XDPxPAbw4kdUGjxS0GPCzLHeb6oMY9BjAp02
0lOa6oseE/afmDHxKAjEXkwIO+T0ZVFbNPZlQpJZMGd+4BPsZwGraS3Jt7TO
E7lnAf7Rm98+dcrAnhbgKYzsOsNho2cBjrqp2TelbPQsYHHUtLu2mI0eC97b
qswRZmbg/bGggKVtrXIlDT0WhP1dR33laDJ6LOBzo4/PeiWg9+x5ZTy2fSIG
PUvwqeTZn7oQQf4HRVrHfA==
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJxd0nkwnGccwPFtIkgd69rNWte+lnSaaaNIiGCfnxiNkExKHBFXUJEw0Y0y
utImVNy1krriSAZtkGpYMWkcq+uIESrYUK04Q2wZOkUSdY20ur/809/MOzvv
vM/zed75vksFf+YeuoNGo4X+e23//n8KC7angbCnppnxHz0m8vsucoEuel8r
c4gcsNyeATJoMOt/lT2Bz4dJrdDjktcvU0SuTJLdTZ7LKasvcP00eTqx0O7N
kpGwc9sjI0Ihxeo7JMP9c0Rh6X7xPH+GPOnZngXS+CbO6PfxafQWiaPVySuK
5c9x/RIRdrl0f/1sDP2XpM+jl53b8Bvuf0UCrSz5ZjZSPG+FBDcPZq64dKC3
Sg4qJ0VXaNSit0acTAIDB0YKJXJvgySIvQTrr5skcm+T7LuTeydWqVMi97bI
6AkL2eyxXglmA4kgdyZeKsX1NPDZSONpJw1I5P47kK3XYtrnNIj7dwD9+IqW
KncQz9sJJ/lxQ0OWA+gpQOEom+ac+9ZTAM4P1j2p0l70dsHe0osDsd93oacI
1syMr5YW2tFTgsq6RXc7WRN6yrAiLvlcOl+DnjKMWSraqNO/RW83mNAbUuNY
N7HXu+ASq3TPtqwa+6qAht13vvf1HmI/Vfh4+PSq+uFm7K0Kvnw1yVx3C/ZU
A/3oT36NZrahpw5/7mo5OJTShh4djs4+WuCZtaGnAUVRolMCbiuu14C/XSPO
NNIk6GuArsi1OLy7kfy33VITom5ofeEme4DnacLmgll5ZL4IPS0YTyzpD7Av
R08LHuYblKtO5aGnBT8eOv7kA98QfB9tKLUylNSaX8ce2tAVytzLMS/Bfjqg
4t3faTpWjr11wGMta7h5vQp76oDYPSxZ5XIN9mdA3/qntDKRCD0GRJ51uxk+
KUKPCTyRtXKavwg9Jhg7RwakflmNHhMcolvPcg9XobcHHDS3KN7+CvT2wATX
evFRbhl6LJjnhaQp+BahxwKLxxUF/oE30GOBpMmvrlF4BT1daGdE/GRb5I39
dGGYm3G35FQi9mNDADVV31p9Hfux4aWp6VKO39t+bBAYyqp8Cgqxnx6IXb2Y
sX630NOD85QjI+DebfT04cg+m+4HpbfR04fgYt5ryvcWevqQkGYx2a5QhJ4B
dJ0RmOf156NnAEGBYxfbXmWjZwjDxyrSWO5Z6BlCpnfxhSHnZPQMQWozk1gU
EYeeEVw+L8zaPx6EnhG4htqdC9vyw34cMK9izh0tiJHI/18coGLysx1H4rEn
BypPvMkJr0zC/hx4bqLt9B6Vhn054BZBT1c7koEeBZy/0umTjG/QoyATnv3c
WZeBHgWCq35iK/t09Cgo84xszRlJQY+CCG2+0tPma+gZQ2mHtfUmIwE9YzAy
jbEf/TAOPWP445p4K+DFJfSMoX5xmedzOgQ9Y7AX9Vn0J9ujx4W1KBf/ep4n
9uGCw/LOMGfTMOzJBaltT8fdDj724oLsQA1/oyca+3Ihr1oThEWx+D1MIEht
utjMQkD+AYpHtsE=
          "]]}, "Charting`Private`Tag#2"], 
       Annotation[{
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJxd0nlMk3cYB/CKoDCgltNCOXrgDkEc4oFC9nsUDTKOgeAgEwxDjhmiDBno
nAfInFBEbto6DSODbGOYBVAn6uzGYYVWZi30iINxJBhAAgyiRdaizN/TP/ZN
3rz55X2+n+fNm5eXnLkv1YzBYKS+vpbv/89lyXLaSMLkYMmu099L35y7SWj1
5L6B0hbpZv/lqMgcOXAyTHibPteRW81OCb7Dv0vfKEPk3l+tFnvXddL5UVJ9
MHfqkYtMmp62nDHCmI7MOHC/m/bHSU2B8dM//BTSh4rlPCMxzPuKLcm91Jsh
X6tuRzX6PqLzs6R/vkvEdlRSf47k6r8tax5V0v48SW+QeRbVPqb7npMUOfNi
XqiKenqy8YLwo7BRFfUWiPzj9Ozso33UWyRbmo/nJz7ro96/RNbT6hR+sJ96
RrK0Ws4+1NVPPQYwx2yaGvlqOs8AuWhdr91xNfVXACfwC+nnHWraN4PdQo5P
saWG7lsJVt/F8+xDNNQzh6UIL1XDWQ31zGE25KetmhYN9SzgN0VjznvDGuqt
gpmkyg8crLXUWw0JdYXzS+9rqWcJxuDS9qgYLfUsQbw9ryrxmJZ6VsB6GK7P
uaSl3lvQOv54fPgH9KzhXFdY8cg99Gyg/ssNihYVejZwlePNKBxDzxYCtqvT
K16gx4TgB6TJsEpHvTUw9WF/5KyjjnoseNopZpbzdHSeBTs0N4MNPjrqs+Cf
xtRNMdt00v/q/nZgMAztvwY6us8OeFnB9YJQ9OyhampCLo9Czx5qj1hktMWh
Zw9zX/XtNCbi+zjAkN+7SY2H0HOA5MBvIhWfoecInOg0/6wj6DlCa+nofH0W
eo6wuBQQdywHPSfQZ8SxR0+g5wS7fJ9YMk6h5wx7p+v4yjPoOcMK3x1XE/PR
cwbDdBKjqQC9teC1cHdz+3n01kLsYbPKhgvosaG7qGH2kyL02DAxQprHhOix
YSpBJgu/iJ4LDLx9vaesBD0XaEjZqL9xCT1XuLM+mUhL0XOFRdbLkF/K0HOF
gdrnJwrL0ePAZQulMbwCPQ5Uam2Vxgr03GDSO+TX2kr03KD+7zsRflXouYHn
k0yrG1XouYN359NAn2r03CG6o8hZXI2eB5gbfr62UI2eB6RVxS9G16DnAfMR
vcN1Neh5Aiuwc8NEDXqeYBGUK/YWoccFK/HZ7jQR/l9cyMsojL8iQp8LBQE9
vQoR9rlw+HTmj3oR7uOCpVq5nytGjwc9aknQbjF6PFhf0HErRYweD3Qvi9zP
idHjQXZb0M0rYvR44FXMkF03eXwQep0p6TF5fAhyz9s5aPL40D6c7zRj8vhg
Ze23jSFBjw+26SN/MiXoCWDr4KK5mwS/jwBW7onVvyNBTwCJa4QPNknQE4Cs
I7o8yOQJIPbF3Yw9Js8L0gpPHo14fX4Fnc/2Cg==
          "]]}, "Charting`Private`Tag#3"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{0, 10.}, {-0.46789376727999843`, 
          0.9999999999999998}}, "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
        "Axes" -> {False, False}, "LabelStyle" -> {}, "AspectRatio" -> 
        GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           Thickness[Large]]}, 
        "HighlightLabelingFunctions" -> <|
         "CoordinatesToolOptions" -> Identity, 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\"", HoldForm], 
      TraditionalForm], None}, {
     FormBox[
      TagBox["\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) t\"", HoldForm], 
      TraditionalForm], None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-0.46789376727999843`, 0.9999999999999998}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[5]=",
 CellID->1881088357,ExpressionUUID->"76ce0844-5542-4364-9620-09c0dcb4667b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "5e1e5119-6905-402d-bdb0-f2ef83eb3dca"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1586259128,ExpressionUUID->"d74132c0-0536-41dd-b2a5-3c526818dbe8"],

Cell["Let us consider a two-qubit system.", "ExampleText",
 CellID->692904445,ExpressionUUID->"972e2169-e096-45bb-95d9-fdcb5f078ace"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"in", "=", 
   RowBox[{"DiagonalMatrix", "@", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"in", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[1]:=",
 CellID->1425866839,ExpressionUUID->"8c95e3e1-b94c-454d-a470-7cd9f2e7d4cd"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->1379642305,ExpressionUUID->"8d9e2191-6b35-4973-98d6-88b470aba392"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "B"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"B", "[", "1", "]"}], 
     RowBox[{"ThePauli", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"B", "[", "2", "]"}], 
     RowBox[{"ThePauli", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "opH", "]"}], "\[IndentingNewLine]"}], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[2]:=",
 CellID->1104129648,ExpressionUUID->"881c7ddc-8630-4d22-9ff3-b27a71037425"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      InterpretationBox[
       SubscriptBox["B", 
        TemplateBox[{",", "\",\"", "2"},
         "RowWithSeparators"]],
       $CellContext`B[2]], 
      InterpretationBox[
       SubscriptBox["B", 
        TemplateBox[{",", "\",\"", "1"},
         "RowWithSeparators"]],
       $CellContext`B[1]], "0"},
     {
      InterpretationBox[
       SubscriptBox["B", 
        TemplateBox[{",", "\",\"", "2"},
         "RowWithSeparators"]],
       $CellContext`B[2]], "0", "0", 
      InterpretationBox[
       SubscriptBox["B", 
        TemplateBox[{",", "\",\"", "1"},
         "RowWithSeparators"]],
       $CellContext`B[1]]},
     {
      InterpretationBox[
       SubscriptBox["B", 
        TemplateBox[{",", "\",\"", "1"},
         "RowWithSeparators"]],
       $CellContext`B[1]], "0", "0", 
      InterpretationBox[
       SubscriptBox["B", 
        TemplateBox[{",", "\",\"", "2"},
         "RowWithSeparators"]],
       $CellContext`B[2]]},
     {"0", 
      InterpretationBox[
       SubscriptBox["B", 
        TemplateBox[{",", "\",\"", "1"},
         "RowWithSeparators"]],
       $CellContext`B[1]], 
      InterpretationBox[
       SubscriptBox["B", 
        TemplateBox[{",", "\",\"", "2"},
         "RowWithSeparators"]],
       $CellContext`B[2]], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {4, 4}, 0, {
     1, {{0, 2, 4, 6, 8}, {{2}, {3}, {1}, {4}, {4}, {1}, {3}, {
       2}}}, {$CellContext`B[2], $CellContext`B[1], $CellContext`B[
       2], $CellContext`B[1], $CellContext`B[2], $CellContext`B[
       1], $CellContext`B[2], $CellContext`B[1]}}]]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->970248957,ExpressionUUID->"b7016564-c453-4722-b97a-8f69080b07c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opL", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", 
         RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "4"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "2"}], "}"}], "\[Rule]", 
         RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "opL"}]}], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[3]:=",
 CellID->252233040,ExpressionUUID->"0d1540c8-7744-441e-8f21-75d4ba78f17b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", 
        InterpretationBox[
         SubscriptBox["\[CapitalGamma]", 
          TemplateBox[{",", "\",\"", "\"+\""},
           "RowWithSeparators"]],
         $CellContext`\[CapitalGamma]["+"]]},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {4, 4}, 0, {
       1, {{0, 1, 1, 1, 1}, {{4}}}, {$CellContext`\[CapitalGamma]["+"]}}]]]], 
   ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", 
        InterpretationBox[
         SubscriptBox["\[CapitalGamma]", 
          TemplateBox[{",", "\",\"", "\"-\""},
           "RowWithSeparators"]],
         $CellContext`\[CapitalGamma]["-"]], "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {4, 4}, 0, {
       1, {{0, 0, 0, 1, 1}, {{2}}}, {$CellContext`\[CapitalGamma][
         "-"]}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->908232178,ExpressionUUID->"b01e7a0f-2814-4506-89ad-28e15784453a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rho", "[", "t_", "]"}], "=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"B", ",", "\[CapitalGamma]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"B", "[", "1", "]"}], "=", 
        RowBox[{
         RowBox[{"B", "[", "2", "]"}], "=", "1."}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", 
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", "0.5"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"opH", ",", "opL", ",", "in", ",", "t"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[4]:=",
 CellID->1792714312,ExpressionUUID->"975a1b30-91b2-4f18-b660-3c615aa01da5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.41681`", ",", "Null"}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->682823937,ExpressionUUID->"a3ce4b1e-cf9b-4bb0-9907-5357ef2df9bd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"rho", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10", ",", "0.05"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[5]:=",
 CellID->1112511420,ExpressionUUID->"0d223633-c3aa-465e-8995-928b6fa506eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Chop", "@", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Diagonal", "/@", "data"}], "]"}]}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) \
\!\(\*StyleBox[\"t\",FontSlant->\"Italic\"]\)\>\"", 
      ",", "\"\<Probabilities\>\""}], "}"}]}]}], "]"}]], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[6]:=",
 CellID->1239593903,ExpressionUUID->"2357a509-eadd-4783-a634-b10d4d1d5ee4"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
         LineBox[CompressedData["
1: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
T4GwK73Dj6aLyd+d0msg
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
         LineBox[CompressedData["
1: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
ElffNZFosD5HkK5QJv7l2ET+AwfAVYA=
          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
         LineBox[CompressedData["
1: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
Ow2K/OZzueGN5L+pUF8d
          "]]},
        Annotation[#, "Charting`Private`Tag#3"]& ], 
       TagBox[
        {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
         LineBox[CompressedData["
1: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
1mA+S/A4w1rsFFtN/gaBMm2f
          "]]},
        Annotation[#, "Charting`Private`Tag#4"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 120]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Line[CompressedData["
1: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
T4GwK73Dj6aLyd+d0msg
              "]]}, "Charting`Private`Tag#1"], 
           Annotation[{
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 120]], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Line[CompressedData["
1:eJxd1nlQ09cWB3AERFlEEtYshCwQK6DGpdVX1HuKO6AoyiKgFSyLAmodRFwQ
noWifRBX1GCUQnmoYBUJKCBrgBjCYiyOS9VhMbKodaEoiNuTx7nvj/ebyWQy
+d3PPfnd+z03gtCtPmH6enp6jV9eI+//f2XKRq4LJCn4mjN3/g9k9HMZ6Vj3
dOvH9p/IrJkjVx3RizkQGtKagd83kqWasmOHVTlkVNGSD66Ve+vmXMT72wjX
Iu/jYKSCRISPXHfIxQ+taxzMy3D8fTKwu23x2tYq0tI8cj0k224sfGn8jRK9
DjL8pHcR40493t9JgKu5bup6A/3HxOvJ7Ycz+I04Xkek9gd/42RpcL5u8lSW
6rs9swm9XlK0cuLCJONm9PrIuP74vLi+JvSekRLXI5P2zmtC7zkBY8GsBHPq
vSCsBY9Sazer0XtFZgQWN3iGqfD+V0Sec3+MiTWt9zXxinTpbz9Wi+P7ie4N
887k95U4398kXuZaEPKoFL0BkrY8qeqcUTF6A0Tt69nvE3AZvTdkZbXzs7r3
59B7SwIM3Jwil+WgN0i0xry5CwzOoDdELP4y8O7OlqE3RA7L3R0uyDPRe0e0
q3jzmgay0BsmkmzP6T9X56L3nmzgWh7Vbi9A7wNZk3ra/s3TK+h9IFZ3Z4c1
NV9F7yM5RVYUxUsq0PtElLeVpz1e16D3mXhwA3Mj79ShpwcbQ1aLzS+q8H49
UNgw0iP86XrqwT+kPbqQ6iby3+Ezx0BRuP9wTksLzjcGUuyemv6w9SZ6+sA0
zPe19NSipw8xVjv28eRa9PSBM9vZ9fB5LdZjAFFK1bnGbVr0DMCtonuu9CX1
DKEzc8WpwZRW9Axh08yXIS7FzegZQuzvirt+6Rr0xgKciFl7eZIavbHgwz5f
l3a6AT0jOCb2PLFNvw49I/hUMbnXIK4GPSNw3MB+4MqrQG8csFOHI1Y1XkNv
HAQX5fjZ2BSjNx60se2rvxZfQW88qA9qIlPFl9AbD6f+qfoz40EBesaQm5X8
LGFXAXrGcEAmtb80fBE9E8jdvWz/MlEheiagjuUNhcuK0DOBUpvUBVJlCXqm
YLdrkPViN82zKcR2yr9KlVWiZwaej4OWvRyqQc8MzvKuHupxrkPPDK5/mDZZ
4dmA3gR4PYMjWbfoBnoTwPXQ85ltBo3omUPU4ljV7ztoHs0h45fg0gdpNK/m
0Od2KmkyaUZvImhN01VZP9O8T4QdC8KKSkKa0bOALumlbb5tdH9ZQPmTFhdF
F/UtoOe1KG0osxHHW4BZQUWy2kSN81lA5C9DFb8uUKHHgAcJKXMc1tajx4Ct
goi+mRuU6DFAl6g9snhLDXoM4E5lJygklegxIC6K4x+hK0OPCafGlItdONfQ
Y4JWnp3K/LsYPSbMPeN1/eRPCvSYMLDm4L2rD+l6MUES4DPJ30iBniVE1jkN
jtMrxudjCfx7DZ3M2hL0LOGFeqph15xS9Czhj+Pu4SXe19GzBOmt/MKsnir0
rGD9Tp8b7Vtq0bOCI3H6YbdT6P62AleSNmtnbgN6VrBcnTCw/uoN9KxgnXH/
0cpzdH2tgc18vlIcTvuxNdQkS7wXdjajZw1Xqnq37DZtRc8aNAlnwsP/bEXP
GspeSXjuS2h+beDzFWWDg/dN9GzgkmzjmU/9NM82MD868+212dSzgVKPtrQG
pxb0bGBvn+7OYzU9P2zBcJws8Pg0mndb+G1d/qKUL+fBqGcL9v66I7p/qdCz
ha5Bj/J/59WjZwucoKh9tS30fLMDhlwUtNOSPj87UFXVxEsY1ejZwZwlSweV
OyvQswOu9ATj0fZy9Oxg26IMj3Qrul9YkOR3t8M6shQ9FqjrHEMP/ViKHgvy
Bv3Lb0+heWVBzYSNLaVHqccCiXyTcv+hCvTYEJ384vuCCdXosSG0Kv5C3//y
zIbNLdVGsVIlemzoXzJ4vOQb+nvZ4Jx/NTGig/Y/DnRPd5oWs5ue3xyYu4yd
s3+APj8ORDzeE9JBNOhxgJktz231pvnmAJRUDgnYNL9cCE7kFcpP0rxz4eIm
s4Tp9XS/cOH4Qf92xyyafy4kZfmFmLnQ/s0F3ey4zwUxdH3t4a2LW7RiK11f
e4iZwndaP7cRPXvYr5i2ZbiD9qcvnyckk+Boev7bwyufsy+/e1GPHg86Iy/3
FsbVoceDp4fvD620pv2AB+6BnObme7Qf8GBhaEDJHnk1ejzYzGgVrx5D8+YA
Q6k7Mie/pueDA8xa/n7Oxp30vHUA1dLLYl8Z3S8OkB89P4XtR/uLA9jF1dpf
yKMeH5I3VX/FJDg/iw9B3r7zvg6rxX7DB7tAc++ocuXoeC8+FIsZTien1+N8
fOC0pvcGVOD6JvFhlyZQl+1Jnw8fbtrZ9y/Xqkc9BR8MF+6IrXDTYD18yMnY
pQ1Nahr1uvkQxm4773OUrq8Ayg1D8y5F4HnPEkAEJ9Tf+F0L1icA/uXzJ/K/
w/x7CeCPKNFgKaH5FkBW8NpbiwZasD4B7KvKrXTbSP8/CKB0v+N2ybFmrE8A
Fl1sDjed7jcBuM/28HoXhOdBtwCcD+QdWmVG+5UQiodOrLxegL+XJQRDztjo
FUtVWJ8QjmmyP1u9wjx4CcHv+7Uu+wppfxRCQNcev3sZ2A+ShJB3OlFyL78W
6xPCliWHbad/ydtofUKQFsa0uSfT/wtCcIzzvtLug3nsFoIkvsd8SlgN1ieC
3J60VVlldH1FsP2W9VSGF+03IhjL5TLeWNP1FUGRzOvHs+a0PhHoAl16s1xw
PyeJwLM6U/htCO3nIpAxxay7OapRTyGCIPMMadpj2t9FIP62MONXG8xPtwh8
ElffNZFosD5HkK5QJv7l2ET+AwfAVYA=
              "]]}, "Charting`Private`Tag#2"], 
           Annotation[{
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 120]], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Line[CompressedData["
1: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
Ow2K/OZzueGN5L+pUF8d
              "]]}, "Charting`Private`Tag#3"], 
           Annotation[{
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 120]], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Line[CompressedData["
1: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
1mA+S/A4w1rsFFtN/gaBMm2f
              "]]}, "Charting`Private`Tag#4"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 10.}, {0, 1.}}, 
            "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
            "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {False, False}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[1, 120]], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[2], 
               Thickness[Large]], 
              Directive[
               PointSize[
                Rational[1, 120]], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[2], 
               Thickness[Large]], 
              Directive[
               PointSize[
                Rational[1, 120]], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[2], 
               Thickness[Large]], 
              Directive[
               PointSize[
                Rational[1, 120]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2], 
               Thickness[Large]]}, 
            "HighlightLabelingFunctions" -> <|
             "CoordinatesToolOptions" -> Identity, 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 10.}, {0, 1.}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
           "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {False, False}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 120]], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Directive[
              PointSize[
               Rational[1, 120]], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Directive[
              PointSize[
               Rational[1, 120]], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Directive[
              PointSize[
               Rational[1, 120]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              Thickness[Large]]}, 
           "HighlightLabelingFunctions" -> <|
            "CoordinatesToolOptions" -> Identity, 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 120]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1: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
T4GwK73Dj6aLyd+d0msg
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 120]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1: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
ElffNZFosD5HkK5QJv7l2ET+AwfAVYA=
          "]]}, "Charting`Private`Tag#2"], 
       Annotation[{
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 120]], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1: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
Ow2K/OZzueGN5L+pUF8d
          "]]}, "Charting`Private`Tag#3"], 
       Annotation[{
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 120]], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1: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
1mA+S/A4w1rsFFtN/gaBMm2f
          "]]}, "Charting`Private`Tag#4"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 10.}, {0, 1.}}, 
        "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {False, False}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 120]], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[2], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[1, 120]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[1, 120]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[1, 120]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           Thickness[Large]]}, 
        "HighlightLabelingFunctions" -> <|
         "CoordinatesToolOptions" -> Identity, 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox["\"Probabilities\"", HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
      "\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) \\!\\(\\*StyleBox[\\\"t\\\
\",FontSlant->\\\"Italic\\\"]\\)\"", HoldForm], TraditionalForm], None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[6]=",
 CellID->1675709531,ExpressionUUID->"7d0a0508-c530-49a7-9420-ae9207c64dca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "d0c97c2f-2259-4d90-8a6e-6e7e06e1f84e"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1261705519,ExpressionUUID->"a7fad46a-2258-43b4-83d8-882e793c4604"],

Cell[TextData[{
 "Let us consider a single qubit and solve a master equation specified in the \
Pauli operators (for ",
 StyleBox["unlabelled",
  FontSlant->"Italic"],
 " systems)."
}], "ExampleText",
 CellID->1231127355,ExpressionUUID->"530bc623-2c99-4925-b4a1-4ccac1385a81"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"in", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Pauli", "[", "0", "]"}], "+", 
      RowBox[{"Pauli", "[", "1", "]"}]}], ")"}], "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"in", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[1]:=",
 CellID->427878852,ExpressionUUID->"29a296f2-4211-4c6e-90d6-7172394df88e"],

Cell[BoxData[
 TagBox[
  FractionBox[
   RowBox[{
    InterpretationBox["\<\"I\"\>",
     Q3`Pauli[{0}]], "+", 
    InterpretationBox["\<\"X\"\>",
     Q3`Pauli[{1}]]}], "2"],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->830978460,ExpressionUUID->"c69339b2-ada3-409e-98de-bb9799b3a3fd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"Pauli", "[", "3", "]"}]}], ";"}]], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[2]:=",
 CellID->1686455809,ExpressionUUID->"98a6edb7-c4d0-45f4-801d-c22af0e5d1fe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "]"}], 
     RowBox[{"Pauli", "[", "4", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "]"}], 
     RowBox[{"Pauli", "[", "5", "]"}]}]}], "}"}]}]}], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[3]:=",
 CellID->1773608757,ExpressionUUID->"84a403e1-3fd2-4b08-8da8-6fa5621346ad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     TemplateBox[{"\"X\"", "\"+\""},
      "Superscript"],
     Q3`Pauli[{4}]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "\"+\""},
        "RowWithSeparators"]],
      $CellContext`\[CapitalGamma]["+"]]]}], ",", 
   RowBox[{
    InterpretationBox[
     TemplateBox[{"\"X\"", "\"-\""},
      "Superscript"],
     Q3`Pauli[{5}]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "\"-\""},
        "RowWithSeparators"]],
      $CellContext`\[CapitalGamma]["-"]]]}]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->441614973,ExpressionUUID->"4ca5cbad-64d3-4271-ac1e-b645db5aa128"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Rho]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rho", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalGamma]", ",", "\[Rho]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", ".3"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", ".7"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "@", 
        RowBox[{"Matrix", "@", "opH"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "/@", 
        RowBox[{"Matrix", "[", "opL", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"opH", ",", "opL", ",", "in", ",", "t"}], "]"}], "//", 
       "Chop"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rho", "[", "t", "]"}], "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[4]:=",
 CellID->813112276,ExpressionUUID->"4ceccf5c-f279-4e7c-a611-6a5fa547d86d"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{1}, {2}}}, {1, -1}}]]]]], "Print",\

 CellLabel->"During evaluation of In[47]:=",
 CellID->1878386508,ExpressionUUID->"8d48ed36-58db-408b-b3b4-71e679578be4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.`", "0.5477225575051661`"},
       {"0.`", "0.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0., {
       1, {{0, 1, 1}, {{2}}}, {0.5477225575051661}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.`", "0.`"},
       {"0.8366600265340756`", "0.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0., {
       1, {{0, 0, 1}, {{1}}}, {0.8366600265340756}}]]]]}], "}"}]], "Print",
 CellLabel->"During evaluation of In[47]:=",
 CellID->2032429056,ExpressionUUID->"e87e2b22-46c7-4efc-be6e-2d850826bc16"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{
   FractionBox[
    InterpretationBox["\<\"I\"\>",
     Q3`Pauli[{0}]], "2"], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "0.2`"}], "+", 
      RowBox[{"0.2`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]]}]}], ")"}], " ", 
    InterpretationBox["\<\"Z\"\>",
     Q3`Pauli[{3}]]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    InterpretationBox[
     TemplateBox[{"\"X\"", "\"+\""},
      "Superscript"],
     Q3`Pauli[{4}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0.4999999999999999`", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       
       RowBox[{"Sin", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    InterpretationBox[
     TemplateBox[{"\"X\"", "\"-\""},
      "Superscript"],
     Q3`Pauli[{5}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0.4999999999999999`", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       
       RowBox[{"Sin", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}], ")"}]}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[4]//MatrixForm=",
 CellID->1160255010,ExpressionUUID->"25934785-e752-46a8-9756-ecb165e76c44"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"avgX", "[", "t_", "]"}], ",", 
    RowBox[{"avgY", "[", "t_", "]"}], ",", 
    RowBox[{"avgZ", "[", "t_", "]"}]}], "}"}], "=", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Rho]", "=", 
      RowBox[{"Elaborate", "[", 
       RowBox[{"rho", "[", "t", "]"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Coefficient", "[", 
       RowBox[{"\[Rho]", ",", "#"}], "]"}], "&"}], "/@", 
     RowBox[{"Pauli", "/@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[5]:=",
 CellID->1408697964,ExpressionUUID->"0ea49ef7-29f5-43f1-91cb-e443bc638694"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], ",", 
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.2`"}], "+", 
    RowBox[{"0.2`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]]}]}]}], 
  "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->2114916807,ExpressionUUID->"300474ba-b5b8-4b00-b13a-3d1d329503b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgX", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgY", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgZ", "[", "t", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) t\>\"", 
      ",", "\"\<\[LeftAngleBracket]X\[RightAngleBracket], \
\[LeftAngleBracket]Y\[RightAngleBracket], \[LeftAngleBracket]Z\
\[RightAngleBracket]\>\""}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[6]:=",
 CellID->743762978,ExpressionUUID->"6e604fd2-a166-47bb-86de-025cb0df3401"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJw11AlQ1FUcwHGu5ZZbxGVhL1IjVJRiILL3I0Ik5JBEEbHW5DAENy6LFeRw
MYE4hF0gsYkl5JwQEAQhd2VYIQgoQ+SIMxyQAoQ2kSXSpP35m9nZ+c//vc+b
+b6dZX7C9Q1WUVJSCn752fh+Nc9fbMwEufr1xtwmWcvLulYDY/jcReKkzsEH
q0fIm3Yb00/mf57V4bQ+xPfDJCKREzwIvxKFNklyA9l2tovduH6aCOpFNKtd
bSQ0ZGNmiFuQtWtiZQ3unyP3Z3zPy7T5kt6ejZknwmbDsxYZ9RKFt0RmIvjN
YdvvShTrl8mhVL1sWcs9icKXkWLre0uRM124/28ScstcxBb1SBTnrZAqQ8ub
q8u96K2SgOvynN6FXvTkxPGD01egsQe9f0i36JmyS1Q3euvki2+Zbql+neg9
JysfXtg5mteOnhJMlbtOxnaKcb0SZGZnaTY8bURfGRZl0ss82yrcrwID50c0
BLty8TxViPI/mFewno791ICqJqRs6yslCk8NfMcZtsr+tdiLAlmSDj+BfiP2
VAe3ImmFjNeMvTXApl40FpPfgp4m2BTE0n3CW9HThCm2PeeRUSt6WlBj8cvF
iqrb6GmDTfXT9JnjTejpgObCDfcThxvQ04U9BXP8aWkterpQYv1bmLu4Er1N
ME91vGFWLkJPD5oMYva378tDTx/OaCf4HYvkomcAp5z712Wv87GPAZyg2RwT
B+RjTwPI0ROaRrsVS/7fbmcIDtfXFg7sK8W+hrDSk3bygXI53ocRuL8V1yAQ
VqBnBKvqRSJXSiV6RqBSm/hoz+kK7G8Mg4OyOufxMvSMQSvVqHwisxQ9E3hM
/3S0VyRCzwSKI+LklKxr6JlAlVW0p7ufEL3N4PDuWq10MgO9zXCJItdwlPDQ
M4VD2+M/upnOwj6mEDZx7u7eA3HY0xT6/JOMm7y+xF5bgOedcSdZJQf7bgFD
YVN8oFce9jODB+aFQy0pQvTMYODPz+bOfZePnhnkhHl/v0OSj95WGOnM7Exb
EKK3Fd57p9u1xFOAHhWe2L/Ge6iaix4V+nZ3jA9zs9CjQkq20MFl22X0zKFQ
fGWiLj4ZPXNYkYvVtVJi0aNBR/fvyTVzHPRoQKeeSmJnemI/GjDTyKy6SQT2
s4Afqk1cdko/x34WQPvjfUrAjkTsZwm+8f1DSR4peB+WoLt3wHtO9dX/hyX4
iI4uPm7no0eHIKlpUkgRHz06KLe97WRVchE9BmyS+zvorCTj74sBLsJmeVtU
IvoMyLnwr/czJg/3M8BrCgb1XGPwPAYIoofUbnmEo8eEqaM/XSs35qDHBDpt
qLs4wRk9Juw+OWXmkeeOvZgQtN/pq8K2j7EvE3gWgemz90OxHwuWElvO/6hz
lig8Fvhx17554RSJPVngKQ7rDE+PQo8FjvoJaXfkUeixYH7YvKv2ahR6bDiy
XpYp5kfi/bEhj61ro1bJRY8NQX/VUd84fAY9NgizucenvULQe/n8ZDSyfYyD
nhX4lAnsQy8dIf8BfY7BLA==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJxd0nswXFccwPFtIiH1WBabtV57Lek000SREMGenxglyKQeIeKtEcFEN0J1
SYtIPGc3beNRYZKl9UhUspg0CDaKKqUsYioeUZotQ6dIol4jre4v//Q3c2fn
zj3nc+5871LhH3tF7KDRaBH/Xtu//5+bRdvTSNjTM8zU9xuI4r6bRNEl7zKE
P5JDVtszRIYNZ4NS2P34fJTUinwu+v48SBTKFNnz6NRy5uowrp8hg88W2v1Y
IyTy3PbIiUhEsfqPjOD+OaK0VFcyz39C+nq3Z4E0vU4y/nVyCL1F4mR98vPd
FTJcv0RE3W49V572of+C9Pv8ws5v7ML9L0mItRXf3LYNz1sh4S3DwhW3B+it
ksMq1+IrNUvRWyPOpiEhQ2M5UoW3QdKafQXrr6qlCm+T7C/PL09UfihVeFtk
/ISlfPZ4qxSzgVSQ/zxV1obraeC/kc3TvtYuVfhvwQ39x2b9zh24fwfQPVYY
atwOPG8nnOQnjYxYtaOnBDfH2TTX/DeeEnDu2vRmyVrR2wX7Si8MJX7biN5u
sGHmfra0UI+eMlTVL3rZy6vRU4GVZvEl2fxt9FRgwmq3rQb9Cnp7wJTemJXE
ysJeb4NbonKNXdkt7KsKmvbfBNTpV2I/Nfhg9PSqxtEa7K0GAXx16VyPBHuq
g0H8h0/imXXoacCfux4fHsmsQ48OLrMdCzzzOvQ0oThO4i3g1uJ6TfjbPeZM
E+0++pqgJ3Evie65S/7bbqUFcV8yPvWUl+N5WrC5YF4RWyhGjwGT6eKBYIcC
9BjwsNCwQm06Az0GfHfEo++9AG98H20otTaS1lqkYg9t6I5g7uNYfIH9dEDV
b6DLbKIAe+uAz9r10Zb1YuypA81ekRmqybexvy70r5+llUnE6OlCbKjn19FT
YvSYwJPYqGQHidFjgolrbHDW5VvoMcExvi2Ue7QYvb3gqLVF8Q4WorcXnnFt
Fjvyv0KPBfO8j7KVAnLRY4HlT5VFQSFp6LFA+iiwvkkUi54etOvGfG9X7IL9
9GCUm3tH7H0J+7EhmJpuaLuXiv3Y8MLMbCkv8E0/NgiM5NX+RTnYTx+a3X2Z
iYFC9PThPOWkG1wjQs8Aju237XlQKkLPAMJLeK+oACF6BpCWbTnVrpSLniF0
nxFYFAxkomcIYSETF354mY6eEYwer8xmeaWgZwRCv5KoEddP0DMCme3z9OKY
aPSMIfm86PrBSU/0jME9wv5c5JYH9uOARTVzzqUoQqr4f3GASii84TTGx54c
qDrxOi+6KgH7c+A3U23ndygB9uWAZww9R/1YMnoUcP7KoU/pXkaPAiE8be2q
T0aPAkFKYLO1QxJ6FJSdim3LG0tEj4IYbb7yYEs8eiZQ2mljs6l7ET0TMDZL
cBg/EI2eCfxxtXkr+Pcw9EygYXGZ53/aGz0TcJD0Ww5kHECPC2txbkENPGfs
wwXH5Z2RrmZ+2JMLMrvezjudodiLC/JD9/kbvWexLxcK7mmBqDgSv4cphKnP
lJhbRpF/ACaqsIE=
          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJxd0ntQVGUYBvCVAAERuSywXBb2gl3kkoCltozfi1hoXALNIAWHUKBmRwkR
NK8Qo8Iicmd3yyIamWqDKRQwiNxgYS+wEkhqZZELMxRyESZmWWRZkvze/aNn
5syZb877/N4zZw43NXN3mgWDwUh7cq3c/5+PpCtpI3ETwyXbz1TKn541ZGf1
xO4/Sj+XbwpdyRCZIftPRolk9PmvpLXJNSlI9638qfKAdPx+3Wrn+mY6P0qq
D+RODXjckGekr2SMLE/HCvcr22h/nFQUmN7pDO6Q39KuZJLEOCi1L6XepN4M
KRhqj5MF/UjnZ8ntuR4xi9lJ/X/IMcPHZU2jnbQ/R9LrVb5FtV10n56k9jlc
ytuloJ6BBF4UvRE1qqDeAlG/lZGdfaSbeoskpOl4fvJkN/WMpKv3umv0gR7q
mYhxdR/rYE8P9RhgN2bfIOMp6TwD1OL1/U7HldRfBSzBMfn7CiXtW0C4yCug
2EZF9z0D1p8lcp0jVdSzBGOM31D9ORX1LGE68quX711TUc8K2rWynBd0KupZ
w1RK5TaXNWrqrYa36wrnljeqqWcD8xGlXXF71NSzgYqteVXJR9XUswXbW9GG
nMtq6tlB4/jtcd0X6K2BUz1RxSM30bOHTz8I1F4bQs8exF7+jMIx9NZCyNa7
GRXz6DnANjVpWLLWUG8d/P36ndhZpoZ6jqDrljiUczV03hFC77VGLAVoqO8I
E7K0kD2bNfL/6qFOoF96sLcRNHSfE3hmRVzl70LPGUqmHvb1xaHnDJLDVsK2
BPScYfLUz+GmZHwfF/gt+PkU2UH0XCBZcCFW+y56TGDGp4dmHUaPCQ2lo3NX
s9BjwtzyloSjOei5wqwwgTV6Aj1XEATdt2GcRs8Ntj+q4w2eRc8NFgNf+SQ5
Hz030D9KYTQUoOcO7IWOTV3n0XOH2PcsKusvoseCjqL62X1F6LFgeIQ0jYnQ
Y4EuSaWKvoSeBww829xbVoKeB0gPvWhouYyeJzRuSCXyUvQ8YdrxceQ3Zeh5
wkCt/kRhOXpeUGI1aIquQM8LLvyydtBUgZ43DPtH3qitRM8bxH9+HxNchZ43
ON3PtG2pQo8NPt1/CQKq0WPDa4oiN0k1ej6gN37duFCNng/sq0pcjK9BzwfG
Yvp1dTXo+YKloDvwYQ16vjAvyJX4i9HjgFF8TpMuxv+LA9nCwsQrYvQ5kLul
t18rxj4Hks5kfmkQ4z4OLN4Z3MuRoMeFH+5Kw3ZI0OMCu0Dx3SEJelzoe1zE
/lCCHhfS28Jar0jQ44J7MUPVbPZ4cNrvbEmv2ePBRnZe+LDZ40GLLt91xuzx
wGQXvJkhRY8HqzJGfnKQoseHDcOLlt5S/D580O940/CcFD0+xK8TqUOk6PGh
XRFfHmb2+BA53yF81ez5QWLhySMxT87/Aq8L9Jk=
          "]]},
        Annotation[#, "Charting`Private`Tag#3"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Line[CompressedData["
1:eJw11AlQ1FUcwHGu5ZZbxGVhL1IjVJRiILL3I0Ik5JBEEbHW5DAENy6LFeRw
MYE4hF0gsYkl5JwQEAQhd2VYIQgoQ+SIMxyQAoQ2kSXSpP35m9nZ+c//vc+b
+b6dZX7C9Q1WUVJSCn752fh+Nc9fbMwEufr1xtwmWcvLulYDY/jcReKkzsEH
q0fIm3Yb00/mf57V4bQ+xPfDJCKREzwIvxKFNklyA9l2tovduH6aCOpFNKtd
bSQ0ZGNmiFuQtWtiZQ3unyP3Z3zPy7T5kt6ejZknwmbDsxYZ9RKFt0RmIvjN
YdvvShTrl8mhVL1sWcs9icKXkWLre0uRM124/28ScstcxBb1SBTnrZAqQ8ub
q8u96K2SgOvynN6FXvTkxPGD01egsQe9f0i36JmyS1Q3euvki2+Zbql+neg9
JysfXtg5mteOnhJMlbtOxnaKcb0SZGZnaTY8bURfGRZl0ss82yrcrwID50c0
BLty8TxViPI/mFewno791ICqJqRs6yslCk8NfMcZtsr+tdiLAlmSDj+BfiP2
VAe3ImmFjNeMvTXApl40FpPfgp4m2BTE0n3CW9HThCm2PeeRUSt6WlBj8cvF
iqrb6GmDTfXT9JnjTejpgObCDfcThxvQ04U9BXP8aWkterpQYv1bmLu4Er1N
ME91vGFWLkJPD5oMYva378tDTx/OaCf4HYvkomcAp5z712Wv87GPAZyg2RwT
B+RjTwPI0ROaRrsVS/7fbmcIDtfXFg7sK8W+hrDSk3bygXI53ocRuL8V1yAQ
VqBnBKvqRSJXSiV6RqBSm/hoz+kK7G8Mg4OyOufxMvSMQSvVqHwisxQ9E3hM
/3S0VyRCzwSKI+LklKxr6JlAlVW0p7ufEL3N4PDuWq10MgO9zXCJItdwlPDQ
M4VD2+M/upnOwj6mEDZx7u7eA3HY0xT6/JOMm7y+xF5bgOedcSdZJQf7bgFD
YVN8oFce9jODB+aFQy0pQvTMYODPz+bOfZePnhnkhHl/v0OSj95WGOnM7Exb
EKK3Fd57p9u1xFOAHhWe2L/Ge6iaix4V+nZ3jA9zs9CjQkq20MFl22X0zKFQ
fGWiLj4ZPXNYkYvVtVJi0aNBR/fvyTVzHPRoQKeeSmJnemI/GjDTyKy6SQT2
s4Afqk1cdko/x34WQPvjfUrAjkTsZwm+8f1DSR4peB+WoLt3wHtO9dX/hyX4
iI4uPm7no0eHIKlpUkgRHz06KLe97WRVchE9BmyS+zvorCTj74sBLsJmeVtU
IvoMyLnwr/czJg/3M8BrCgb1XGPwPAYIoofUbnmEo8eEqaM/XSs35qDHBDpt
qLs4wRk9Juw+OWXmkeeOvZgQtN/pq8K2j7EvE3gWgemz90OxHwuWElvO/6hz
lig8Fvhx17554RSJPVngKQ7rDE+PQo8FjvoJaXfkUeixYH7YvKv2ahR6bDiy
XpYp5kfi/bEhj61ro1bJRY8NQX/VUd84fAY9NgizucenvULQe/n8ZDSyfYyD
nhX4lAnsQy8dIf8BfY7BLA==
              "]]}, "Charting`Private`Tag#1"], 
           Annotation[{
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Line[CompressedData["
1:eJxd0nswXFccwPFtIiH1WBabtV57Lek000SREMGenxglyKQeIeKtEcFEN0J1
SYtIPGc3beNRYZKl9UhUspg0CDaKKqUsYioeUZotQ6dIol4jre4v//Q3c2fn
zj3nc+5871LhH3tF7KDRaBH/Xtu//5+bRdvTSNjTM8zU9xuI4r6bRNEl7zKE
P5JDVtszRIYNZ4NS2P34fJTUinwu+v48SBTKFNnz6NRy5uowrp8hg88W2v1Y
IyTy3PbIiUhEsfqPjOD+OaK0VFcyz39C+nq3Z4E0vU4y/nVyCL1F4mR98vPd
FTJcv0RE3W49V572of+C9Pv8ws5v7ML9L0mItRXf3LYNz1sh4S3DwhW3B+it
ksMq1+IrNUvRWyPOpiEhQ2M5UoW3QdKafQXrr6qlCm+T7C/PL09UfihVeFtk
/ISlfPZ4qxSzgVSQ/zxV1obraeC/kc3TvtYuVfhvwQ39x2b9zh24fwfQPVYY
atwOPG8nnOQnjYxYtaOnBDfH2TTX/DeeEnDu2vRmyVrR2wX7Si8MJX7biN5u
sGHmfra0UI+eMlTVL3rZy6vRU4GVZvEl2fxt9FRgwmq3rQb9Cnp7wJTemJXE
ysJeb4NbonKNXdkt7KsKmvbfBNTpV2I/Nfhg9PSqxtEa7K0GAXx16VyPBHuq
g0H8h0/imXXoacCfux4fHsmsQ48OLrMdCzzzOvQ0oThO4i3g1uJ6TfjbPeZM
E+0++pqgJ3Evie65S/7bbqUFcV8yPvWUl+N5WrC5YF4RWyhGjwGT6eKBYIcC
9BjwsNCwQm06Az0GfHfEo++9AG98H20otTaS1lqkYg9t6I5g7uNYfIH9dEDV
b6DLbKIAe+uAz9r10Zb1YuypA81ekRmqybexvy70r5+llUnE6OlCbKjn19FT
YvSYwJPYqGQHidFjgolrbHDW5VvoMcExvi2Ue7QYvb3gqLVF8Q4WorcXnnFt
Fjvyv0KPBfO8j7KVAnLRY4HlT5VFQSFp6LFA+iiwvkkUi54etOvGfG9X7IL9
9GCUm3tH7H0J+7EhmJpuaLuXiv3Y8MLMbCkv8E0/NgiM5NX+RTnYTx+a3X2Z
iYFC9PThPOWkG1wjQs8Aju237XlQKkLPAMJLeK+oACF6BpCWbTnVrpSLniF0
nxFYFAxkomcIYSETF354mY6eEYwer8xmeaWgZwRCv5KoEddP0DMCme3z9OKY
aPSMIfm86PrBSU/0jME9wv5c5JYH9uOARTVzzqUoQqr4f3GASii84TTGx54c
qDrxOi+6KgH7c+A3U23ndygB9uWAZww9R/1YMnoUcP7KoU/pXkaPAiE8be2q
T0aPAkFKYLO1QxJ6FJSdim3LG0tEj4IYbb7yYEs8eiZQ2mljs6l7ET0TMDZL
cBg/EI2eCfxxtXkr+Pcw9EygYXGZ53/aGz0TcJD0Ww5kHECPC2txbkENPGfs
wwXH5Z2RrmZ+2JMLMrvezjudodiLC/JD9/kbvWexLxcK7mmBqDgSv4cphKnP
lJhbRpF/ACaqsIE=
              "]]}, "Charting`Private`Tag#2"], 
           Annotation[{
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Line[CompressedData["
1:eJxd0ntQVGUYBvCVAAERuSywXBb2gl3kkoCltozfi1hoXALNIAWHUKBmRwkR
NK8Qo8Iicmd3yyIamWqDKRQwiNxgYS+wEkhqZZELMxRyESZmWWRZkvze/aNn
5syZb877/N4zZw43NXN3mgWDwUh7cq3c/5+PpCtpI3ETwyXbz1TKn541ZGf1
xO4/Sj+XbwpdyRCZIftPRolk9PmvpLXJNSlI9638qfKAdPx+3Wrn+mY6P0qq
D+RODXjckGekr2SMLE/HCvcr22h/nFQUmN7pDO6Q39KuZJLEOCi1L6XepN4M
KRhqj5MF/UjnZ8ntuR4xi9lJ/X/IMcPHZU2jnbQ/R9LrVb5FtV10n56k9jlc
ytuloJ6BBF4UvRE1qqDeAlG/lZGdfaSbeoskpOl4fvJkN/WMpKv3umv0gR7q
mYhxdR/rYE8P9RhgN2bfIOMp6TwD1OL1/U7HldRfBSzBMfn7CiXtW0C4yCug
2EZF9z0D1p8lcp0jVdSzBGOM31D9ORX1LGE68quX711TUc8K2rWynBd0KupZ
w1RK5TaXNWrqrYa36wrnljeqqWcD8xGlXXF71NSzgYqteVXJR9XUswXbW9GG
nMtq6tlB4/jtcd0X6K2BUz1RxSM30bOHTz8I1F4bQs8exF7+jMIx9NZCyNa7
GRXz6DnANjVpWLLWUG8d/P36ndhZpoZ6jqDrljiUczV03hFC77VGLAVoqO8I
E7K0kD2bNfL/6qFOoF96sLcRNHSfE3hmRVzl70LPGUqmHvb1xaHnDJLDVsK2
BPScYfLUz+GmZHwfF/gt+PkU2UH0XCBZcCFW+y56TGDGp4dmHUaPCQ2lo3NX
s9BjwtzyloSjOei5wqwwgTV6Aj1XEATdt2GcRs8Ntj+q4w2eRc8NFgNf+SQ5
Hz030D9KYTQUoOcO7IWOTV3n0XOH2PcsKusvoseCjqL62X1F6LFgeIQ0jYnQ
Y4EuSaWKvoSeBww829xbVoKeB0gPvWhouYyeJzRuSCXyUvQ8YdrxceQ3Zeh5
wkCt/kRhOXpeUGI1aIquQM8LLvyydtBUgZ43DPtH3qitRM8bxH9+HxNchZ43
ON3PtG2pQo8NPt1/CQKq0WPDa4oiN0k1ej6gN37duFCNng/sq0pcjK9BzwfG
Yvp1dTXo+YKloDvwYQ16vjAvyJX4i9HjgFF8TpMuxv+LA9nCwsQrYvQ5kLul
t18rxj4Hks5kfmkQ4z4OLN4Z3MuRoMeFH+5Kw3ZI0OMCu0Dx3SEJelzoe1zE
/lCCHhfS28Jar0jQ44J7MUPVbPZ4cNrvbEmv2ePBRnZe+LDZ40GLLt91xuzx
wGQXvJkhRY8HqzJGfnKQoseHDcOLlt5S/D580O940/CcFD0+xK8TqUOk6PGh
XRFfHmb2+BA53yF81ez5QWLhySMxT87/Aq8L9Jk=
              "]]}, "Charting`Private`Tag#3"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0, 10.}, {-0.23394688363999921`, 
              0.4999999999999999}}, "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
            "Axes" -> {False, False}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[1, 90]], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[2], 
               Thickness[Large]], 
              Directive[
               PointSize[
                Rational[1, 90]], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[2], 
               Thickness[Large]], 
              Directive[
               PointSize[
                Rational[1, 90]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2], 
               Thickness[Large]]}, 
            "HighlightLabelingFunctions" -> <|
             "CoordinatesToolOptions" -> Identity, 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0, 10.}, {-0.23394688363999921`, 
             0.4999999999999999}}, "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
           "Axes" -> {False, False}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              Thickness[Large]]}, 
           "HighlightLabelingFunctions" -> <|
            "CoordinatesToolOptions" -> Identity, 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJw11AlQ1FUcwHGu5ZZbxGVhL1IjVJRiILL3I0Ik5JBEEbHW5DAENy6LFeRw
MYE4hF0gsYkl5JwQEAQhd2VYIQgoQ+SIMxyQAoQ2kSXSpP35m9nZ+c//vc+b
+b6dZX7C9Q1WUVJSCn752fh+Nc9fbMwEufr1xtwmWcvLulYDY/jcReKkzsEH
q0fIm3Yb00/mf57V4bQ+xPfDJCKREzwIvxKFNklyA9l2tovduH6aCOpFNKtd
bSQ0ZGNmiFuQtWtiZQ3unyP3Z3zPy7T5kt6ejZknwmbDsxYZ9RKFt0RmIvjN
YdvvShTrl8mhVL1sWcs9icKXkWLre0uRM124/28ScstcxBb1SBTnrZAqQ8ub
q8u96K2SgOvynN6FXvTkxPGD01egsQe9f0i36JmyS1Q3euvki2+Zbql+neg9
JysfXtg5mteOnhJMlbtOxnaKcb0SZGZnaTY8bURfGRZl0ss82yrcrwID50c0
BLty8TxViPI/mFewno791ICqJqRs6yslCk8NfMcZtsr+tdiLAlmSDj+BfiP2
VAe3ImmFjNeMvTXApl40FpPfgp4m2BTE0n3CW9HThCm2PeeRUSt6WlBj8cvF
iqrb6GmDTfXT9JnjTejpgObCDfcThxvQ04U9BXP8aWkterpQYv1bmLu4Er1N
ME91vGFWLkJPD5oMYva378tDTx/OaCf4HYvkomcAp5z712Wv87GPAZyg2RwT
B+RjTwPI0ROaRrsVS/7fbmcIDtfXFg7sK8W+hrDSk3bygXI53ocRuL8V1yAQ
VqBnBKvqRSJXSiV6RqBSm/hoz+kK7G8Mg4OyOufxMvSMQSvVqHwisxQ9E3hM
/3S0VyRCzwSKI+LklKxr6JlAlVW0p7ufEL3N4PDuWq10MgO9zXCJItdwlPDQ
M4VD2+M/upnOwj6mEDZx7u7eA3HY0xT6/JOMm7y+xF5bgOedcSdZJQf7bgFD
YVN8oFce9jODB+aFQy0pQvTMYODPz+bOfZePnhnkhHl/v0OSj95WGOnM7Exb
EKK3Fd57p9u1xFOAHhWe2L/Ge6iaix4V+nZ3jA9zs9CjQkq20MFl22X0zKFQ
fGWiLj4ZPXNYkYvVtVJi0aNBR/fvyTVzHPRoQKeeSmJnemI/GjDTyKy6SQT2
s4Afqk1cdko/x34WQPvjfUrAjkTsZwm+8f1DSR4peB+WoLt3wHtO9dX/hyX4
iI4uPm7no0eHIKlpUkgRHz06KLe97WRVchE9BmyS+zvorCTj74sBLsJmeVtU
IvoMyLnwr/czJg/3M8BrCgb1XGPwPAYIoofUbnmEo8eEqaM/XSs35qDHBDpt
qLs4wRk9Juw+OWXmkeeOvZgQtN/pq8K2j7EvE3gWgemz90OxHwuWElvO/6hz
lig8Fvhx17554RSJPVngKQ7rDE+PQo8FjvoJaXfkUeixYH7YvKv2ahR6bDiy
XpYp5kfi/bEhj61ro1bJRY8NQX/VUd84fAY9NgizucenvULQe/n8ZDSyfYyD
nhX4lAnsQy8dIf8BfY7BLA==
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJxd0nswXFccwPFtIiH1WBabtV57Lek000SREMGenxglyKQeIeKtEcFEN0J1
SYtIPGc3beNRYZKl9UhUspg0CDaKKqUsYioeUZotQ6dIol4jre4v//Q3c2fn
zj3nc+5871LhH3tF7KDRaBH/Xtu//5+bRdvTSNjTM8zU9xuI4r6bRNEl7zKE
P5JDVtszRIYNZ4NS2P34fJTUinwu+v48SBTKFNnz6NRy5uowrp8hg88W2v1Y
IyTy3PbIiUhEsfqPjOD+OaK0VFcyz39C+nq3Z4E0vU4y/nVyCL1F4mR98vPd
FTJcv0RE3W49V572of+C9Pv8ws5v7ML9L0mItRXf3LYNz1sh4S3DwhW3B+it
ksMq1+IrNUvRWyPOpiEhQ2M5UoW3QdKafQXrr6qlCm+T7C/PL09UfihVeFtk
/ISlfPZ4qxSzgVSQ/zxV1obraeC/kc3TvtYuVfhvwQ39x2b9zh24fwfQPVYY
atwOPG8nnOQnjYxYtaOnBDfH2TTX/DeeEnDu2vRmyVrR2wX7Si8MJX7biN5u
sGHmfra0UI+eMlTVL3rZy6vRU4GVZvEl2fxt9FRgwmq3rQb9Cnp7wJTemJXE
ysJeb4NbonKNXdkt7KsKmvbfBNTpV2I/Nfhg9PSqxtEa7K0GAXx16VyPBHuq
g0H8h0/imXXoacCfux4fHsmsQ48OLrMdCzzzOvQ0oThO4i3g1uJ6TfjbPeZM
E+0++pqgJ3Evie65S/7bbqUFcV8yPvWUl+N5WrC5YF4RWyhGjwGT6eKBYIcC
9BjwsNCwQm06Az0GfHfEo++9AG98H20otTaS1lqkYg9t6I5g7uNYfIH9dEDV
b6DLbKIAe+uAz9r10Zb1YuypA81ekRmqybexvy70r5+llUnE6OlCbKjn19FT
YvSYwJPYqGQHidFjgolrbHDW5VvoMcExvi2Ue7QYvb3gqLVF8Q4WorcXnnFt
Fjvyv0KPBfO8j7KVAnLRY4HlT5VFQSFp6LFA+iiwvkkUi54etOvGfG9X7IL9
9GCUm3tH7H0J+7EhmJpuaLuXiv3Y8MLMbCkv8E0/NgiM5NX+RTnYTx+a3X2Z
iYFC9PThPOWkG1wjQs8Aju237XlQKkLPAMJLeK+oACF6BpCWbTnVrpSLniF0
nxFYFAxkomcIYSETF354mY6eEYwer8xmeaWgZwRCv5KoEddP0DMCme3z9OKY
aPSMIfm86PrBSU/0jME9wv5c5JYH9uOARTVzzqUoQqr4f3GASii84TTGx54c
qDrxOi+6KgH7c+A3U23ndygB9uWAZww9R/1YMnoUcP7KoU/pXkaPAiE8be2q
T0aPAkFKYLO1QxJ6FJSdim3LG0tEj4IYbb7yYEs8eiZQ2mljs6l7ET0TMDZL
cBg/EI2eCfxxtXkr+Pcw9EygYXGZ53/aGz0TcJD0Ww5kHECPC2txbkENPGfs
wwXH5Z2RrmZ+2JMLMrvezjudodiLC/JD9/kbvWexLxcK7mmBqDgSv4cphKnP
lJhbRpF/ACaqsIE=
          "]]}, "Charting`Private`Tag#2"], 
       Annotation[{
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJxd0ntQVGUYBvCVAAERuSywXBb2gl3kkoCltozfi1hoXALNIAWHUKBmRwkR
NK8Qo8Iicmd3yyIamWqDKRQwiNxgYS+wEkhqZZELMxRyESZmWWRZkvze/aNn
5syZb877/N4zZw43NXN3mgWDwUh7cq3c/5+PpCtpI3ETwyXbz1TKn541ZGf1
xO4/Sj+XbwpdyRCZIftPRolk9PmvpLXJNSlI9638qfKAdPx+3Wrn+mY6P0qq
D+RODXjckGekr2SMLE/HCvcr22h/nFQUmN7pDO6Q39KuZJLEOCi1L6XepN4M
KRhqj5MF/UjnZ8ntuR4xi9lJ/X/IMcPHZU2jnbQ/R9LrVb5FtV10n56k9jlc
ytuloJ6BBF4UvRE1qqDeAlG/lZGdfaSbeoskpOl4fvJkN/WMpKv3umv0gR7q
mYhxdR/rYE8P9RhgN2bfIOMp6TwD1OL1/U7HldRfBSzBMfn7CiXtW0C4yCug
2EZF9z0D1p8lcp0jVdSzBGOM31D9ORX1LGE68quX711TUc8K2rWynBd0KupZ
w1RK5TaXNWrqrYa36wrnljeqqWcD8xGlXXF71NSzgYqteVXJR9XUswXbW9GG
nMtq6tlB4/jtcd0X6K2BUz1RxSM30bOHTz8I1F4bQs8exF7+jMIx9NZCyNa7
GRXz6DnANjVpWLLWUG8d/P36ndhZpoZ6jqDrljiUczV03hFC77VGLAVoqO8I
E7K0kD2bNfL/6qFOoF96sLcRNHSfE3hmRVzl70LPGUqmHvb1xaHnDJLDVsK2
BPScYfLUz+GmZHwfF/gt+PkU2UH0XCBZcCFW+y56TGDGp4dmHUaPCQ2lo3NX
s9BjwtzyloSjOei5wqwwgTV6Aj1XEATdt2GcRs8Ntj+q4w2eRc8NFgNf+SQ5
Hz030D9KYTQUoOcO7IWOTV3n0XOH2PcsKusvoseCjqL62X1F6LFgeIQ0jYnQ
Y4EuSaWKvoSeBww829xbVoKeB0gPvWhouYyeJzRuSCXyUvQ8YdrxceQ3Zeh5
wkCt/kRhOXpeUGI1aIquQM8LLvyydtBUgZ43DPtH3qitRM8bxH9+HxNchZ43
ON3PtG2pQo8NPt1/CQKq0WPDa4oiN0k1ej6gN37duFCNng/sq0pcjK9BzwfG
Yvp1dTXo+YKloDvwYQ16vjAvyJX4i9HjgFF8TpMuxv+LA9nCwsQrYvQ5kLul
t18rxj4Hks5kfmkQ4z4OLN4Z3MuRoMeFH+5Kw3ZI0OMCu0Dx3SEJelzoe1zE
/lCCHhfS28Jar0jQ44J7MUPVbPZ4cNrvbEmv2ePBRnZe+LDZ40GLLt91xuzx
wGQXvJkhRY8HqzJGfnKQoseHDcOLlt5S/D580O940/CcFD0+xK8TqUOk6PGh
XRFfHmb2+BA53yF81ez5QWLhySMxT87/Aq8L9Jk=
          "]]}, "Charting`Private`Tag#3"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{0, 10.}, {-0.23394688363999921`, 
          0.4999999999999999}}, "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
        "Axes" -> {False, False}, "LabelStyle" -> {}, "AspectRatio" -> 
        GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           Thickness[Large]]}, 
        "HighlightLabelingFunctions" -> <|
         "CoordinatesToolOptions" -> Identity, 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\"", HoldForm], 
      TraditionalForm], None}, {
     FormBox[
      TagBox["\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) t\"", HoldForm], 
      TraditionalForm], None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-0.23394688363999921`, 0.4999999999999999}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[6]=",
 CellID->1335640062,ExpressionUUID->"eeee1f15-cbe0-4715-8841-ee6a5af10002"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "0a32ef23-5c64-4c5d-b3c4-5ed329f33391"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->818700002,ExpressionUUID->"5809209a-25da-421f-a114-344dd0294c3b"],

Cell["\<\
Let us consider a single qubit and solve a master equation specified in the \
Pauli operators.\
\>", "ExampleText",
 CellID->1536645940,ExpressionUUID->"e9db8f73-e254-4d14-9096-3aebb3a2d021"],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qubit", ",", "S"}], "]"}]], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[1]:=",
 CellID->1470681252,ExpressionUUID->"3eb8de68-ff12-43ca-92ed-b078bac20d3d"],

Cell["Set an initial state.", "ExampleText",
 CellID->2051494922,ExpressionUUID->"c2b3c2bc-03fc-4de2-be54-a8036c8aa330"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"in", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"S", "[", "1", "]"}]}], ")"}], "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"in", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[2]:=",
 CellID->963207285,ExpressionUUID->"8279e005-918c-459a-ae30-4215b4814db2"],

Cell[BoxData[
 TagBox[
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     InterpretationBox[
      TemplateBox[{"S", 
        TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"X\""}, 
         "RowWithSeparators"]},
       "Superscript"],
      $CellContext`S[1]]}], ")"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->1737218962,ExpressionUUID->"7ea26a7e-2a8c-4609-94c8-cea4a995ba04"]
}, Open  ]],

Cell["Take an effective Hamiltonian.", "ExampleText",
 CellID->894984484,ExpressionUUID->"52cb4fb5-2ba8-463c-bfd6-4fb124016409"],

Cell[BoxData[
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"S", "[", "3", "]"}]}], ";"}]], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[3]:=",
 CellID->1701417680,ExpressionUUID->"35623ff6-7f20-4f8d-beba-afdd941ea1f0"],

Cell["\<\
Take the quantum jump operators that are responsible for particular quantum \
decoherence processes.\
\>", "ExampleText",
 CellID->1957216028,ExpressionUUID->"098ba08d-0cd3-4107-8c73-62dd26fe2a34"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "]"}], " ", 
     RowBox[{"S", "[", "4", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "]"}], 
     RowBox[{"S", "[", "5", "]"}]}]}], "}"}]}]}], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[4]:=",
 CellID->682224499,ExpressionUUID->"bcabe75c-21a0-4b71-b10a-b55f5b1f94e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     TemplateBox[{"S", 
       TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"+\""}, 
        "RowWithSeparators"]},
      "Superscript"],
     $CellContext`S[4]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "\"+\""},
        "RowWithSeparators"]],
      $CellContext`\[CapitalGamma]["+"]]]}], ",", 
   RowBox[{
    InterpretationBox[
     TemplateBox[{"S", 
       TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"-\""}, 
        "RowWithSeparators"]},
      "Superscript"],
     $CellContext`S[5]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "\"-\""},
        "RowWithSeparators"]],
      $CellContext`\[CapitalGamma]["-"]]]}]}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->759363482,ExpressionUUID->"ea672a14-83fd-4045-8a8f-a00a462f8785"]
}, Open  ]],

Cell["Solve the quantum master equation.", "ExampleText",
 CellID->1153262109,ExpressionUUID->"35310c28-743a-4853-9bfd-23a72e174b61"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "rho", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rho", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ops", "=", 
        RowBox[{"Prepend", "[", 
         RowBox[{"opL", ",", "opH"}], "]"}]}], ",", "\[IndentingNewLine]", 
       "\[CapitalGamma]"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", ".3"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", ".7"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"ops", ",", "in", ",", "t"}], "]"}], "//", "Chop"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[5]:=",
 CellID->719143774,ExpressionUUID->"d667fada-5002-4736-9872-927b5f48dcb7"],

Cell["Take a look at the solution as a function of time.", "ExampleText",
 CellID->1738183371,ExpressionUUID->"bae39644-7bdf-4c99-8e8e-dbe1033ad290"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rho", "[", "t", "]"}]], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[6]:=",
 CellID->711450696,ExpressionUUID->"fae3ea3f-de95-4364-b5c8-0636065ea088"],

Cell[BoxData[
 RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "0.2`"}], "+", 
     RowBox[{"0.2`", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]]}]}], ")"}], " ", 
   InterpretationBox[
    TemplateBox[{"S", 
      TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"Z\""}, 
       "RowWithSeparators"]},
     "Superscript"],
    $CellContext`S[3]]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
   InterpretationBox[
    TemplateBox[{"S", 
      TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"+\""}, 
       "RowWithSeparators"]},
     "Superscript"],
    $CellContext`S[4]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.4999999999999999`", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
   InterpretationBox[
    TemplateBox[{"S", 
      TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"-\""}, 
       "RowWithSeparators"]},
     "Superscript"],
    $CellContext`S[5]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.4999999999999999`", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}], 
    ")"}]}]}]], "Output",
 CellLabel->"Out[6]=",
 CellID->504766163,ExpressionUUID->"dfe6cb70-1f09-4690-ade1-774656b721ee"]
}, Open  ]],

Cell["\<\
For a physical interpretation, it is useful to get the Bloch vector \
corresponding to the density operator.\
\>", "ExampleText",
 CellID->473288516,ExpressionUUID->"03c21235-d928-43e2-b450-2ec4a8f21878"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"avgX", "[", "t_", "]"}], ",", 
    RowBox[{"avgY", "[", "t_", "]"}], ",", 
    RowBox[{"avgZ", "[", "t_", "]"}]}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{"Elaborate", "@", 
       RowBox[{"rho", "[", "t", "]"}]}], ",", "#"}], "]"}], "&"}], "/@", 
   RowBox[{"S", "@", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}]}]], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[7]:=",
 CellID->1210483635,ExpressionUUID->"a8584dde-b442-4647-8faa-fffcea32b859"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], ",", 
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.2`"}], "+", 
    RowBox[{"0.2`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]]}]}]}], 
  "}"}]], "Output",
 CellLabel->"Out[7]=",
 CellID->736813913,ExpressionUUID->"f74a180a-b04d-42a5-b3dc-d59200406034"]
}, Open  ]],

Cell["\<\
Plot each component of the Bloch vector as a function of time.\
\>", "ExampleText",
 CellID->1689424838,ExpressionUUID->"e0fd04a3-03d2-4c03-ab87-4bd7e967d4da"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgX", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgY", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgZ", "[", "t", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) t\>\"", 
      ",", "\"\<\[LeftAngleBracket]X\[RightAngleBracket], \
\[LeftAngleBracket]Y\[RightAngleBracket], \[LeftAngleBracket]Z\
\[RightAngleBracket]\>\""}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[8]:=",
 CellID->1754552550,ExpressionUUID->"0d88fc09-2a88-4c7c-a428-1a8a6b897ae3"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJw11AlQ1FUcwHGu5ZZbxGVhL1IjVJRiILL3I0Ik5JBEEbHW5DAENy6LFeRw
MYE4hF0gsYkl5JwQEAQhd2VYIQgoQ+SIMxyQAoQ2kSXSpP35m9nZ+c//vc+b
+b6dZX7C9Q1WUVJSCn752fh+Nc9fbMwEufr1xtwmWcvLulYDY/jcReKkzsEH
q0fIm3Yb00/mf57V4bQ+xPfDJCKREzwIvxKFNklyA9l2tovduH6aCOpFNKtd
bSQ0ZGNmiFuQtWtiZQ3unyP3Z3zPy7T5kt6ejZknwmbDsxYZ9RKFt0RmIvjN
YdvvShTrl8mhVL1sWcs9icKXkWLre0uRM124/28ScstcxBb1SBTnrZAqQ8ub
q8u96K2SgOvynN6FXvTkxPGD01egsQe9f0i36JmyS1Q3euvki2+Zbql+neg9
JysfXtg5mteOnhJMlbtOxnaKcb0SZGZnaTY8bURfGRZl0ss82yrcrwID50c0
BLty8TxViPI/mFewno791ICqJqRs6yslCk8NfMcZtsr+tdiLAlmSDj+BfiP2
VAe3ImmFjNeMvTXApl40FpPfgp4m2BTE0n3CW9HThCm2PeeRUSt6WlBj8cvF
iqrb6GmDTfXT9JnjTejpgObCDfcThxvQ04U9BXP8aWkterpQYv1bmLu4Er1N
ME91vGFWLkJPD5oMYva378tDTx/OaCf4HYvkomcAp5z712Wv87GPAZyg2RwT
B+RjTwPI0ROaRrsVS/7fbmcIDtfXFg7sK8W+hrDSk3bygXI53ocRuL8V1yAQ
VqBnBKvqRSJXSiV6RqBSm/hoz+kK7G8Mg4OyOufxMvSMQSvVqHwisxQ9E3hM
/3S0VyRCzwSKI+LklKxr6JlAlVW0p7ufEL3N4PDuWq10MgO9zXCJItdwlPDQ
M4VD2+M/upnOwj6mEDZx7u7eA3HY0xT6/JOMm7y+xF5bgOedcSdZJQf7bgFD
YVN8oFce9jODB+aFQy0pQvTMYODPz+bOfZePnhnkhHl/v0OSj95WGOnM7Exb
EKK3Fd57p9u1xFOAHhWe2L/Ge6iaix4V+nZ3jA9zs9CjQkq20MFl22X0zKFQ
fGWiLj4ZPXNYkYvVtVJi0aNBR/fvyTVzHPRoQKeeSmJnemI/GjDTyKy6SQT2
s4Afqk1cdko/x34WQPvjfUrAjkTsZwm+8f1DSR4peB+WoLt3wHtO9dX/hyX4
iI4uPm7no0eHIKlpUkgRHz06KLe97WRVchE9BmyS+zvorCTj74sBLsJmeVtU
IvoMyLnwr/czJg/3M8BrCgb1XGPwPAYIoofUbnmEo8eEqaM/XSs35qDHBDpt
qLs4wRk9Juw+OWXmkeeOvZgQtN/pq8K2j7EvE3gWgemz90OxHwuWElvO/6hz
lig8Fvhx17554RSJPVngKQ7rDE+PQo8FjvoJaXfkUeixYH7YvKv2ahR6bDiy
XpYp5kfi/bEhj61ro1bJRY8NQX/VUd84fAY9NgizucenvULQe/n8ZDSyfYyD
nhX4lAnsQy8dIf8BfY7BLA==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJxd0nswXFccwPFtIiH1WBabtV57Lek000SREMGenxglyKQeIeKtEcFEN0J1
SYtIPGc3beNRYZKl9UhUspg0CDaKKqUsYioeUZotQ6dIol4jre4v//Q3c2fn
zj3nc+5871LhH3tF7KDRaBH/Xtu//5+bRdvTSNjTM8zU9xuI4r6bRNEl7zKE
P5JDVtszRIYNZ4NS2P34fJTUinwu+v48SBTKFNnz6NRy5uowrp8hg88W2v1Y
IyTy3PbIiUhEsfqPjOD+OaK0VFcyz39C+nq3Z4E0vU4y/nVyCL1F4mR98vPd
FTJcv0RE3W49V572of+C9Pv8ws5v7ML9L0mItRXf3LYNz1sh4S3DwhW3B+it
ksMq1+IrNUvRWyPOpiEhQ2M5UoW3QdKafQXrr6qlCm+T7C/PL09UfihVeFtk
/ISlfPZ4qxSzgVSQ/zxV1obraeC/kc3TvtYuVfhvwQ39x2b9zh24fwfQPVYY
atwOPG8nnOQnjYxYtaOnBDfH2TTX/DeeEnDu2vRmyVrR2wX7Si8MJX7biN5u
sGHmfra0UI+eMlTVL3rZy6vRU4GVZvEl2fxt9FRgwmq3rQb9Cnp7wJTemJXE
ysJeb4NbonKNXdkt7KsKmvbfBNTpV2I/Nfhg9PSqxtEa7K0GAXx16VyPBHuq
g0H8h0/imXXoacCfux4fHsmsQ48OLrMdCzzzOvQ0oThO4i3g1uJ6TfjbPeZM
E+0++pqgJ3Evie65S/7bbqUFcV8yPvWUl+N5WrC5YF4RWyhGjwGT6eKBYIcC
9BjwsNCwQm06Az0GfHfEo++9AG98H20otTaS1lqkYg9t6I5g7uNYfIH9dEDV
b6DLbKIAe+uAz9r10Zb1YuypA81ekRmqybexvy70r5+llUnE6OlCbKjn19FT
YvSYwJPYqGQHidFjgolrbHDW5VvoMcExvi2Ue7QYvb3gqLVF8Q4WorcXnnFt
Fjvyv0KPBfO8j7KVAnLRY4HlT5VFQSFp6LFA+iiwvkkUi54etOvGfG9X7IL9
9GCUm3tH7H0J+7EhmJpuaLuXiv3Y8MLMbCkv8E0/NgiM5NX+RTnYTx+a3X2Z
iYFC9PThPOWkG1wjQs8Aju237XlQKkLPAMJLeK+oACF6BpCWbTnVrpSLniF0
nxFYFAxkomcIYSETF354mY6eEYwer8xmeaWgZwRCv5KoEddP0DMCme3z9OKY
aPSMIfm86PrBSU/0jME9wv5c5JYH9uOARTVzzqUoQqr4f3GASii84TTGx54c
qDrxOi+6KgH7c+A3U23ndygB9uWAZww9R/1YMnoUcP7KoU/pXkaPAiE8be2q
T0aPAkFKYLO1QxJ6FJSdim3LG0tEj4IYbb7yYEs8eiZQ2mljs6l7ET0TMDZL
cBg/EI2eCfxxtXkr+Pcw9EygYXGZ53/aGz0TcJD0Ww5kHECPC2txbkENPGfs
wwXH5Z2RrmZ+2JMLMrvezjudodiLC/JD9/kbvWexLxcK7mmBqDgSv4cphKnP
lJhbRpF/ACaqsIE=
          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJxd0ntQVGUYBvCVAAERuSywXBb2gl3kkoCltozfi1hoXALNIAWHUKBmRwkR
NK8Qo8Iicmd3yyIamWqDKRQwiNxgYS+wEkhqZZELMxRyESZmWWRZkvze/aNn
5syZb877/N4zZw43NXN3mgWDwUh7cq3c/5+PpCtpI3ETwyXbz1TKn541ZGf1
xO4/Sj+XbwpdyRCZIftPRolk9PmvpLXJNSlI9638qfKAdPx+3Wrn+mY6P0qq
D+RODXjckGekr2SMLE/HCvcr22h/nFQUmN7pDO6Q39KuZJLEOCi1L6XepN4M
KRhqj5MF/UjnZ8ntuR4xi9lJ/X/IMcPHZU2jnbQ/R9LrVb5FtV10n56k9jlc
ytuloJ6BBF4UvRE1qqDeAlG/lZGdfaSbeoskpOl4fvJkN/WMpKv3umv0gR7q
mYhxdR/rYE8P9RhgN2bfIOMp6TwD1OL1/U7HldRfBSzBMfn7CiXtW0C4yCug
2EZF9z0D1p8lcp0jVdSzBGOM31D9ORX1LGE68quX711TUc8K2rWynBd0KupZ
w1RK5TaXNWrqrYa36wrnljeqqWcD8xGlXXF71NSzgYqteVXJR9XUswXbW9GG
nMtq6tlB4/jtcd0X6K2BUz1RxSM30bOHTz8I1F4bQs8exF7+jMIx9NZCyNa7
GRXz6DnANjVpWLLWUG8d/P36ndhZpoZ6jqDrljiUczV03hFC77VGLAVoqO8I
E7K0kD2bNfL/6qFOoF96sLcRNHSfE3hmRVzl70LPGUqmHvb1xaHnDJLDVsK2
BPScYfLUz+GmZHwfF/gt+PkU2UH0XCBZcCFW+y56TGDGp4dmHUaPCQ2lo3NX
s9BjwtzyloSjOei5wqwwgTV6Aj1XEATdt2GcRs8Ntj+q4w2eRc8NFgNf+SQ5
Hz030D9KYTQUoOcO7IWOTV3n0XOH2PcsKusvoseCjqL62X1F6LFgeIQ0jYnQ
Y4EuSaWKvoSeBww829xbVoKeB0gPvWhouYyeJzRuSCXyUvQ8YdrxceQ3Zeh5
wkCt/kRhOXpeUGI1aIquQM8LLvyydtBUgZ43DPtH3qitRM8bxH9+HxNchZ43
ON3PtG2pQo8NPt1/CQKq0WPDa4oiN0k1ej6gN37duFCNng/sq0pcjK9BzwfG
Yvp1dTXo+YKloDvwYQ16vjAvyJX4i9HjgFF8TpMuxv+LA9nCwsQrYvQ5kLul
t18rxj4Hks5kfmkQ4z4OLN4Z3MuRoMeFH+5Kw3ZI0OMCu0Dx3SEJelzoe1zE
/lCCHhfS28Jar0jQ44J7MUPVbPZ4cNrvbEmv2ePBRnZe+LDZ40GLLt91xuzx
wGQXvJkhRY8HqzJGfnKQoseHDcOLlt5S/D580O940/CcFD0+xK8TqUOk6PGh
XRFfHmb2+BA53yF81ez5QWLhySMxT87/Aq8L9Jk=
          "]]},
        Annotation[#, "Charting`Private`Tag#3"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Line[CompressedData["
1:eJw11AlQ1FUcwHGu5ZZbxGVhL1IjVJRiILL3I0Ik5JBEEbHW5DAENy6LFeRw
MYE4hF0gsYkl5JwQEAQhd2VYIQgoQ+SIMxyQAoQ2kSXSpP35m9nZ+c//vc+b
+b6dZX7C9Q1WUVJSCn752fh+Nc9fbMwEufr1xtwmWcvLulYDY/jcReKkzsEH
q0fIm3Yb00/mf57V4bQ+xPfDJCKREzwIvxKFNklyA9l2tovduH6aCOpFNKtd
bSQ0ZGNmiFuQtWtiZQ3unyP3Z3zPy7T5kt6ejZknwmbDsxYZ9RKFt0RmIvjN
YdvvShTrl8mhVL1sWcs9icKXkWLre0uRM124/28ScstcxBb1SBTnrZAqQ8ub
q8u96K2SgOvynN6FXvTkxPGD01egsQe9f0i36JmyS1Q3euvki2+Zbql+neg9
JysfXtg5mteOnhJMlbtOxnaKcb0SZGZnaTY8bURfGRZl0ss82yrcrwID50c0
BLty8TxViPI/mFewno791ICqJqRs6yslCk8NfMcZtsr+tdiLAlmSDj+BfiP2
VAe3ImmFjNeMvTXApl40FpPfgp4m2BTE0n3CW9HThCm2PeeRUSt6WlBj8cvF
iqrb6GmDTfXT9JnjTejpgObCDfcThxvQ04U9BXP8aWkterpQYv1bmLu4Er1N
ME91vGFWLkJPD5oMYva378tDTx/OaCf4HYvkomcAp5z712Wv87GPAZyg2RwT
B+RjTwPI0ROaRrsVS/7fbmcIDtfXFg7sK8W+hrDSk3bygXI53ocRuL8V1yAQ
VqBnBKvqRSJXSiV6RqBSm/hoz+kK7G8Mg4OyOufxMvSMQSvVqHwisxQ9E3hM
/3S0VyRCzwSKI+LklKxr6JlAlVW0p7ufEL3N4PDuWq10MgO9zXCJItdwlPDQ
M4VD2+M/upnOwj6mEDZx7u7eA3HY0xT6/JOMm7y+xF5bgOedcSdZJQf7bgFD
YVN8oFce9jODB+aFQy0pQvTMYODPz+bOfZePnhnkhHl/v0OSj95WGOnM7Exb
EKK3Fd57p9u1xFOAHhWe2L/Ge6iaix4V+nZ3jA9zs9CjQkq20MFl22X0zKFQ
fGWiLj4ZPXNYkYvVtVJi0aNBR/fvyTVzHPRoQKeeSmJnemI/GjDTyKy6SQT2
s4Afqk1cdko/x34WQPvjfUrAjkTsZwm+8f1DSR4peB+WoLt3wHtO9dX/hyX4
iI4uPm7no0eHIKlpUkgRHz06KLe97WRVchE9BmyS+zvorCTj74sBLsJmeVtU
IvoMyLnwr/czJg/3M8BrCgb1XGPwPAYIoofUbnmEo8eEqaM/XSs35qDHBDpt
qLs4wRk9Juw+OWXmkeeOvZgQtN/pq8K2j7EvE3gWgemz90OxHwuWElvO/6hz
lig8Fvhx17554RSJPVngKQ7rDE+PQo8FjvoJaXfkUeixYH7YvKv2ahR6bDiy
XpYp5kfi/bEhj61ro1bJRY8NQX/VUd84fAY9NgizucenvULQe/n8ZDSyfYyD
nhX4lAnsQy8dIf8BfY7BLA==
              "]]}, "Charting`Private`Tag#1"], 
           Annotation[{
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Line[CompressedData["
1:eJxd0nswXFccwPFtIiH1WBabtV57Lek000SREMGenxglyKQeIeKtEcFEN0J1
SYtIPGc3beNRYZKl9UhUspg0CDaKKqUsYioeUZotQ6dIol4jre4v//Q3c2fn
zj3nc+5871LhH3tF7KDRaBH/Xtu//5+bRdvTSNjTM8zU9xuI4r6bRNEl7zKE
P5JDVtszRIYNZ4NS2P34fJTUinwu+v48SBTKFNnz6NRy5uowrp8hg88W2v1Y
IyTy3PbIiUhEsfqPjOD+OaK0VFcyz39C+nq3Z4E0vU4y/nVyCL1F4mR98vPd
FTJcv0RE3W49V572of+C9Pv8ws5v7ML9L0mItRXf3LYNz1sh4S3DwhW3B+it
ksMq1+IrNUvRWyPOpiEhQ2M5UoW3QdKafQXrr6qlCm+T7C/PL09UfihVeFtk
/ISlfPZ4qxSzgVSQ/zxV1obraeC/kc3TvtYuVfhvwQ39x2b9zh24fwfQPVYY
atwOPG8nnOQnjYxYtaOnBDfH2TTX/DeeEnDu2vRmyVrR2wX7Si8MJX7biN5u
sGHmfra0UI+eMlTVL3rZy6vRU4GVZvEl2fxt9FRgwmq3rQb9Cnp7wJTemJXE
ysJeb4NbonKNXdkt7KsKmvbfBNTpV2I/Nfhg9PSqxtEa7K0GAXx16VyPBHuq
g0H8h0/imXXoacCfux4fHsmsQ48OLrMdCzzzOvQ0oThO4i3g1uJ6TfjbPeZM
E+0++pqgJ3Evie65S/7bbqUFcV8yPvWUl+N5WrC5YF4RWyhGjwGT6eKBYIcC
9BjwsNCwQm06Az0GfHfEo++9AG98H20otTaS1lqkYg9t6I5g7uNYfIH9dEDV
b6DLbKIAe+uAz9r10Zb1YuypA81ekRmqybexvy70r5+llUnE6OlCbKjn19FT
YvSYwJPYqGQHidFjgolrbHDW5VvoMcExvi2Ue7QYvb3gqLVF8Q4WorcXnnFt
Fjvyv0KPBfO8j7KVAnLRY4HlT5VFQSFp6LFA+iiwvkkUi54etOvGfG9X7IL9
9GCUm3tH7H0J+7EhmJpuaLuXiv3Y8MLMbCkv8E0/NgiM5NX+RTnYTx+a3X2Z
iYFC9PThPOWkG1wjQs8Aju237XlQKkLPAMJLeK+oACF6BpCWbTnVrpSLniF0
nxFYFAxkomcIYSETF354mY6eEYwer8xmeaWgZwRCv5KoEddP0DMCme3z9OKY
aPSMIfm86PrBSU/0jME9wv5c5JYH9uOARTVzzqUoQqr4f3GASii84TTGx54c
qDrxOi+6KgH7c+A3U23ndygB9uWAZww9R/1YMnoUcP7KoU/pXkaPAiE8be2q
T0aPAkFKYLO1QxJ6FJSdim3LG0tEj4IYbb7yYEs8eiZQ2mljs6l7ET0TMDZL
cBg/EI2eCfxxtXkr+Pcw9EygYXGZ53/aGz0TcJD0Ww5kHECPC2txbkENPGfs
wwXH5Z2RrmZ+2JMLMrvezjudodiLC/JD9/kbvWexLxcK7mmBqDgSv4cphKnP
lJhbRpF/ACaqsIE=
              "]]}, "Charting`Private`Tag#2"], 
           Annotation[{
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Line[CompressedData["
1:eJxd0ntQVGUYBvCVAAERuSywXBb2gl3kkoCltozfi1hoXALNIAWHUKBmRwkR
NK8Qo8Iicmd3yyIamWqDKRQwiNxgYS+wEkhqZZELMxRyESZmWWRZkvze/aNn
5syZb877/N4zZw43NXN3mgWDwUh7cq3c/5+PpCtpI3ETwyXbz1TKn541ZGf1
xO4/Sj+XbwpdyRCZIftPRolk9PmvpLXJNSlI9638qfKAdPx+3Wrn+mY6P0qq
D+RODXjckGekr2SMLE/HCvcr22h/nFQUmN7pDO6Q39KuZJLEOCi1L6XepN4M
KRhqj5MF/UjnZ8ntuR4xi9lJ/X/IMcPHZU2jnbQ/R9LrVb5FtV10n56k9jlc
ytuloJ6BBF4UvRE1qqDeAlG/lZGdfaSbeoskpOl4fvJkN/WMpKv3umv0gR7q
mYhxdR/rYE8P9RhgN2bfIOMp6TwD1OL1/U7HldRfBSzBMfn7CiXtW0C4yCug
2EZF9z0D1p8lcp0jVdSzBGOM31D9ORX1LGE68quX711TUc8K2rWynBd0KupZ
w1RK5TaXNWrqrYa36wrnljeqqWcD8xGlXXF71NSzgYqteVXJR9XUswXbW9GG
nMtq6tlB4/jtcd0X6K2BUz1RxSM30bOHTz8I1F4bQs8exF7+jMIx9NZCyNa7
GRXz6DnANjVpWLLWUG8d/P36ndhZpoZ6jqDrljiUczV03hFC77VGLAVoqO8I
E7K0kD2bNfL/6qFOoF96sLcRNHSfE3hmRVzl70LPGUqmHvb1xaHnDJLDVsK2
BPScYfLUz+GmZHwfF/gt+PkU2UH0XCBZcCFW+y56TGDGp4dmHUaPCQ2lo3NX
s9BjwtzyloSjOei5wqwwgTV6Aj1XEATdt2GcRs8Ntj+q4w2eRc8NFgNf+SQ5
Hz030D9KYTQUoOcO7IWOTV3n0XOH2PcsKusvoseCjqL62X1F6LFgeIQ0jYnQ
Y4EuSaWKvoSeBww829xbVoKeB0gPvWhouYyeJzRuSCXyUvQ8YdrxceQ3Zeh5
wkCt/kRhOXpeUGI1aIquQM8LLvyydtBUgZ43DPtH3qitRM8bxH9+HxNchZ43
ON3PtG2pQo8NPt1/CQKq0WPDa4oiN0k1ej6gN37duFCNng/sq0pcjK9BzwfG
Yvp1dTXo+YKloDvwYQ16vjAvyJX4i9HjgFF8TpMuxv+LA9nCwsQrYvQ5kLul
t18rxj4Hks5kfmkQ4z4OLN4Z3MuRoMeFH+5Kw3ZI0OMCu0Dx3SEJelzoe1zE
/lCCHhfS28Jar0jQ44J7MUPVbPZ4cNrvbEmv2ePBRnZe+LDZ40GLLt91xuzx
wGQXvJkhRY8HqzJGfnKQoseHDcOLlt5S/D580O940/CcFD0+xK8TqUOk6PGh
XRFfHmb2+BA53yF81ez5QWLhySMxT87/Aq8L9Jk=
              "]]}, "Charting`Private`Tag#3"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0, 10.}, {-0.23394688363999921`, 
              0.4999999999999999}}, "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
            "Axes" -> {False, False}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[1, 90]], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[2], 
               Thickness[Large]], 
              Directive[
               PointSize[
                Rational[1, 90]], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[2], 
               Thickness[Large]], 
              Directive[
               PointSize[
                Rational[1, 90]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2], 
               Thickness[Large]]}, 
            "HighlightLabelingFunctions" -> <|
             "CoordinatesToolOptions" -> Identity, 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0, 10.}, {-0.23394688363999921`, 
             0.4999999999999999}}, "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
           "Axes" -> {False, False}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              Thickness[Large]]}, 
           "HighlightLabelingFunctions" -> <|
            "CoordinatesToolOptions" -> Identity, 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJw11AlQ1FUcwHGu5ZZbxGVhL1IjVJRiILL3I0Ik5JBEEbHW5DAENy6LFeRw
MYE4hF0gsYkl5JwQEAQhd2VYIQgoQ+SIMxyQAoQ2kSXSpP35m9nZ+c//vc+b
+b6dZX7C9Q1WUVJSCn752fh+Nc9fbMwEufr1xtwmWcvLulYDY/jcReKkzsEH
q0fIm3Yb00/mf57V4bQ+xPfDJCKREzwIvxKFNklyA9l2tovduH6aCOpFNKtd
bSQ0ZGNmiFuQtWtiZQ3unyP3Z3zPy7T5kt6ejZknwmbDsxYZ9RKFt0RmIvjN
YdvvShTrl8mhVL1sWcs9icKXkWLre0uRM124/28ScstcxBb1SBTnrZAqQ8ub
q8u96K2SgOvynN6FXvTkxPGD01egsQe9f0i36JmyS1Q3euvki2+Zbql+neg9
JysfXtg5mteOnhJMlbtOxnaKcb0SZGZnaTY8bURfGRZl0ss82yrcrwID50c0
BLty8TxViPI/mFewno791ICqJqRs6yslCk8NfMcZtsr+tdiLAlmSDj+BfiP2
VAe3ImmFjNeMvTXApl40FpPfgp4m2BTE0n3CW9HThCm2PeeRUSt6WlBj8cvF
iqrb6GmDTfXT9JnjTejpgObCDfcThxvQ04U9BXP8aWkterpQYv1bmLu4Er1N
ME91vGFWLkJPD5oMYva378tDTx/OaCf4HYvkomcAp5z712Wv87GPAZyg2RwT
B+RjTwPI0ROaRrsVS/7fbmcIDtfXFg7sK8W+hrDSk3bygXI53ocRuL8V1yAQ
VqBnBKvqRSJXSiV6RqBSm/hoz+kK7G8Mg4OyOufxMvSMQSvVqHwisxQ9E3hM
/3S0VyRCzwSKI+LklKxr6JlAlVW0p7ufEL3N4PDuWq10MgO9zXCJItdwlPDQ
M4VD2+M/upnOwj6mEDZx7u7eA3HY0xT6/JOMm7y+xF5bgOedcSdZJQf7bgFD
YVN8oFce9jODB+aFQy0pQvTMYODPz+bOfZePnhnkhHl/v0OSj95WGOnM7Exb
EKK3Fd57p9u1xFOAHhWe2L/Ge6iaix4V+nZ3jA9zs9CjQkq20MFl22X0zKFQ
fGWiLj4ZPXNYkYvVtVJi0aNBR/fvyTVzHPRoQKeeSmJnemI/GjDTyKy6SQT2
s4Afqk1cdko/x34WQPvjfUrAjkTsZwm+8f1DSR4peB+WoLt3wHtO9dX/hyX4
iI4uPm7no0eHIKlpUkgRHz06KLe97WRVchE9BmyS+zvorCTj74sBLsJmeVtU
IvoMyLnwr/czJg/3M8BrCgb1XGPwPAYIoofUbnmEo8eEqaM/XSs35qDHBDpt
qLs4wRk9Juw+OWXmkeeOvZgQtN/pq8K2j7EvE3gWgemz90OxHwuWElvO/6hz
lig8Fvhx17554RSJPVngKQ7rDE+PQo8FjvoJaXfkUeixYH7YvKv2ahR6bDiy
XpYp5kfi/bEhj61ro1bJRY8NQX/VUd84fAY9NgizucenvULQe/n8ZDSyfYyD
nhX4lAnsQy8dIf8BfY7BLA==
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJxd0nswXFccwPFtIiH1WBabtV57Lek000SREMGenxglyKQeIeKtEcFEN0J1
SYtIPGc3beNRYZKl9UhUspg0CDaKKqUsYioeUZotQ6dIol4jre4v//Q3c2fn
zj3nc+5871LhH3tF7KDRaBH/Xtu//5+bRdvTSNjTM8zU9xuI4r6bRNEl7zKE
P5JDVtszRIYNZ4NS2P34fJTUinwu+v48SBTKFNnz6NRy5uowrp8hg88W2v1Y
IyTy3PbIiUhEsfqPjOD+OaK0VFcyz39C+nq3Z4E0vU4y/nVyCL1F4mR98vPd
FTJcv0RE3W49V572of+C9Pv8ws5v7ML9L0mItRXf3LYNz1sh4S3DwhW3B+it
ksMq1+IrNUvRWyPOpiEhQ2M5UoW3QdKafQXrr6qlCm+T7C/PL09UfihVeFtk
/ISlfPZ4qxSzgVSQ/zxV1obraeC/kc3TvtYuVfhvwQ39x2b9zh24fwfQPVYY
atwOPG8nnOQnjYxYtaOnBDfH2TTX/DeeEnDu2vRmyVrR2wX7Si8MJX7biN5u
sGHmfra0UI+eMlTVL3rZy6vRU4GVZvEl2fxt9FRgwmq3rQb9Cnp7wJTemJXE
ysJeb4NbonKNXdkt7KsKmvbfBNTpV2I/Nfhg9PSqxtEa7K0GAXx16VyPBHuq
g0H8h0/imXXoacCfux4fHsmsQ48OLrMdCzzzOvQ0oThO4i3g1uJ6TfjbPeZM
E+0++pqgJ3Evie65S/7bbqUFcV8yPvWUl+N5WrC5YF4RWyhGjwGT6eKBYIcC
9BjwsNCwQm06Az0GfHfEo++9AG98H20otTaS1lqkYg9t6I5g7uNYfIH9dEDV
b6DLbKIAe+uAz9r10Zb1YuypA81ekRmqybexvy70r5+llUnE6OlCbKjn19FT
YvSYwJPYqGQHidFjgolrbHDW5VvoMcExvi2Ue7QYvb3gqLVF8Q4WorcXnnFt
Fjvyv0KPBfO8j7KVAnLRY4HlT5VFQSFp6LFA+iiwvkkUi54etOvGfG9X7IL9
9GCUm3tH7H0J+7EhmJpuaLuXiv3Y8MLMbCkv8E0/NgiM5NX+RTnYTx+a3X2Z
iYFC9PThPOWkG1wjQs8Aju237XlQKkLPAMJLeK+oACF6BpCWbTnVrpSLniF0
nxFYFAxkomcIYSETF354mY6eEYwer8xmeaWgZwRCv5KoEddP0DMCme3z9OKY
aPSMIfm86PrBSU/0jME9wv5c5JYH9uOARTVzzqUoQqr4f3GASii84TTGx54c
qDrxOi+6KgH7c+A3U23ndygB9uWAZww9R/1YMnoUcP7KoU/pXkaPAiE8be2q
T0aPAkFKYLO1QxJ6FJSdim3LG0tEj4IYbb7yYEs8eiZQ2mljs6l7ET0TMDZL
cBg/EI2eCfxxtXkr+Pcw9EygYXGZ53/aGz0TcJD0Ww5kHECPC2txbkENPGfs
wwXH5Z2RrmZ+2JMLMrvezjudodiLC/JD9/kbvWexLxcK7mmBqDgSv4cphKnP
lJhbRpF/ACaqsIE=
          "]]}, "Charting`Private`Tag#2"], 
       Annotation[{
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJxd0ntQVGUYBvCVAAERuSywXBb2gl3kkoCltozfi1hoXALNIAWHUKBmRwkR
NK8Qo8Iicmd3yyIamWqDKRQwiNxgYS+wEkhqZZELMxRyESZmWWRZkvze/aNn
5syZb877/N4zZw43NXN3mgWDwUh7cq3c/5+PpCtpI3ETwyXbz1TKn541ZGf1
xO4/Sj+XbwpdyRCZIftPRolk9PmvpLXJNSlI9638qfKAdPx+3Wrn+mY6P0qq
D+RODXjckGekr2SMLE/HCvcr22h/nFQUmN7pDO6Q39KuZJLEOCi1L6XepN4M
KRhqj5MF/UjnZ8ntuR4xi9lJ/X/IMcPHZU2jnbQ/R9LrVb5FtV10n56k9jlc
ytuloJ6BBF4UvRE1qqDeAlG/lZGdfaSbeoskpOl4fvJkN/WMpKv3umv0gR7q
mYhxdR/rYE8P9RhgN2bfIOMp6TwD1OL1/U7HldRfBSzBMfn7CiXtW0C4yCug
2EZF9z0D1p8lcp0jVdSzBGOM31D9ORX1LGE68quX711TUc8K2rWynBd0KupZ
w1RK5TaXNWrqrYa36wrnljeqqWcD8xGlXXF71NSzgYqteVXJR9XUswXbW9GG
nMtq6tlB4/jtcd0X6K2BUz1RxSM30bOHTz8I1F4bQs8exF7+jMIx9NZCyNa7
GRXz6DnANjVpWLLWUG8d/P36ndhZpoZ6jqDrljiUczV03hFC77VGLAVoqO8I
E7K0kD2bNfL/6qFOoF96sLcRNHSfE3hmRVzl70LPGUqmHvb1xaHnDJLDVsK2
BPScYfLUz+GmZHwfF/gt+PkU2UH0XCBZcCFW+y56TGDGp4dmHUaPCQ2lo3NX
s9BjwtzyloSjOei5wqwwgTV6Aj1XEATdt2GcRs8Ntj+q4w2eRc8NFgNf+SQ5
Hz030D9KYTQUoOcO7IWOTV3n0XOH2PcsKusvoseCjqL62X1F6LFgeIQ0jYnQ
Y4EuSaWKvoSeBww829xbVoKeB0gPvWhouYyeJzRuSCXyUvQ8YdrxceQ3Zeh5
wkCt/kRhOXpeUGI1aIquQM8LLvyydtBUgZ43DPtH3qitRM8bxH9+HxNchZ43
ON3PtG2pQo8NPt1/CQKq0WPDa4oiN0k1ej6gN37duFCNng/sq0pcjK9BzwfG
Yvp1dTXo+YKloDvwYQ16vjAvyJX4i9HjgFF8TpMuxv+LA9nCwsQrYvQ5kLul
t18rxj4Hks5kfmkQ4z4OLN4Z3MuRoMeFH+5Kw3ZI0OMCu0Dx3SEJelzoe1zE
/lCCHhfS28Jar0jQ44J7MUPVbPZ4cNrvbEmv2ePBRnZe+LDZ40GLLt91xuzx
wGQXvJkhRY8HqzJGfnKQoseHDcOLlt5S/D580O940/CcFD0+xK8TqUOk6PGh
XRFfHmb2+BA53yF81ez5QWLhySMxT87/Aq8L9Jk=
          "]]}, "Charting`Private`Tag#3"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{0, 10.}, {-0.23394688363999921`, 
          0.4999999999999999}}, "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
        "Axes" -> {False, False}, "LabelStyle" -> {}, "AspectRatio" -> 
        GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           Thickness[Large]]}, 
        "HighlightLabelingFunctions" -> <|
         "CoordinatesToolOptions" -> Identity, 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\"", HoldForm], 
      TraditionalForm], None}, {
     FormBox[
      TagBox["\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) t\"", HoldForm], 
      TraditionalForm], None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-0.23394688363999921`, 0.4999999999999999}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[8]=",
 CellID->1871124525,ExpressionUUID->"ff8d10d5-edff-42dc-9c39-ab31517d0e39"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "8a4a76ca-59c9-45e2-8e2e-fe899a67416a"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1593892289,ExpressionUUID->"a7e8f41d-0645-4649-98a5-bf9e955e9c54"],

Cell["Consider a three-level atom with the \[CapitalLambda]-type level \
structure.", "ExampleText",
 CellID->210970783,ExpressionUUID->"b4e46964-4fbf-49c1-a4c4-7ce1bb2db082"],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qudit", ",", "A"}], "]"}]], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[1]:=",
 CellID->290448684,ExpressionUUID->"274168af-2f53-4018-8b3b-a46abde4ca21"],

Cell["\<\
In the interaction picture, the Hamiltonian looks like this. We have put the \
two Rabi transition amplitudes to 1.\
\>", "ExampleText",
 CellID->340702357,ExpressionUUID->"88a131b4-35dc-452c-afb6-ef36c9ca0ef2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "10"}], ")"}], 
     RowBox[{"A", "[", 
      RowBox[{"1", "\[Rule]", "1"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "/", "10"}], ")"}], 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "2"}], "]"}]}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"2", "\[Rule]", "0"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"0", "\[Rule]", "2"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"2", "\[Rule]", "1"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"1", "\[Rule]", "2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matH", "=", 
   RowBox[{"Matrix", "[", "opH", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"matH", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[2]:=",
 CellID->993111197,ExpressionUUID->"36bbd0ad-1534-4d38-9da2-2886a8105f26"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "1"},
     {"0", 
      FractionBox["1", "10"], "1"},
     {"1", "1", 
      FractionBox["1", "5"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {3, 3}, 0, {
     1, {{0, 1, 3, 6}, {{3}, {2}, {3}, {1}, {2}, {3}}}, {
      1, Rational[1, 10], 1, 1, 1, Rational[1, 5]}}]]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->163563629,ExpressionUUID->"d78ade6c-7908-4c21-9534-d73b33c0fe3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"0", ",", "\"\<-\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "0"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"0", ",", "\"\<+\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"0", "\[Rule]", "2"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"1", ",", "\"\<-\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "1"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"1", ",", "\"\<+\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"1", "\[Rule]", "2"}], "]"}]}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matL", "=", 
   RowBox[{"Matrix", "[", "opL", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "matL"}]}], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[3]:=",
 CellID->501635503,ExpressionUUID->"2155afbd-7b9d-486b-b9b4-c0009af9a8db"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     TemplateBox[{
       TemplateBox[{"0"}, "Ket"], 
       TemplateBox[{"2"}, "Bra"]},
      "RowDefault"],
     Q3`Private`A[2 -> 0]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "0", "\"-\""},
        "RowWithSeparators"]],
      Q3`Private`\[CapitalGamma][0, "-"]]]}], ",", 
   RowBox[{
    InterpretationBox[
     TemplateBox[{
       TemplateBox[{"2"}, "Ket"], 
       TemplateBox[{"0"}, "Bra"]},
      "RowDefault"],
     Q3`Private`A[0 -> 2]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "0", "\"+\""},
        "RowWithSeparators"]],
      Q3`Private`\[CapitalGamma][0, "+"]]]}], ",", 
   RowBox[{
    InterpretationBox[
     TemplateBox[{
       TemplateBox[{"1"}, "Ket"], 
       TemplateBox[{"2"}, "Bra"]},
      "RowDefault"],
     Q3`Private`A[2 -> 1]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "1", "\"-\""},
        "RowWithSeparators"]],
      Q3`Private`\[CapitalGamma][1, "-"]]]}], ",", 
   RowBox[{
    InterpretationBox[
     TemplateBox[{
       TemplateBox[{"2"}, "Ket"], 
       TemplateBox[{"1"}, "Bra"]},
      "RowDefault"],
     Q3`Private`A[1 -> 2]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "1", "\"+\""},
        "RowWithSeparators"]],
      Q3`Private`\[CapitalGamma][1, "+"]]]}]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->1252798039,ExpressionUUID->"9a3ceb0a-453a-4f39-a185-fe0748eb9c47"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", 
        SqrtBox[
         InterpretationBox[
          SubscriptBox["\[CapitalGamma]", 
           TemplateBox[{",", "\",\"", "0", "\"-\""},
            "RowWithSeparators"]],
          Q3`Private`\[CapitalGamma][0, "-"]]]},
       {"0", "0", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 1, 1, 1}, {{3}}}, {
        Q3`Private`\[CapitalGamma][0, "-"]^Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "0"},
       {
        SqrtBox[
         InterpretationBox[
          SubscriptBox["\[CapitalGamma]", 
           TemplateBox[{",", "\",\"", "0", "\"+\""},
            "RowWithSeparators"]],
          Q3`Private`\[CapitalGamma][0, "+"]]], "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 0, 1}, {{1}}}, {
        Q3`Private`\[CapitalGamma][0, "+"]^Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", 
        SqrtBox[
         InterpretationBox[
          SubscriptBox["\[CapitalGamma]", 
           TemplateBox[{",", "\",\"", "1", "\"-\""},
            "RowWithSeparators"]],
          Q3`Private`\[CapitalGamma][1, "-"]]]},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 1, 1}, {{3}}}, {
        Q3`Private`\[CapitalGamma][1, "-"]^Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "0"},
       {"0", 
        SqrtBox[
         InterpretationBox[
          SubscriptBox["\[CapitalGamma]", 
           TemplateBox[{",", "\",\"", "1", "\"+\""},
            "RowWithSeparators"]],
          Q3`Private`\[CapitalGamma][1, "+"]]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 0, 1}, {{2}}}, {
        Q3`Private`\[CapitalGamma][1, "+"]^Rational[1, 2]}}]]]]}], 
  "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->1846966285,ExpressionUUID->"4b34f845-5c87-4e69-9200-e404abdc96e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gen", ",", "vec"}], "}"}], "=", 
   RowBox[{
    RowBox[{"LindbladConvert", "[", 
     RowBox[{"opH", ",", "opL"}], "]"}], "//", "SimplifyThrough"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"{", 
   RowBox[{"gen", ",", "vec"}], "}"}]}]}], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[4]:=",
 CellID->1865696334,ExpressionUUID->"429e6d3d-e29d-4982-b7ea-1bcc97bcda03"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            InterpretationBox[
             SubscriptBox["\[CapitalGamma]", 
              TemplateBox[{",", "\",\"", "0", "\"+\""},
               "RowWithSeparators"]],
             Q3`Private`\[CapitalGamma][0, "+"]]}], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"+\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][1, "+"]]}], ")"}]}], 
        FractionBox["1", "10"], "0", "0", "1", "0", "1", "0"},
       {
        RowBox[{"-", 
         FractionBox["1", "10"]}], 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            InterpretationBox[
             SubscriptBox["\[CapitalGamma]", 
              TemplateBox[{",", "\",\"", "0", "\"+\""},
               "RowWithSeparators"]],
             Q3`Private`\[CapitalGamma][0, "+"]]}], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"+\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][1, "+"]]}], ")"}]}], "0", 
        RowBox[{"-", "1"}], "0", "1", "0", "0"},
       {"0", "0", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            InterpretationBox[
             SubscriptBox["\[CapitalGamma]", 
              TemplateBox[{",", "\",\"", "0", "\"+\""},
               "RowWithSeparators"]],
             Q3`Private`\[CapitalGamma][0, "+"]]}], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"+\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][1, "+"]]}], ")"}]}], "0", "1", "0", 
        RowBox[{"-", "1"}], 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "0", "\"-\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][0, "-"]]}], "-", 
          InterpretationBox[
           SubscriptBox["\[CapitalGamma]", 
            TemplateBox[{",", "\",\"", "0", "\"+\""},
             "RowWithSeparators"]],
           Q3`Private`\[CapitalGamma][0, "+"]], "+", 
          RowBox[{"2", " ", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"-\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][1, "-"]]}], "+", 
          InterpretationBox[
           SubscriptBox["\[CapitalGamma]", 
            TemplateBox[{",", "\",\"", "1", "\"+\""},
             "RowWithSeparators"]],
           Q3`Private`\[CapitalGamma][1, "+"]]}], 
         RowBox[{"2", " ", 
          SqrtBox["3"]}]]},
       {"0", "1", "0", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            InterpretationBox[
             SubscriptBox["\[CapitalGamma]", 
              TemplateBox[{",", "\",\"", "0", "\"-\""},
               "RowWithSeparators"]],
             Q3`Private`\[CapitalGamma][0, "-"]]}], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "0", "\"+\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][0, "+"]], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"-\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][1, "-"]]}], ")"}]}], 
        FractionBox["1", "5"], "0", "0", "0"},
       {
        RowBox[{"-", "1"}], "0", 
        RowBox[{"-", "1"}], 
        RowBox[{"-", 
         FractionBox["1", "5"]}], 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            InterpretationBox[
             SubscriptBox["\[CapitalGamma]", 
              TemplateBox[{",", "\",\"", "0", "\"-\""},
               "RowWithSeparators"]],
             Q3`Private`\[CapitalGamma][0, "-"]]}], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "0", "\"+\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][0, "+"]], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"-\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][1, "-"]]}], ")"}]}], "0", "0", 
        RowBox[{"-", 
         SqrtBox["3"]}]},
       {"0", 
        RowBox[{"-", "1"}], "0", "0", "0", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            InterpretationBox[
             SubscriptBox["\[CapitalGamma]", 
              TemplateBox[{",", "\",\"", "0", "\"-\""},
               "RowWithSeparators"]],
             Q3`Private`\[CapitalGamma][0, "-"]]}], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"-\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][1, "-"]], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"+\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][1, "+"]]}], ")"}]}], 
        FractionBox["1", "10"], "0"},
       {
        RowBox[{"-", "1"}], "0", "1", "0", "0", 
        RowBox[{"-", 
         FractionBox["1", "10"]}], 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            InterpretationBox[
             SubscriptBox["\[CapitalGamma]", 
              TemplateBox[{",", "\",\"", "0", "\"-\""},
               "RowWithSeparators"]],
             Q3`Private`\[CapitalGamma][0, "-"]]}], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"-\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][1, "-"]], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"+\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][1, "+"]]}], ")"}]}], 
        RowBox[{"-", 
         SqrtBox["3"]}]},
       {"0", "0", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox["3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            InterpretationBox[
             SubscriptBox["\[CapitalGamma]", 
              TemplateBox[{",", "\",\"", "0", "\"+\""},
               "RowWithSeparators"]],
             Q3`Private`\[CapitalGamma][0, "+"]]}], "+", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"+\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][1, "+"]]}], ")"}]}], "0", 
        SqrtBox["3"], "0", 
        SqrtBox["3"], 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            InterpretationBox[
             SubscriptBox["\[CapitalGamma]", 
              TemplateBox[{",", "\",\"", "0", "\"-\""},
               "RowWithSeparators"]],
             Q3`Private`\[CapitalGamma][0, "-"]]}], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "0", "\"+\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][0, "+"]], "-", 
           RowBox[{"2", " ", 
            InterpretationBox[
             SubscriptBox["\[CapitalGamma]", 
              TemplateBox[{",", "\",\"", "1", "\"-\""},
               "RowWithSeparators"]],
             Q3`Private`\[CapitalGamma][1, "-"]]}], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"+\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][1, "+"]]}], ")"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {8, 8}, 0, {
       1, {{0, 4, 8, 12, 15, 20, 23, 28, 32}, {{1}, {2}, {5}, {7}, {1}, {2}, {
         4}, {6}, {3}, {8}, {5}, {7}, {2}, {4}, {5}, {3}, {8}, {1}, {4}, {
         5}, {2}, {6}, {7}, {1}, {3}, {8}, {6}, {7}, {3}, {8}, {5}, {7}}}, {
        Rational[1, 2] (-Q3`Private`\[CapitalGamma][0, "+"] - 
          Q3`Private`\[CapitalGamma][1, "+"]), Rational[1, 10], 1, 1, 
         Rational[-1, 10], 
         Rational[1, 2] (-Q3`Private`\[CapitalGamma][0, "+"] - 
          Q3`Private`\[CapitalGamma][1, "+"]), -1, 1, 
         Rational[1, 2] (-Q3`Private`\[CapitalGamma][0, "+"] - 
          Q3`Private`\[CapitalGamma][1, "+"]), Rational[1, 2] 
         3^Rational[-1, 2] ((-2) Q3`Private`\[CapitalGamma][0, "-"] - 
          Q3`Private`\[CapitalGamma][0, "+"] + 
          2 Q3`Private`\[CapitalGamma][1, "-"] + 
          Q3`Private`\[CapitalGamma][1, "+"]), 1, -1, 1, 
         Rational[1, 2] (-Q3`Private`\[CapitalGamma][0, "-"] - 
          Q3`Private`\[CapitalGamma][0, "+"] - Q3`Private`\[CapitalGamma][
          1, "-"]), Rational[1, 5], -1, -3^Rational[1, 2], -1, 
         Rational[-1, 5], 
         Rational[1, 2] (-Q3`Private`\[CapitalGamma][0, "-"] - 
          Q3`Private`\[CapitalGamma][0, "+"] - Q3`Private`\[CapitalGamma][
          1, "-"]), -1, 
         Rational[1, 2] (-Q3`Private`\[CapitalGamma][0, "-"] - 
          Q3`Private`\[CapitalGamma][1, "-"] - Q3`Private`\[CapitalGamma][
          1, "+"]), Rational[1, 10], -1, 1, -3^Rational[1, 2], 
         Rational[-1, 10], 
         Rational[1, 2] (-Q3`Private`\[CapitalGamma][0, "-"] - 
          Q3`Private`\[CapitalGamma][1, "-"] - Q3`Private`\[CapitalGamma][
          1, "+"]), Rational[1, 2] 
         3^Rational[1, 2] (-Q3`Private`\[CapitalGamma][0, "+"] + 
          Q3`Private`\[CapitalGamma][1, "+"]), 
         Rational[1, 2] ((-2) Q3`Private`\[CapitalGamma][0, "-"] - 
          Q3`Private`\[CapitalGamma][0, "+"] - 2 
          Q3`Private`\[CapitalGamma][1, "-"] - Q3`Private`\[CapitalGamma][
          1, "+"]), 3^Rational[1, 2], 3^Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0"},
        {"0"},
        {
         FractionBox[
          RowBox[{
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "0", "\"-\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][0, "-"]], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "0", "\"+\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][0, "+"]], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"-\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][1, "-"]], "+", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"+\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][1, "+"]]}], 
          RowBox[{"3", " ", 
           SqrtBox["2"]}]]},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {
         FractionBox[
          RowBox[{
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "0", "\"-\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][0, "-"]], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "0", "\"+\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][0, "+"]], "+", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"-\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][1, "-"]], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"+\""},
              "RowWithSeparators"]],
            Q3`Private`\[CapitalGamma][1, "+"]]}], 
          SqrtBox["6"]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {8}, 0, {
       1, {{0, 2}, {{3}, {8}}}, {
        Rational[1, 3] 
         2^Rational[-1, 2] (Q3`Private`\[CapitalGamma][0, "-"] - 
          Q3`Private`\[CapitalGamma][0, "+"] - Q3`Private`\[CapitalGamma][
          1, "-"] + Q3`Private`\[CapitalGamma][1, "+"]), 
         6^Rational[-1, 2] (Q3`Private`\[CapitalGamma][0, "-"] - 
          Q3`Private`\[CapitalGamma][0, "+"] + 
          Q3`Private`\[CapitalGamma][1, "-"] - Q3`Private`\[CapitalGamma][
          1, "+"])}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->543028175,ExpressionUUID->"96b69ec4-e50e-41de-ac1c-89d3aa476df7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalGamma]", ",", "in"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"0", ",", "\"\<-\>\""}], "]"}], "=", "0.05"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"0", ",", "\"\<+\>\""}], "]"}], "=", "0.01"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"1", ",", "\"\<-\>\""}], "]"}], "=", "0.025"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"1", ",", "\"\<+\>\""}], "]"}], "=", "0.005"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"in", "=", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"matH", ",", "matL", ",", "in", ",", "t"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[5]:=",
 CellID->260219023,ExpressionUUID->"216c61b8-fd77-4688-9471-2cdc6504194f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.296455`", ",", "Null"}], "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->185817056,ExpressionUUID->"73d26d8b-e394-4edd-8c61-4ad5e39d0c2f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Diagonal", "@", 
     RowBox[{"\[Rho]", "[", 
      RowBox[{"t", " ", "Pi"}], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[CapitalOmega] t / \[Pi]\>\"", 
      ",", "\"\<Probabilities\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellProlog:>Needs["QuantumMob`Q3S`"],
 CellLabel->"In[6]:=",
 CellID->1542313529,ExpressionUUID->"6d04cbac-6c52-4df3-9170-9eb1d4f40354"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3fd3G8mZN/o9974/3B/vv3DPecdpk8PurDc7rNfj17terzfau+sJtkVl
aZRlaZSzRGUNqUCRokRJFEmRkphzjiLFKOYARhAkCJIAQYAIczGGXV0ECKDR
VR3U+n6Ozp4xUf1Uqfloux50d9X/99G2n6z7v37v935v5//j+z8/+XDvt3fs
+HD/v/y/vv/xb1t3bojZ+qtf/mDrrl/F/GrHNz/6v30/dPnaGv/X7/3e5//9
GQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAC8+dxu9/xvLCwsKNOjw+Hw9eXxeJTpDgAAAAAAAN5o
T58+Xfc7k5OTMvUyNzeXmpp64cKF3bt3+/tav3793r174+Pj29rafLWzTP0C
AAAAAADAG214eDgmJobUrWNjY9y7sNvtGRkZmzZtWhfaoUOHRkdHRQYMEwcA
AAAAAN4U3EsP0KX5+fkDBw7QmcO9bl1eXj5x4oSYpN2wYUNjY6OYmBwzXGv/
WDCe8DCe8DCe8DCe8DCe8DCe8DCe8DCe8DCe8HQ8Hq391UCbFhcXDx06FFA8
8q1b3W73lStXxH/fsnHjxsHBwYhhdfyPBeMJD+MJD+MJD+MJD+MJD+MJD+MJ
D+MJD+MJT8fj0dpfDTTIbDYfPXo0uHLkW7emp6cHxD948GBhYeHQ0JCvo7Ky
sosXLwY02LNnj9PpDB9Wx/9YMJ7wMJ7wMJ7wMJ7wMJ7wMJ7wMJ7wMJ7wMJ7w
dDwerf3VQGs6Ojo+/vjjNe94cqxbrVbr5s2b6eCnT5/2/ZBu4/V6Hz58GDCG
/Pz88JF1/I8F4wkP4wkP4wkP4wkP4wkP4wkP4wkP4wkP4wlPx+PR2l8NtGNl
ZSUzM3PNipV73frs2TM68okTJ0LdSKUXNPbx1dThb7nq+B8LxhMexhMexhMe
xhMexhMexhMexhMexhMexhOejsejtb8aaIHX621oaNi/f3+YopVj3eorPLdv
305H7ujoCNXY4/EcPHiQbtzS0hImOP6xgEYgf4AF8gdYIH+ABfIHWGAqDvLx
VZGnTp0KX7HyrVv7+vrosIcPHw7fvqqqim5/+/btMI3xjwU0AvkDLJA/wAL5
AyyQP8ACU3GQj81mCy5Rt2/f3tzcnJCQIEfdmp+fT4d98uRJ+PZzc3N0+23b
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
hNFa/aBvhL16g5mrDlCPGd+XY4Tikeu+dclJzu1HJ/I8npD/0M4/aCAt6zsn
lBopaBHmjcAC+QMskD+gEahbwW9xcZGuBw8ePCjmKF+hSh+VkZEheQCXLl0K
KF3Pnz8/MDDg315nbm6uuLh4y5YtdIOYmJjXryO8eql8hi903CW1krn2qJJd
Z1MvpT4sYHopdXLGSkLtulrGaYDR8Xo9qxdWckQbwdJ8RVjWqSlWjkGKR677
9HcCB+LDvbj6kHoNNqOsV5FhgkZh3ggskD/AAvkDGoG6FfxMJlNAzSjmqIaG
BvqoR48eSR7A8vLyuXPn1q1l48aNwT/0Fa11dXURwyqf4da+p6RWminboWTX
qxYBrmJaBHiRuie4/kwBrxFGxW2fETaySf6GhAiL3Q+FbXQq93EfYVTIdb+s
2UDO7Y30cA8/0zfQrz1pVmSYoFGYNwIL5A+wQP6ARqBuBT+DwUBXhVeuiHrA
taWlhT4qKSmJZQwOh+PZs2cbNmxYs3qlnThxIuKdVj/lM9xuKCG10nT+R0p2
zXHTVY/X+/7vQvn+uEO8biwr52wXOZOT6e9JiLA0UqzW7yIYue7TXy88DXsX
tX9MWGhr341w+z2B7mHeCCyQP8AC+QMagboV/ALeMP3000/FHNXR0UEfdevW
LZYxzM3NZWZmxsTERKxbfWX1wICo+4mhIryUTWtFCqmVBh6+J19HwQ7HCav9
pGZXM0ZbdyqXRKusaeQywqi0ld4hZ7L/8Y8lRGitTCURBlO+y32EUcnIyPD/
x5H4YnJiU55VhTmkpq6RtPzgWE5jU5MiIwUtIvkDIAHyB1ggf0BhYUoAlkID
dGNoaIjOithYUS8DBqzue/36dckD8BXOAbu4RpSSkhJx8SjlM3zF0k9qpYkn
f6dk10cTakiZ02uQuCcRsed6OYk2blJhMVtrbxr1xPVOCRFctknhSeMHf8Z9
hFF5+bvvq/feEE7s0IQl/FFbYoUid3A8QmPQsZe43wEMkD/AAvkDGoG6FfwC
7pzevHlTzFFdXV30UXFxcdJ6b21tDX6J9dChQ0+ePKmtrW1ubs7Ozr5x40Zw
6ZqUlBRqxxw/5TN81VuZD95Vsuvd14SCaMIUcncVkY7frSXRukdYq2AJ5lvj
yJmca4iwcPSavJ4VEsFw5x2vx8V9kOL5r/ser/fD48KN7KXllfBH0XVremmP
IiMFLcK8EVggf4AF8gc0AnUr+PX19Um4c+qrNwOqSAld2+327du303FiYmIy
MzNdrsAqo7e398CBAwGla0lJSZjgyme41+0UaqWELyrZ9YZzhaTGWbBFvfpu
gEuPm0i0ptdTXEYYlbm64+RMLrTfkRZk7MG7wk46NiPfEUbFf92fnlsiZ3XT
+cj7Ru2jbs5eeqTaRrqgOswbgQXyB1ggf0AjULeCX8C6TJcvXxZzVMAj6Kmp
qRK6zs7ODihFm5tDLp3qdDqPHj1KN969e/fKSsibVqpk+GjiH5BaybNiU6ZT
7isp3XnWRqKVvjRwGWRUZkq3kdNo68+UFmQy44ckiHOmg+8Io+K/7rf3m8hZ
PX63NuJRFx8Kr7j6alj5hwkahXkjsED+AAvkD2gE6lbwMxqNdDF45swZMUdV
VVXRRz1//lxC1zt27KCDRFzcaXR0NGDNYd8wQjVWJcPHH/6lcI/POqlMp1be
O9ekFnWTgM8q+9kDRsuY/TNyGu3jIX/F4U3nfSAEMYS7NS83/3W/sGGYnNXb
z9oiHpVe2qP6RrqgBZg3AgvkD7BA/oBGoG4Fv4WFBboS3LNnj5ijfIUqfVRh
YWG0/S4uLgbcbPWNJOJRjx49og+5f/9+qJaqZPhkxg+Ee3zmbmU6nZq18i1w
cmoGhWVv87vYA0ZrIu377KdxtmIPCWLtfsx3hFHxX/eTczuFPXarI6+JPTw5
T9p/fFnNuhvUhXkjsED+AAvkD2gE6lYgtm3bRirBmJgYt9sd8ZCkpCS6fqyt
jfzcY4DBwUE6wv79+8Uc1djYSB918eLFUC1VyXDji/8ktdLyZL0ynfaNCnt9
HrlTzR6w4tUoCXgzs5U9YLTGkr9BTqPbPistiKXxPAky33KN7wij4r/uX0gR
nvsV89bwistNHv/2/Yfvf8o/UtAizBuBBfIHWCB/QCNQtwJx5swZuhg0mUwR
Dzl//jx9yPj4eLSdBlSgJ0+eFHOUryP6qAMHDoRqqUqGmwrXkVppaTjqe9DS
vOo1koLIVxyxB2zp4RwwKoFLAXslvq670JFI4phrDnMdY3T81316d6GRqciP
Fvhsv1RCDpmcYV0mGt5QmDcCC+QPsED+gEagbgUiOTk5qpunLpdr06ZNpP2W
LVvCb0mzpoCddK5evSrmqNHRUfqoo0ePhmqpSobPlu8Wnk3tTVOm06rWMVLd
xD99xR6wn76Be5vDDdyouGxTXLZetQ1mkzim4k0cRxgt33Xf6/V+dCKPnFW7
I8ImOH6nkurIIW39kb9NAl3CvBFYIH+ABfIHNAJ1KxDl5eV0MZiYmBi+fcDW
ObGxsRI6DXi/de/evb65fcSj6urq6KPu3r0bqqUqGT5Xd4LawCVBmU7zaoXX
UR/kcXgddWrWRgLuvFLKHjAqzplOcg4nM34oOc7yZD2JM/X83zmOMFq+6755
wU5O6YZzYm/E36YWdi5uHJF1kOw8zsW5hjOTGT+YyvrxYmeS14MHm/nAvBFY
IH+ABfIHNAJ1KxDz8/MxMTGkGNy6devS0lKY9r7Cli4eMzMl7lSye/duOk53
d+QVeO7cuUMfUlQUch9MVTJ8vvkKqZUsL0O+e8tXWomw8GxWRR97QJt9hQRc
d5rDAsVRsY+Wk3M4nfu+5DgrlgESZyL1O/wGGDXfdb97xExO6WHRt7CzKvrJ
UY8KX8s6SEYexzy9KNlv7nFvlvyMN9AwbwQWyB9ggfwBjUDdCrQLFy7Q9eDT
p09DtZyamlq/fj1p6St4jUajtE6vXbtGd3rq1KnwS0J1dHSsW623tzdUY1Uy
fLEziXqn8ogynSa+aOd7V87r9b5/TNgQ1uVWtPqw9qaTczhTtlNyHF8lReKM
Jv0RxxFGy3fdp5/lvp4WcpPiADXt4+SoK6manjyYijbSRetvHzlou6n2uPQA
80ZggfwBFsgf0AjUrUCrrq4OKAnXvJXpK1r37NlDN7t5M+TUtKmpqYIyPT0d
0KChoSGg05SUlFCvyppMpoCu9+/f73Q6Q/WuSobb+jKpmmuHMp1eS2sm1U19
5wSXmJvOF5GYlsVlLjFFmm+NI+dwrv4USyjD3S+TUB6XndcIo+W77j8t7yPn
83GR2J196BeND96UuI+tAuxjlcFF62++LvhDt31G7dG98TBvBBbIH2CB/AGN
QN0KNF+1eOzYsYAq8vnz53Rh2N/fv2PHjoA2BoMhVEx6ex2f/Pz84Dbx8fEB
Ac+fPz8ysuqmoW9sviJ68+bNdLOYmBjfeML8jVTJ8CVDsfCMa8Evlen09L16
Ut10DPBZvWfvDWHx21GjqMVveVn1jnDbLZZQ44/+ioRyLY7yGmG0fNf9W1mt
5HyWNIm9J26xOshRMWeUfmBbPGP2T4VXkjN/NHb/T4Wn5RvPqT26Nx7mjcAC
+QMskD+gEahbIcDAwMC6IBs3boyNjY2Liwt4F9UvNTU1TEAxdavVat21a1dw
ZF8RnZSU9ODBA1/vH3/8cXCDME8y+6mS4ctTTdRaQP+mTKcH4itJdTM8Oc8l
5onEWhLz9bDEHVSlmSndTs6hrU/iq9N+U5n/REI5pjmstCyN77p/+p6wMnBr
X+CDB2H88qSwCrHNLmoVYoWtWPrpe6wOU9ti131hRej7f+J1h3woAsTAvBFY
IH+ABfIHNAJ1KwQrLi4OrhBDiY+PD7/9jZi61ef169cBLSO6dOlS+DdhP1Mp
w53mXmEtoLTvK9MpvcunyRJuQS3xrqS+JDEbuia5xBTJmPPf5BzaxypZQk3n
/0LYTnekmNcIo+W77u+4UkrO54Qpip1Y992oIAcOTfD5UoIvS+M5cpKN2T/z
/cTrcvjKVeHMD+WpPcY3G+aNwAL5AyyQP6ARqFthTWVlZRs3bhRTtK6sRLj7
I7Ju/ew3CxrfvHlTTMX68ccf19TUiPmLqJLhq/YeTflzZTr95an8aDcGjSjh
ubDWk/jnWrmgl6V1zjJt6zNbsVfYTrf7Ma8RRqupqenD47nkfDpWotggJvZh
IzmwUdkvEEQaf/wt4f54/2/vj5trjwkvepdsUXeEbzrMG4EF8gdYIH9AI1C3
QigmkykuLm7Dhg1rVo5nzpwJ/2IpEfBocWlphJ1AOzo6jh49Su/IQ9u6dWtS
UpLVKvZelSoZ7nHZhWcmE7+iQI8ut4fUNR8cy+UV9kkxvbeOqF83L2MP3hVe
SrVJXKraj74VOP/qBq8RRqu8ukHC5q1+93I6ybG5tYMyjVAyp7lbWIUp8fc9
Kzb/zx3Tr+jFnL1uh7rjfKNh3ggskD/AAvkDGoG6FcKz2+3Nzc0FBQVpaWmP
Hz8uKipqb28PXhOYu5WVlbGxscbGxmfPnj169KikpKSrq2tubi7aOGpluCHh
S2TGrsB0nV66Z9P5kLvZRiuvdpCEfZDHdNMzKl6vx5DwBeEEephuHy90JAjb
EtUe5TXIaL0oEl4WjnZZ4Jwa4ReRnNsp0wgloxd/NhUK/+K8Xu/4w7/k9bz3
Ww7zRmCB/AEWyB/QCNStoG9qZTh9u1CBTUDGTYukrtlzvZxXWHq/0bgM5VY0
ci+bhQetk7/OGM3Wn6WFp1UfPq8mJ/PS46aojq3vnBSOfRTdsQowZv+MehL7
Ef2RueqAsJ9Rw2m1RqgDmDcCC+QPsED+gEagbgV9UyvDJ558l0zXVyyyP9jZ
azCTuuZogqg3f8V41TtNwp5/0MArbEQrc33CwlZP/o4x2vJ4dcCSQaq4mVoh
+Z7pwJhFuFcbr627ll6Xw3D3K9ROQ2P0p0tDucLmOE//Qa1B6gDmjcAC+QMs
kD+gEahbQd/UyvCprH9Wcu+V5h4jqWtiHzbyCts/NkfCHr5dzStsRMuT9UKl
+eI/GKPRb19Opr/HZYQSxN4TFhPOqYnuqwzL4rLwbuzZ6N6NldvyRC05veOP
vxXwqccxb7jzjvDsgcOiyiB1APNGYIH8ARbIH9AI1K2gb2pl+HTu+0q+1kc/
0Bv/lFuZPDVrI2F3XomwoBZHtsEc4X3Joo2M0dxL08JTxw/e5TJCCY7EF5OT
Wd85EdWxXq931VrETpdMg5RgvvkKOb2zlfuCG0xm/kgL+xC96TBvBBbIH2CB
/AGNQN0K+qZWhs+UbBG2BRl4IXd3eXVDciygZF1ykrDrzxTwChvRYleysJJS
9SeM0byeFWF55zvveL3hthuWz67LBeRk9o1GvcLYTnrv15ko9n6V23TeB8LL
rb3pwQ3o3XDmGs4qP0J9wLwRWCB/gAXyBzQCdSvom1oZTi9Hs/g6Re7u0kuF
DWsyy/t4hfV4ve//Lqzvj8fj5RU5PMvLy+TsWV5eYg84lvx1apmsWfaAEsSc
Fm6Yzs7boz38ZFIdObx9wCTHCCXwer2j974qvMo9PxTchr57ruL7xW86zBuB
BfIHWCB/QCNQt4K+qZXhcw1nhT1DW+Pk7i4pp4MUNYUNwxwjbzhbSCIvLjk5
Rg7DXH1IqPo777EHnEj7nlBbzXGr68WjN9h9/1iO2xP1Pd/4p69IhLJmgxyD
lGDFMhhx5WfX4ji1i+sfej1uhQepD5g3AgvkD7BA/oBGoG4FfVMrw+kdLS2N
5+Tu7kZ6CylqatvHOUbedbWMRJ5U6vFUU/Fm4SnrwWz2gMYX/0ECLk/WsweM
lmluiZzGbRelvOOZViLcUs8o6+U+QmlsfZnkxE7nfRCq2diDPyPNnOZuJUeo
G5g3AgvkD7BA/oBGoG4FfVMrwxdfPxDe0Kw6KHd35+43kKKmrZ/nQ6RHbgu7
jvZH/1amNMbsnwpl5kQte0BT0UaqEM5hDxitnhFho6Ijd6SszFzSNEIi3H7W
xn2E0szVHaee6L4YqpmpYB1pttCRpOQIdQPzRmCB/AEWyB/QCNStoG9qZbht
4AWZqM+UbJG7u0O3hOpyYJznViMXUhpJ5Fe9Ro6Rw5hIf4+6PdfDHtBc/Ynw
4HHXffaA0arrmCCn8UqqlAmA7+STCOfuK7eXbnjGF/8prBU8HHKDntnK/aTZ
hHpbEb3RMG8EFsgfYIH8AY1A3Qr6tm41xfq1j1WIeX6SF3qxWaPZxjFyXIbw
WmVV6xjHyGGMPXhXWEZpicPtY8vLS9RtwcvsAaOVWztITmNybqeECCOT8yTC
/k8ruI9QgoBFmVyLIR9Qp8//aNIfKTlI3cC8EVggf4AF8gfUsi6I2iMCkJFa
Ge6YbiET9amsn8jd3fozwh4rVq6rJ93P6ySR8+vWWC2WO6/XY7jzDjl7Xg+H
vUpXb6xziD1gtFLyu8hpfFE9ICHCgs1BIsQouCdRGK7FsYiLMvk5TO3UVkT/
24OlmaKHeSOwQP4AC+QPaATqVtA3tTJ8xTIgPBj55O9k7cvj8ZKK5vPdarw8
d6t5Wt5HIqeXKrEckHvZLLIaEs82mE1imoo3cYkZletpzeQ01khaOMvr9X50
Io8EWXZyKOcZ2Q0lwgY3L/4zfGP6uwjH9CtlRqgnmDcCC+QPsED+gEagbgV9
UyvD3Usmofh68K6sfVntTlLOrOd9J66wYZgEv5cj5QHXaK0u+b/LJebyRB21
hehPucSMyrGEGnIaXw9L3ECWfhp8Qqm1ncOgF82OeBd7Mv0H1Juwmrhf/GbB
vBFYIH+ABfIHNAJ1K+ibWhnudTuEByPvflnWvoxmGylndlwp5Ru8pn2cBP80
vYVv8DUtTzUJj1g//1cuMZ3mXqEWTvt7LjGjsuOyUHJOzUp8AflkYi0J0jk4
w3eEEsyU7RC/2pW59hhpPN9yVZkR6gnmjcAC+QMskD+gEahbQd9UzHBD4leE
F/pcdvk6Ghy3kHLm0K0qvsFb+6aFZWwfKLGM7dJwofBMbwGfX5/bPks9e/wN
LjGj8uHxXHIaHVIf8f2U2qVXsTWywph8+g/UrrgRcsPak6rkCtv6g3kjsED+
AAvkD2gE6lbQNxUzfCzlm8JSqzYZd5BpHzCRcuZMcj3f4ANjQlF8+LaUjUej
Ze1+TM7bbMVeLjG9Hje9LpBX2XWBFpeEB7lZllR6VPiaxHlW2c9xhBJ8fkrv
Ct/MuB0Rdl+iVyrDVjgSYN4ILJA/wAL5AxqBuhX0TcUMn0j7ezJRX5nrk68j
em/Qa2nNfINPzQoPIe+6WsY3+JrotybnGs7wCjt2/0+EIssu8Q1TaQzGBXIO
994olxynoF541zgxu4PjCCWgX0MeS/nziO09zkXhq4OEL3k9KwoMUk8wbwQW
yB9ggfwBjUDdCvqmYoZPPfsXYQFVo4xvhhY3jQjlzIt2vsGtSzIu+rSmufqT
5LwttN3iFXYi7XvKfI0QrK2fzw3xxq5JEufioyaOI5RgabiAnM/p3PfFHDL+
8K+EX4FF5fvFbxzMG4EF8gdYIH9AI1C3gr6pmOHTeR+QWbp9VPpdtoieVfaT
cia1uJtvcFk32VnTbPkuct6svWm8wk49/3fxL2PyVdEySk5g/FPpW8D0j82R
OJ/c5Pwic7RWLSZce1TMIdO5P8eSwpJh3ggskD/AAvkDGoG6FfRNxQyfKdlC
Zum2gRfydfSwQHjtMbt6gHv89WcKSHyr3ck9foDp/F8I1Y2hmFdYU2EMVTTl
8worBv3FwuMi6V8szM7bSZwtF4o4jlDKYKivFyIuJuznK2+FJYVb4+Qeoc5g
3ggskD/AAvkDGoG6FfRNxQw3Vx0QJvavU+Tr6PazNlLOlDUbuMffQW0bajRL
3MNFvKmsn8jxfPVs5X7hNm73I15hxUjO7SQnML9uSHIcl9tD4rx/NMft8XAc
ZLToX9PyeI2YQ3zlrbDiVvkuuUeoM5g3AgvkD7BA/oBGoG4FfVMxw+cazgjv
abbGy9fRldSXpJxp7JrkHv/QrSoSf3A8wrKx7CZSvy28BTk/zCuspfGccLPv
1ae8wopx9UkzOYF1HRMsoTZfKCKhzAsybq4U0Wjy16jlsqfEHLI8UUsO8ZW9
co9QZzBvBBbIH2CB/AGNQN0K+qZihvuKIzJLtzSel6+jU0l1pJbpGprhHv9M
cj2J395v4h4/wOi9rwr73jrmeYVdaLstLFNcd5JXWDGOJdSQE9g9zLSU8cGb
wncIA/J/hxAKvR/uaNIfesW99eyyTaq7i+4bDfNGYIH8ARbIH9AI1K2gbypm
OP1UpLn6kHwdHYivJLXMyCS3Qo+4nsbtdmFEXreT2i3liyILIjGsvekk8kz5
Tl5hxdhJPWg9OWNlCRX7sJGEetkt6i6nHBzGZnIyJ5/+o8ijfL/N0cTfF7/l
K9AwbwQWyB9ggfwBjUDdCvqmYobb+jOFQqn0Y/k62n6phNQyJssS9/iJL9pJ
/OLGEe7xaS6bUbgl9+BdjpGXDMXCvi35H3GMHNEvTuaRE2h3MO1bmvCc+l00
yfu7CMPalyHkdskW8QdOZvxAeHl5WvrSym8hzBuBBfIHWCB/QCNQt4K+qZjh
dkMJVSj9Qr6O1p3OJ7XM0jJTWbSmJ8U9JP6zSnm33XSau4UbeenvcYzsMLao
8nKlr1AlZ++XJ/MYo2WU9ZJo6aU9XEYogeXlJWnPwJuKNgiLbPdnyTdC/cG8
EVggf4AF8gc0AnUr6JuKGb481SgUSs//XaZe3J5Va8xyfLCWyKkZJF2kFLzm
Hp9GL91jzP4Zx8gr88Mk8kTqtzlGDm9yxkrO3s4rpYzRSppGSLTbz9q4jFCC
mdKPhcWZe1LFH0gvVmZpviLfCPUH80ZggfwBFsgf0AjUraBvKma409wj061D
2uKSkxQyG84WytFFecso6eJWVqscXRC2wRxy0kzFmzhG9jjmhaWE7n2VY+Tw
uodnydk7freWMVpzj5FEu5DSyGWEEkw9+xdhE5yJOvEHWrsfK/PwvP5g3ggs
kD/AAvkDGoG6FfRNxQx3WSfIFH384V/J1MvUrI3j7bw1Nb2eIl1cetwkRxfE
4usHwmJWVQc5RvZ6vYaEL5DgXg//B6rXVNcxQc7e1SfNjNGGJiwk2oH4Si4j
lGDswbvCJjjWKJbqWp6sx1Y40mDeCCyQP8AC+QMagbpV+ywWS05OTkJCQmxs
bFxcXGZm5uDgoNqDemOomOEe5yJ1g++PZeplYFwoZA7dqpaji9fUHcMTiax3
DMObb7kmPEfadIFvcLraci9N8w0eSl7dEDl7ybmdjNHMC8sk2uYLRVxGGC2P
0yqs+Xz3y16vR/yxq7fC+bp8g+RlweaoeDVa0jQyNcu0EDQ7zBuBBfIHWCB/
QCNQt6rO4XDU1dUlJiZeubLG216VlZUbNmxYF8RXw87M8N+pU39UzPDPb/Dd
eYe6weeWo5f2fhMpZM7eb5CjC4NxgXSx/9MKObog5uqOkzO20J7AN/hE+nsk
uNOs0KJGj4u6Oa5qFfA6s8fD/3XmiJyzXcKbwk/+Lqpj36ytcKrbxn95Slj0
7FHhazneHxcJ80ZggfwBFsgf0AjUreqqqqrauXOnvxSNiYlxu1eVNv39/WsW
rX67d+8eGxtTa+RvCnUzfDT5a2SK7nHw31nVp75TeAz1WhrrY6hrmp23ky62
xhbL0QUxU7ZTWPCnL4NvcGP2T6W9lcki/ukrcvYqWkbZA246X0QCWhaX2QNG
a2k4n2VHoUnq2wOHqV2OEXLR3C28Skz+pBZ1qzUezBuBBfIHWCB/QCNQt6qo
sLAwoBQ1Go3kU4vFsmvXrlBFq9++ffucTqeKfwXtUzfDxx//jfAa4CKHmiUY
vcDs3ReyVAEOp4t08QvmnVzCm877kJwxu4Hz67qmoo0k+NJQLt/goZy930DO
Xmsfh4eTfx1XSQIOT8ryZUh4C223hHeQa45Ee7ipYJ2wFc5gjhwjZGddcm44
Vxhct/r+9BrMqgwJ80ZggfwBFsgf0AjUrWoZHR0NrkM7OjpIg+Tk5PBFq19m
ZqaKfwvtUzfDJzN+KDyYOtslRxcvqgbIjPqxbDeDPjyeS3pxumR54NlvKuuf
hZtx0y18g5urDpDgi68f8A0eygHeZeY53oVwtMzVnwjPcndE/Sw3/Sj4fGuc
HCNkdz+vk5xkX/LT97iP3JblLfKIMG8EFsgfYIH8AY1A3aqW69evBxehNTU1
/k9dLtf27dvpj7Zt21ZSUlJbW3v16lX655s3b15ZUWhl1DeRuhm+6sHUyXo5
uqBfn/TVsHJ04bP5gkLPpk6kfpucsZX5Yb7BLU0XhIqp5Rrf4KHQJc8cj1N3
M7OVBCzn8eBxtKbzPhBuW49EvTbUYmcSOXy26tdyjJCRzb5Cv9b6vKq/e8RM
33LtHFRhbQHMG4EF8gdYIH9AI1C3qsJms8XExNDl5507d0ZGRkiD1tbWgJJ2
aGjI/5HX601NTaU/amtrU+nv8QZQN8PpRyIlzPDFuPuinUynS5pGIh8gyd4b
5aSXselFmXrxGb33VfneCF7oSBAecK09xjf4mjwe7/tUveNyR7H0biipXBd6
kmAi7XvUUwSvoz18yVAsvB6b+3M5RsiIXgJ628Xild88YHAl9aWwG9QjeXeD
WhPmjcAC+QMskD+gEahbVeH7/wDhn/W9f/8+3eDixYv0p06nk3719eHDhwqO
/Q2jbobPlMu4ypDftbRmMp2u64hiJ82oHEuoIb30jMj1fp/X4xI2WEn4Ave1
W219mST+TOnHfIOvad7qIOdt3Sk+b9TmU1XVvRzWjXWi9fkq2YlfEb5bcEb9
JYbT3CssR5z6HTkGyehAvPBoN3mGoX9sTljJ+ViO7zer8KgwbwQWyB9ggfwB
jUDdqoq0tDRSde7Zsyf4Qd99+/bRdWt1deAbVVlZWeTT69evKzXwN4+6GW6u
OSK8UNmZJEcX9LI/7f0mObrwiX3YSHpp6TFGPkASt31G2Nzz/p9yj28fLRfu
9OV9wD1+MMOUsIXQ9th8LjHpFaSvPpFlBekw3EvTjBuwelZskrd/VcCEyRqq
PqVfVS5sGFZ4YJg3AgvkD7BA/oBGoG5VRUJCAqk6fTVswKcTExMBDwnPzc0F
tKmtrSWfnjx5UqmBv3kCzqTCvVteXpT7hcrDt6vJXHpgTK7dMOnNXKpa5dp9
aWWuT7gTl/Y97vEdpjYSfzLzR9zjB2sfEHbX/fX1Qi4xu4dnScxjCTVcYorn
MLawn8Ox+38qrLNtm+Q7QkaZ5X3k9J5bvSFyTs0g+ehkkkL7KBGYNwIL5A+w
QP6AWtYFUXtEbyN6baXS0sDNPgoKCuhf0NGjR4MjdHR0kAYHDhxQZNRvJHUz
fKHtNpmfz9XL8vXCrqtlZC49NWuVowuf5FxhedX8+iGZelmeaiSna+r5v3GP
71owkPjjj/6ae/xg1W3j5LyduF3CJabvt0xi7rzCeaugiGwDL8g5NBWtlxZk
KuvHwnplUyq8KxrGoVtV5PQG7LdrsiwJt2KP5iwuKboHGeaNwAL5AyyQP6AR
qFtVERsbS6rOysrKgE8vXrxI163p6enBEerq6nC/VQx1M9za/VhYOrVyvxxd
bKR2mVywyfXOXUZZL+nlaVmvTL0sDRcKNVEB/1+cx7lI4o8m/gH3+MHoO3QX
75VxiWl3rJCYcm+nG2yhNV74KqbuhLQgMyVbhC1c+zW0kxf9PvL7a/2DOnhT
qGqr28aVHBvmjcAC+QMskD+gEahbVUE/J5ydnU1/5HQ6N27cSNetr1+vsWLn
ixcvSIP4+HilBv7mUTfDl4ZyhUKseJMcXXxwTNhZlctytWuiV1i9nyfXWkDW
nlShzK/YI0cXhrtfJl14XbIvrfOo8DU5b/GPK3iF/eXJPBLWV8byCiuGufoQ
tXnrXWlB5hpOC8/Pv7rBd4Qs6Pvja+7Tml4qfIETl/FKybFh3ggskD/AAvkD
GoG6VRXPnz8nVWdcXBz90atXr+iidc3tWd1u98GDB0mbJ0+eKDj2N4y6GW4f
q5R1y49lp4vMon8p5623yldjQv31VK7p+kLbLeqx6lNydDGW8udKvllJvxec
nFnFK+yOK6XUw+E2XmHFmM7/hbC107DElaYWO+8JGxJVaeg1h1tZwt646aU9
wQ16DcJGrlsuyLKzVSiYNwIL5A+wQP6ARqBuVQX9lG9MTMzs7Kz/576C9OTJ
k3Tdeu3aGov5VFRU0G2Ki4uVHf6bRN0Md5hahRc2s37MPf7svJ3MorddlDEN
mruNwvOusm1eaWk8R92G+1SOLiYz/g+192iXHF3Qzj0QVntOy+G2htLRO8K2
RL5KildYMSYzfiCcwJkOaUGWRqgtXBVZ2FmkHZeFLwReD88GN3B7PL86lU/a
jJtk3Ms4AOaNwAL5AyyQP6ARqFtVYTQa6cLz8OHDU1NTVqs1JSVl3WoNDQ0B
xxYWFq5fv55uMzo6umYv8JnaGb5iGRQWyH3yXe7xR43CNiv7P+X2GGqw7hHh
NtPxu7Uy9TJbuV/YNqhbll2JjTn/JawINL7Gg6B8HaR2As0p5rYC7aXHTSRs
Y5ei6/GO3vsqOYFu+xqVnRjO2S5q4ejv8x2hZOYF4Vugj07kOV3uNZtdSBH2
hCpuHFFseJg3AgvkD7BA/oBGoG5Vy7Vr19ZFsnXrVqfzt0tWms3mrKyso0eP
BrS5evWqun8RjVM3w1dtSPrgXe7xexQpJz9TqkA2FW0QnkEdypWji1UrAg28
kKML2tbYYnLeyqoCv4OS7O6LdlVKJ4/TSm29+hWv1ysxjmNeWCAr6Q/5DlKy
ug5hY9wTiSH/NdFrbd1Ib1FseJg3AgvkD7BA/oBGoG5VS19fX8S61VeokvYN
DQ1rthkYGFDxb6F96ma41+Wg5vlf5h6/uUd4fDf2oYz7idC3ony1mEy9GLN/
JtwMnZBlf0x6WaHFzntydEH4yjp61az6Bm6/oPTSHhI2Q7blnYM56Q12U7/D
Emo06Y+E+7bLgftTq+J+nrDZU2pxd6hm/WNzpNn2S3z2NhID80ZggfwBFsgf
0AjUrSoqKiqKiYkJVbQeOXKEXpFpeHg4uA1WZIpI9QyXdQHbqlYllkv6bPUC
UPLtvbLq3cnZNZbRZmd5eZl0YWm+IkcXhNXuJCdt3ekCjtf9woZhEjkxW+JL
phLYxyrI2TPm/BdLqIn096j3ZOVaoToqh29Xk7Pa3GMM1czl9vzihLCes3lh
WZnhYd4ILJA/wAL5Axqh+qz+Lef7fwUBu974xcbG2myrlgldXl6mG2zYsKGi
Qsb3GXVD9Qwfe/CucF9pycQ3eH69sD1Ncq68k/8Pj8u+4c74w78QFvu1yvLa
5kJHorCSbc0RObogJmes5IztulrG8brf0DVJIl9JVW46sWo/4vJdLKGm8z+i
1iUu5DVCyVZcbjrDw2+FfPxurfLvF2PeCCyQP8AC+QMaofqsHubn5xsbGx88
eHDixInz588nJSV1da29zOmePXt8v68tW7bcuXMHjweLpHqGTzz5Lpmfr1gG
+QZ/Wt5Hbdsh7/Oim84Xkb7mrbLsfGpI/Ao5V56VJTm6sPVlki5mSj+WowuC
fvv4WEINx+t+9+rIvMJGZHl5Sbhb/fIiSyhz1UFqH9hETgOUbmDcQk7pjsul
4RunFAjb8j4qlOXBgGCYNwIL5A+wQP6ARqg+qwfxXv1G8HauEIbqGT6V9c9k
fu6Y5vwo74P8LjJ/zqvlXBQH2H2tnPQ1MWPlHt/jWqbX/OEe389uKKV2YPlQ
pl78Gqm7opceN3G87gfcyeUVNqLZ8t3k7Fm7H7GEmm+NI6Hm6k/yGqFkxU0j
5JReS2sO37i+U/jNnr4ny4vYwTBvBBbIH2CB/AGNUH1WDyAr1TN8OvfnZH5u
H6vkG/xWViuZP1e0yLsd0pE7wtt//aP8F9Jx2SaFtZdT/px7fD/HdAu1o+5P
ZOrFjy6FEp63c7zu25ZXSORfncrnFTYiY85/C8k8Ws4SytafRUKZijfzGqFk
vl8QOaUvqiM8zWI020jj9WcKlBkh5o3AAvkDLJA/oBGqz+oBZKV6hvvm5MLG
K4M5fINffvySzJ+bXk/xDR7g3IMG0ldr3zT3+E5zNzlRk+nvcY/vtzI/xGtF
3Igyqae400p6+F736ZcxHStr7zTKHf3Qu9PM9Fz68mSD8AXCs3/hNULJDt2q
IuezYyDCe+herzfmTAFpPz0nyzPtATBvBBbIH2CB/AGNUH1WD2uy2+0jIyNt
bW30u66zs7Mejyzr4eiY6hk+W7mferTyMd/gp5LqyOS5a2iGb/AAN9JbSF+1
7ePc4y9P1gtr1Wb/lHt8P/eyWbirm/x1mXrxu5cj7KuSXz/E97q//VIJCW5S
pG7yGU38feEFZOciSyjX4igJNf7wL3iNUBq3x/MRtURw+EWZ/Oh/eg2KLM2E
eSOwQP4AC+QPaITqs3rw83q9dXV1iYmJZ8+e3blzJ1k3ePv27aTNgd8oLi72
VbUqDvXNonqGz9WfEtafabvFN/jB+EoyeR6enOcbPEBSdgfpq6hxmHv8paE8
4cHRovXc4/t5PW7hLdo773i9Mn4RdC2tWaj0Oyb4Xvfp+4P9Y0rsf+peniOn
bvTeHzNG87qdq34RHheXQUozalwgJ3PbRVHbE9NLMz0p7pF7hJ9h3ghskD/A
AvkDGqH6rB58BgcHT548ueYurqRu9Xg8GzZs8P9wy5YtpaURVrwEP9UzfL7l
mrAEa1Ms3+A7Lpcq9rBiWkkP6Surop97/FV7rFTu4x6fGE3+mrAzkcMiX0f0
LbnOwRm+1/0LKY0keJjNRjlyzr4WHrFO+z57wLGUb1LbHk2wB5Sspn2cnMzY
h43RHnLuQYPcI/wM80Zgg/wBFsgf0AjVZ/Vvufn5+YSEhDUr1oC6dW5uLuCj
58+fqzv4N4LqGb7YmSTfhqHrqZfsrHYn3+ABcmoGSV8pBfz3/lhojRcWmG04
wz0+MZH6bWFnovlh+Trad6OCnDGDcYHvdf92VhsJXtZs4Bg5FPtombAUc+7P
2QOuWmrbqOak6HFRd7Q3TydMwpLOmy8UyT3CzzBvBDbIH2CB/AGNUH1W/zaz
2WyHDh0KU7TSdevAwEDwp2lpaer+FbRP9Qy39mUIG4aW7+QY2eP1vv+7mbPv
j8fj5Rg8mK84In35iibu8X21KjlR861x3OMTU1k/lm9nItrGc4XkjFmsDr7X
/dRiodSS4/Z3MGv3I+GGeMUe9oCmog3UkmXZ7AElo29e13aIuvPr++f2i5PC
K7Ey7WhMw7wRWCB/gAXyBzRC9Vn9W8vr9Z4/fz580UrXraOjo2s2GB/nv0KO
nqie4UvDhcJrm4U8B0NvhrLutOybodC7kV5+zP8StnoBK6a9QcObzvuA12Yu
YfjqGvpbBbfHw/e6n183RIIn53ZyjByK5eUl4Yn3lxfZA5prjwqvfrffYQ8o
Gb3I1ahxQeRRh24JO0N1Dsq7KtpnmDcCG+QPsED+gEaoPqt/a9XV1QVUoLt3
7y4tLTX9RnDd6mMwGD799NOAo+Lj41X8W2if6hm+PFFHLZP7M46RTZYlMm32
Tbw5Rl5T19AM6e5UUh33+PTdt6WhPO7xiZnS7cJtvv4smXpZsDnI6dpwtvAz
3tf92o4JEv9aWjPHyKHMVuwl522x+yF7wIW2m8KT4XUn2ANKY3e4yJn84Fiu
yy12qa7bz4RHtfPqhmQd5GeYNwIb5A+wQP6ARqg+q387eb3e/fv30+Xn7du3
nc7fvp8Yqm71q6ioiImJoY+dmFBzSRONUz3DnTOdwrakT/+RY2TDlLAI6q/j
KjlGXtPI5Dzp7kA8/+6M2T8lJ8pX7HOPT5hrDgv1V2eSTL2MTS+S07X3+ud3
dfle9+mvEU4m1nKMHMqq+9QGDt+T2AaeCY8iFG9mDyjNwJhF+E3diOL+ex51
y9tXw8o3Qj/MG4EF8gdYIH9AI1Sf1b+dhoeH6cLz+PHjKysr5NPwdatPaWkp
fTjWFg5D9QxfWRgR9ql8/C2OkbuHZ8m0+YT8lYvct3cnM35ATpRzlv+6T8Sq
512br8jUS3Bdyfe6T9fFe67L9bQzbTL9PeEXNMPhyeTlyQYScOrZv7IHlKbi
1ahw5/pJFHeuOwZM5MAjd6rlG6Ef5o3AAvkDLJA/oBGqz+rfTtnZ2aTq3Lx5
88zMqnejItatHo/n4MGDpE1qaqpSA3/zqJ7h7mUzmZyPJX+DY+TmbiOZNl98
1MQx8pqWZH6ddvzhXwi7otgmuccnFjruCis81x6VqZf6TuE53qu/qYb4Xvfp
55DXnyngGDmUVfsH2WfZA7oWDMJXOg//ij2gNI8KhZ1Y00t7xR84t7hM/4vw
euVdGA3zRmCB/AEWyB/QCNVn9W+npKQkUnVeuHAh4NOIdatPTk4OaXPjxg35
h/ymUj3DvZ4VMjk3JHyRY+Sq1jEybY5/KuO6uH5emZcvNiR+hZwoj8vONzjN
1pcprPBctkOmXgobhsm5Sszu+Iz3df/z1aSPCb8O8W9lSuzOZafS+EtcajSv
20H/0/B65f0rhBL7sImcxjpxiwkT9EZUs/MyJu1nmDcCG+QPsED+gEaoPqt/
O129epVUnenp6QGfiqlbff8/hLQ5elSue0Y6oIUMH038faEiW1niFTa/XukV
ZdefpbaLXeK5XazHtSyUMHe/zDFyMLuhVNiHNO9DmXrJKOsNuIvH/bq/5UIR
6cK8IG/RtPpx97/hFXbs/p8I93CXpnmFjcquq2XkNI5MiV1M2O9YQg05tr3f
JNMI/TBvBBbIH2CB/AGN0MKs/i104cIFUnUWFhYGfCqmbq2vrydtPvnkE/mH
/KbSQoaPpXyTegLWyCvs0/I+ac83SrbzSinp0Wi2cYzssk0JT1OnfJNj5GAO
Y4vwWmXWT2TqJSmng5yrwobhz2S47h+IryRdDE3M8w0eYNW7qM+5vYs6mfFD
YS9dUzuvsOK53B76trVjxR3V4XeoJYXz6+VdUhjzRmCB/AEWyB/QCC3M6t9C
cXFxpOq8f/9+wKdi6tb09HTS5syZM/IP+U2lhQyfSPsemZyvWPp5hU3J7yJz
5tzaQV5hwzh0q4r0ODhu4RjZae4hp2gi/T2OkYOtWAaFvlK/I1Mv19KaA54+
5X7dP3e/gXTxqlfem5W2gRfU2r+beIWdzv9I2PxopIhXWPHGTcLyVhJWG8up
GQx4Glw+7PnjcSw4zUp8wQUahLoDWCB/QCO0MKt/C6WkpJCq8/jx4wGfiqlb
z507h/dbxdBChk9l/US4qTTdwivszcxWMmeueDXKK2wYZ5LrhaciB3g+Fbk8
WS/scvviPzhGDibfSlm0U0l15Fx1Dn6+8Br3676SCbDQniDHYlazlfuFPYm6
Ar/BU0DT6ylyDs/eb4j28Fe9wtpocmxqTJOcP16vd7HrwUTa9w133jHc/Yrv
1+e2z0Q+DPQFdQewQP6ARmhhVv8WKi8vX0epq1s14YlYt/ra04c/e/ZMqYG/
edatpsoYpnPfFza+HOO28+mlx8J6Mr7pN6+wYVx7ItxDrO/kuWvw0nChcDuv
UN5fk9fjEt6lvfOOTMsB7f+0gpwrg/Hztya5X/cfFggL4WZXD/ANHmCu/hQ5
afOtcbzCWpqvCHsSNQWuUKeAF9UDLC+JG802cvjmC/LeL5acP865PkPCF6ic
//xRfKe5h+/wQONQdwAL5A+oZV0QtUf0NjKbzfSvwFecWizCU5fh69bZ2dmt
W7fSh/f3c3v0VH+0kOGm4s3Cw5BDubzC0nf0uoaUuIGS8Lyd9Fjy0sAxsrXn
CTlFsxV7OEZe0+i9rwrLATl4PvBMbDovLJpkWVz+TIbrPl1zPSqUccdbn5nS
7eSMWfue8gpr7X4s/N7Ld/MKK95t6gVV/2vIUfF4vB+dyCMRbMsrkY+RSlr+
+NJ7/NFf00Ur2XjIvTzHfZCgWag7gAXyBzRCC7P6txP9oK/Prl27Wltb/R+F
qVvr6+t37txJH7hv3z63O7q1RN4qWsjw2cp9wpy/h9tmuwdvCm+bDk/KuyyP
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
MZ9nh6EVtat/9CeKkg/exIVBhzQz6H1Gz/2cGhxOe7+8n7p8TeKX8K6Cc566
/JefVm+BB4VeN2kx6IgcuoXLSPWNTlOReetRJ5JZ2jRKRSYkov7Mdd8GLgTb
xEueaTqGoxiaTpB1k6NSuN3BIYHrD0clqGRVv1y5f//+mWAcOnQIWWoxMTFB
rwnKyZMnP/744zW+hM++KxKLxQJl7t8vquCFYKjCux4+fCi13eHhYSghPT1d
eFOv1wt/6ZoQCDZ1eXm5SANHJRruMLQBK+nPhNJ6RnCQaVySQomMlhCGfdX/
NS283MSH427btMJnbUs4zcPgcOo/KUreDvxF9dPY0GP03IfpiwXTia5wz6IF
jZJgwNIVDtGmfU9JX3GYhNloXqAiE+bjSi0JWcZLNhH1Z6ryI5wZWErScugN
Yij8B1EvOWqF2x0cErj+cFSCSlb1yxW/cqiMaG5uJu+q0WiEMk+dOiXmrqam
JnjXvXv3pLbb0dEBJeTm5tbV1W3cuDHiX33u3DkxB69r1KHhizOD2ErK/Dmh
tKd9erRCPkspqa941p8oRa1bFkiPxpzm53hkMn5CpYdiYGcvrzlWgsZn3uZE
7zN67rf0MlQG5+woGiVt+g/pCofos3+Ho2gn5VfUEoPT5YZpzcj3Xpao79Ii
secz6H/XEfVHl/kzEIksoQPOuRf4t5D8DbJuclQKtzs4JHD94agElazqlytO
pzPweJQuW7ZscTgc5F0dGxuDYs+fF1UZpK2tDd6VlJQktd3GxkYoIT4+Xvzf
vn379jAVcJZYow4Nd81P4PV/2vcIpbEooioeeJ5oMJE6jgpGCj6JzvkDlR6K
wcc/+dYbtPyTXW4PtolifVI9M3ru978woRYPJTyhK1wwfxh5U/sxWfIhDrFk
k7UYAWvWbDlDJ0ZbYEgzg733r9fSEosIrz+vkjLdegPpsySPbkFLNXe+Bs67
NcSd5agObndwSOD6w1EJKlnVL2M6OzvlG6WR2LZtG63su/39/VAyjDMNQ3d3
N7zrxg3JZetramrC/IG7du26fPlyRkaG8F9YsxURsYrQGnVouGfRiv0tk75M
KK24cQStkJML5eTCIuGf12tR6yM6M6E0m6aaYuSvJOBa3eOgU/nUbHWgwYk5
5RPuzei5r5uyohZ3XKiiK3xhtBgNkbGU4U9puvZj1JClh0LAfhh6RqbQiB2+
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
hmHRN7h1xqK6giZqW9WvEGw2m98R6qVLl0ymyNvmExMT8fHx8MYNGzbMz5Pu
5C9j1Kbhlt67stfkMPnPnss1jHooHpi9dsoszQ1v/nl+dI0jCCyUJq9cKcwd
kVsbvMyKAs/9yqe4qO4tWUV1Bea6E7GKPvmEagdFsTBSiHWjbB25wJ4RXIou
VPQxCy5ltqJ2yVMyIv1xGFqxr4Lcyk1imG27ADbZjrNrCLLhZCkaNMJi9zCl
87E7kpO3M+XVBiZIFvpqCyLxS0w3B7jdyiFBSf0RbNLt5yvRj/fk3aagl2kM
c+/GYgsrVISOwng9bk3y10EcB1EhOftEExI1nvJtBfIMwMelCoNbX6pvVb9C
aGhogLbnkSNHFhfF7hTZ7faDBw/C2+vqKCSrXK6oTcPnhx+hWWiqcouke2GG
0kMJCrntheFjUJRnTGJRHktvKt5FrP2YUQ9FQpgsS0AwEtFQCMZj0GsUeO6L
CbONiI8re9sFuj0Ug13fgp2sHv2ZXOCTLi0aFiVTy8IgrEePSYvGIv2ZH8oG
ez4xxN0MyfxQDthAWM+uIQR0KfnwaLFHYvSBHzB33NrjJVJjGdgB00H7veY6
rjFqlNutHBKU1J+qVrwB+97hQv10yP2rEyk4Ufyq2IJ5iX5fLHAYnmJL8+53
CKcdwQoeT/4G8AdjHsmbVY3LZ9+Uu/vNFLWt6lcIaWlpyOrcvHmzmJNWyNTU
1JYtW5CEGzduMOrnMkBtGm4bq0RT0GTx+5Lu7RicRPPJqRA7kEpyJBGHj/VJ
dIMk8Zemjqn+EF43difKkHAu/WnESDoFnvv9IK1xrNydDZgWydp3j24PxeCc
HUUd0Kb/kFxgwZPnaFjuFvWQCxRJceMIajcxv5tQGtIfxY5BHZNt+GD34a/Y
NYRo7TfQPRlffwKf3oZZ/SqJtS89lNH6WRQbpRzafnC7lUOCYvrj8XjhYWtS
QbiZc2IKx4C8o44ETTA/w1TVNnKBU5VbkUDz07PkAsNzPBlvBTxul5ndkSlq
W9WvEK5evYqszosX5Xi/37p1C0k4cSLKy341ozYN9zlLyv0fSffWg2MjNczP
Z+61oP487dNLuldYb+NDvY6rjHooEvPTc+C5cE6GhDhgwoeKZFTgua8DD/Gd
F6vkCWFRhkYSnkUrdJ4kF5gK0lXl18nJuyUPePwdn9ZMKA3pz3T1Thx22ptK
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
9z37NoMzZUCa6a+z7LbWBeEdzY+Jh8uhIwOyD82kWEI37SF7eAHbySCqCTeW
ERnh00L2gBqnpx1t8qzZpilR8dti461QQpYhYhAiDCwUK9lF1/MD6Ai+GP3Q
ZXvtXDPu+2zahzxYyACbTNucT5w1c2v8lAB/mcPsP71sEFK/pbpTbC6rehwH
V3HLHaH4K5gOyYneKRSigWLIJq0cEVVsw1TcWw5jm2mQN12Eliu7I+zbwJTJ
Y8HV3ncBVptyS7XbF8DjB9IiqPyDoVTrYBr7okKksVVQkO1agtPwD7Q2w/1l
CPURD2y02pr9LRbLbiCwNr3gNJVgs+A73kp9GtN2It7aW3FKcN46NzfX1tZW
U1NTUFCQm5tbWVnZ2tr65MmTmZkZsy8rBQ8MDEBWGBYWxuas3t5eeFZEhIPJ
nCXi4+PhpVDfaQ085q0O8Ug4xJV8hlnPw/iN/efx6NcdNr4ZtyG/eSzsJD4r
reIEzzYzI63iFCwN86V/kX2brtrkwqTXSIB05Rn+7WSDqsY0opqV+eaT/OP2
beqaCnGbaxkf1D9sZXPlzMxMro11jZxSsu99MrjMvsHog//Bk2pXXSr/FrJE
XyFZwvXnHnTW7Hos0SaNTK/l00L2qGsku98O/1gQBrJ34/72FZ1/JND4YcDj
Yn9s4WDWdjanHL1VijuORqavLWSP6nqilPX5xcLW1jbm9k8KvnG3775De3MV
NmYi8oX2ljqHzdwaP9+EljP/HQ2nfIJvOhb3jrOb2mMo7R/E2qiXOuuzqeOx
WYS37rhc1Nzi4hEwIxfMe+hTUdvs2IDI7/VU3Wd1xbbW4eQ/2lpO/z0bm1rR
4ME3Laxo8qYL6I7jsW/jO3ZXRXp1Na+Bx09f4VlsFRoG9i3hozxyq5RfM91A
eQ3xj2+/VOTwr76jsQg89FcetXr3THlBT8UdbPNI0kewm+h1g/iF0AayhbPV
O1e8dXWyQpL/Tz4/ym4HmqWOLHNNWscfXYk59eNU/w+10gSheCuipdHR0UeP
HmV4UujbxMTE/v5+XxDYsbExeK/AwEA2ZyFj4FmhoaGuz3GErq4ueB1/f3+T
iS41+cz4WxOr/41ZT0cs3rJ+wWEU0P2cbmrCORhMvLSFbaw2t3lDbvNhmO+J
rDWb6X3RTNXUJbyCmxW0nhDEVJfoncgi+wOprzvc5UaDMzDrXdxMtSq1b2OP
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
nFjKP2CC6jBIUIUBNm1P5tGRpZpj5M01uOGOhL1Iq/9SmD48RWzFX7Ax0uUh
fHw29VfYcipwLiKnC/euun2SamYbMn3a2V145h3QIV7VfXV+iaSzHQmqgpQ8
9+F+0Tool9XT2Lbwol9RB22ei3xIptTiru29Xj48VyWGPxD26BxcQJafvkLq
BdsXwVkTMW+FstVB2VsGo6xcb3W8LLyQkNmbWUxS2+KEqp+UJWqL+BUkoQxn
IV4ZntkJmQUiGjr3Y0ExYIyHdbuswZO4LIvZMJL8e0gihiNebQr7Ba2Q6Gz6
r806sS/RnwFo9UZYzPfw7Uo2DlO5Svt1WO1WIUjrmkfzj9moncv8LQhbelkz
416GuK9hsVhm0z60jwdDuAlWMumVYg8VhvXUjodUO2u2WHmAdPbRLWfNRA7x
rOqfK0xNTTHQVXfR3S1YMRTxQzwjPKLkf/EqTrk6B7+y50drtil7IzNkP3ZR
OYSvE1fxF177AJBY/S9sxpyMyB3DIg4Us1soJUFoqxMbJZ+WQOkZLEcsFKBH
T6snyzYoxamdb0NHApPIu6y9fyPdDMoRM3BwnnlHXstRwEaz0UoJW77jEhAO
jXqp6f+z9x7ucRTJ+/jvj/neweUAR4a7I13iAhfgAh8w2NgG2yQDxgSDc7Ys
W5Ily4pWtHLOOeecpVVcpVVeabXZv5ZGrq6dmZ0ZSTsza3nfZx4eo6npqd7p
6anqrnqr6yZIFrScU1JJUTRr7qDfdjfzx8n0/4L+htFSTPL8TUDZ/PIIdXUz
fquu/lLAVI+6coHuTUznH+SKua3fmlF7BH7whJgf3zOKroTnBOEt17GZJrU1
3RwwxWhr9jnsL5Q18xfOttpsLKeVOBrbTDwkpvUFlBH59snM4cmtuJYN1YXY
ROce2tjfWvTj4g154Aq0oPrsb65XLTFZhBY3hiYWsav75jqhvbNqSnJga/OP
eb4P10Ul/14dr3a5blvGiiaLvgLBP8DZGeUt1BP8+GqBmwch4CDh2HynkefL
vUlodfTPSmroQriPVS8XVhI0Kf8fOcg/eA9JZ10Nj9+qGNxnhHunPAYmnMXq
EAQ+kfwqDd6YamT+iIkoMbn98uqMO5jlAVmUhmXJQAlDHCJp17cGuN7fXXb5
1yfV6cM6iKMKmhAHFp+azt1LPe7BHPKX47cqoHc9wxs8M7zlX7lQ2O/AoZuT
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
knW9ofhUZZv22Nmr0KOxmF/fXR9dOJmXN5BeLVhXpnGEMFHYZnbrgr9cGIxm
P0eapvUj9XT0Hx0NJ/qCX097Cq+KeOCBMNxq/nEG6+rsymDuQoP3TPFn07n7
pvPemy37eqkj3Dzfv/3G+0fn8fuFw3uURIdGh9Vo6tk6pdKKJpOGT4c/Ylf7
oy8RD7jfStzVVd1tTd3p/OA3iNPakvuZC/mEm5qaWNG/vE4rg8TERCx87Bh7
f8GDrcEd/Fa8QXm78DVeGZwjb5xqwuvno1M8VO2YalW32CdzDxxAHEy4NXE8
uQKYvrInmLIocEPvytq9BXwTBZCG3IfuMZ7FWJwDEu/9NvTLyCmYiNmQyjt4
yj4q893XzjSBGhFF/2Gdza8dSvCmtIpLnQ6uOs7CVnhQcZFS/RF9NHyFbMZi
noOOfHI6+O2Tmaz0CpxT2TmSrpTi4jBbDNdSnwDdWmOego58ejrwE59veZ+g
W9mNYQX/ACVHpmvxqYjsjneOJ/cHPkxf/MVh8vfokrfgkr7xQhcqY7dZTbM9
K0P5y33JywMZq+PV0kMBrcb58cQ/432ZVa36yWtbQ/uA7mxYNcxRH1+nVbbJ
kVp8aXKuA2espNd+rrbKHtw3cKv5Ry1gCt9PrxVZrE5NeplA7viFbwnocDJ4
W5OV3Woavf0rmsnVl+QqPWWFq6z6mSVNiyZOyWNU1yCu1l0Rv7Ux42MmrTX6
xPPzQzddWwcnLy8Pu6JFRUUCwnq9nrXlurrqqbDmAriD34oLHcaX7+OVmcra
ReNpR0sOXcqDqWmOr9ZebOluZ3aj3KjpoQQ+pe1XuQLV7VoaT4sYWmyOlLAE
jf2R0FRB81lF1HdADLKleaeU5f5U0D/j+gb/z+5TWVxJXKQyu+EbroAy3/32
4RQBu7ShazLPh1rpK0MODC0JFe9Tz0JboIC2Aggr+Ccow621RDCZ/l/oyIlz
lw57s10hMjihhcouf0W0lgQcJByU80fqNAU99PbxlHdO3WEodJgDNsXcx240
WVbQzt0jLKrnE0EV5B0p8v0DXR7piiJ/L269JLywswUYxsp0BYdGwn7ODQsc
jXh8Ov+gvivaone6q2jQVmKz7b6LEObFyORiSHrb7ayWa6mU9T2z7ktm/OBV
Ry+VWAU8uB/hPvOPitDq9JhYOK3MBdu4m0JKaR/ebO0fY+crbRZz1bTiw0Tq
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
8DI8me8tWDO6Zt347ZP53716/bc6M399JOePZzsvOqw+P415i2O7Dz3oH+hB
/0AP+gcmQW6FoATAyMhIORV2dHR4Gmy32xMSEuTBLS0bvCjSp+v1RYePTraJ
3JpV/rdux9x48FSE1sTMOsNr0LYy/WLkyh9oRNdvTyG++NuvK3YuDlc7HJv9
TN6tie0+9KB/oAf9Az3oH5gEuRVCT0+PnAf37dunPb6mpkYe/9VXX5lwvb7o
8NbnOSK33mnc4zpgxWrbdqRM5NbqFoOfFuQNh91mmXz2tiF5rPB/DWV/99us
euE/jOT80at7P3vblLI0Wuew6b0kGevCdh960D/Qg/6BHvQPTILcCqGkpETO
g9evX9cePzU1JY/fsWOHCdfriw4vaf5U5Nam3ouuA5SgKkJrcNL9ZYvV8Brw
0WG7Dz3oH+hB/0AP+gcmQW6FkJ6e7uXJukJ8fLy8yOTkpNnW64sOzyz7nyK3
Dr9uVr1qs9t3Ha8UufXK/W7DC8DHiO0+9KB/oAf9Az3oH5gEuRVCTEyMHAan
p6fXXEQVOTs7O822XsM7fGF5cvWmTIW/t/LhA1Lfffj4m58fvPtmWj0AWxPb
fehB/0AP+gd60D8wCXIrnKxWq5wEw8LCHA7Hmkvl5ubKS5WVlZltvYZ3+LOR
UpFbr1b9X9Wrb2eXQpLui9yaebvd2LXj48V2H3rQP9CD/oEe9A9MgtwKp9nZ
WTkJJiQkeLOUEhjlpfLy8sy2XsM7vLRlv8itX3emyi/Z7Y6k7McitAYdLpme
4+Ey+Dds96EH/QM96B/oQf/AJMitcJqYmJCTYHJysjdL1dfXy0tdu3bNbOs1
tsMdDnvGvR+L3Do4US9esjscGQVt8jNbSx73G7hqfOzY7kMP+gd60D/Qg/6B
SZBb4TQ4OCgnwbS0NG+WamlpkZfKysoy23qN7fDBV49FaD1V/CObfcX5+zfT
i19eqpdD6+GLj+xenPCMrYPtPvSgf6AH/QM96B+YBLkVTk+fPpWT4OnTp71Z
qqOjQ17q7NmzZltvkAfrrdOpoG6byK23Hn3SOzxV3TJ08kbLzw/elUNrVGrF
zDxnCOMDbPehB/0DPegf6EH/YJN52nsnt8Kpv79f7oqjR496s9STJ0/kpU6e
PGm29RrV4Y09WRcf/J0IrcpP6JFTclYVP5HHHoxPzhuyUgQStvvQg/6BHvQP
9KB/YBLkVjipjmBmZGR4s1RXV5e8VHp6utnWa1SHl7cmyqH14OW/cRtaD2U9
eju7ZMgaEWDY7kMP+gd60D/Qg/6BSZBb4dTT07OBI6dtbW3yUhu4vtXX6zWq
w3tfVojQeuL2D4OSMlWJNeZE5detw948xAdbE9t96EH/QA/6B3rQPzAJciuc
VPdHSk1NXXuZ9x9l8lK5ublmW69RHW5ZmU8r/H7qrd+9XvPLF+Ptvzh0L/LY
g08zatJymwqqenqHpkis0MZ2H3rQP9CD/oEe9A9MgtwKp/HxcTkJJiUlebNU
TU2NvFRRUZHZ1mtghw9NNCytzBo1G7YatvvQg/6BHvQP9KB/YBLkVjjNzMzI
STA2NtabpZTAKC9VWlpqtvXS4TAJtvvQg/6BHvQP9KB/YBLs1UPYsWOHSILB
wcE2m23NRbKysuT8WFdXZ7b10uEwCbb70IP+gR70D/Sgf2AS7NVDSEpKksPg
xMTEmoskJyfLi4yMjJhtvXQ4TILtPvSgf6AH/QM96B+YBHv1ELKzs9d18NRq
tYaHh4vxERERdrvdbOs1sMN5s0AP+gd60D/Qg/6BHvQP9GBXHL5QVVUl58fM
zEzt8apH2Bw9etSE6+XNApOgf6AH/QM96B/oQf9AD3bF4QvT09PBwcEiD27f
vn1hYUFjvBIw5fxYUFBgwvXyZoFJ0D/Qg/6BHvQP9KB/oAe74vCRI0eOyJEw
Pz/f08ixsbGQkBAxUgme4+PjJlxvAL9ZqEcb9WijHm3Uo416tFGPNurRRj3a
qEdbANdjtj8N/lVbWxv0obKyMtdhSniMjY2Vh2VkZHias7GxsVry6tWrzVmv
UwC/WahHG/Voox5t1KONerRRjzbq0UY92qhHWwDXY7Y/Df5lt9sPHDigipBF
RUUWi0WM6e3tjYqKUo0ZHBz0NKf8mBtFSUnJ5qzXKYDfLNSjjXq0UY826tFG
PdqoRxv1aKMebdSjLYDrMdufBr/r6+sLchEWFnb06NH09PSYmBjXV3NzczUm
9Ca3+mK9TgH8ZqEebdSjjXq0UY826tFGPdqoRxv1aKMebQFcj9n+NJhBeXm5
a0j05MyZM9qPv/Eytxq+XifvJwQAAABgWhsJNgh0lZWVYWFhazaPEh5XVla0
p/I+txq7XgAAAABAYJuYmEhPTw8NDXWbHJOSknp7e72ZR3WKb0VFxeasFwAA
AACwFSwuLjY3N9+/f//GjRs5OTllZWXt7e1u7wkcGOsFAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAC+s7y8PDMzY7fb/V0IPkpWq5X+AeAv8/Pzc3Nz/q4CHyWLxULz
wC2bzTb9nrKHo3MqdrMBnaampnJzc48cORITExP0XkhIyO7du8+cOfPNN98o
71Z/FwjzcjgcTU1NV69eTU1NjYuLCw4OVvonLCxs//79Sv/cunXrxYsX/q4R
H5/GxsZtv7Jz504+heCJ0hvt7e0XL15UPn+UTx7nJmzHjh2HDx/OzMxsbW31
d4EwtZ6eHmX/R9l+7dmzR26erKysqqoqq9Xq7wJhCvn5+UG/8vLly/Uuzm42
YIjFxcW8vLzw8PAgz/bu3Ts0NOTvSmFGvb29yvZdo3kUSpK9cuXK/Py8v4vF
R0PZxEdGRspdtLKy4u+iYEbKR9D+/fu1P4JSUlJGRkb8XSlMZ2Zm5sKFC9rN
o+z/PH361N+Vws8GBgac38k7DQ8Pe78su9mAUZaWlhITE7U/tJ1CQ0MbGhr8
XS9MxG63r7nFl0VFRTU3N/u7anwEHA6HEjRU/UNuhauSkhIvP3+UfU4+fyDr
7OxUfTmmITs7W/lc8nfJ8I/p6en4+Hi5H7zPrexmA0ax2WxpaWlefmgHvT/z
8/nz5/6uGmZx9+5d75tHtNDo6Ki/C4fZlZaWujYPuRUq9+7dW9fnz/bt28fH
x/1dNUxBSSJRUVHr6p+ysjJ/Vw0/mJ2d3bt3r6oZvMyt7GYDBrp586bqLZOQ
kKDsMfb39ytvycrKStdDHrGxsRaLxd+Fw//6+vpCQkJU7XHy5MmGhoaRkRFl
l6C3t7e8vDw6Olo15sCBA1wuBA3Kh4+4RFFGboVM+YRRdUhwcPBXX32l/H5u
bk7Jp/X19Z999plqzP79+2kkOByO1NRUVW/Ex8crPaN0jpJTnj17lp2d7Zop
ONt8q5mcnHR7GYKXuZXdbMAoypZ927Zt8pvl8OHDqtvoKZ/tV69eVb2nSkpK
/FUzTMJms4n7VzhFRUU1NTW5jlxYWMjMzFS1UH5+/ubXjI+Ckilcs4YTcQOC
8hGk6pPw8PCuri7VMKVnXDdhnC2M1tZWVVco2ynXsNDd3a3aTfriiy/8UjD8
oqOjY+fOnW63R97kVnazAQMVFhbKb5PExERP3/DIt1BTKO9ivgva4p4/f676
mG1ra/M02G63Jycny4MTEhI2s1p8RHJzc93uJASRWyGpqKiQeyMsLEyJGJ4G
HzlyRB6clZW1maXChFR7NRpnAVVWVsojQ0ND+SDaCpT/lQsKCjxtjIK8y63s
ZgNGUd4RqtsRdHR0eBqs5A4laMiDW1paNrNamI3qsrL09HTt8ZOTk8rmXl5k
aWlpc0rFR6Srq0tjP4HdRQiq+5zcunVLY3B/f788OCYmhhvsbHGqk4Tb29s9
jVRa5dNPP5UHDwwMbGKl2GzK/+L19fVxcXEaG6MgL3Iru9mAgXp6euQ3yL59
+7TH19TUyOO/+uqrTSkTJqW6z0BnZ+eai6j2M3t7ezehTnxE5ufnxVPtgt4/
P3HXrl1yz5Bb4TQ+Pi43RnR0tPb3YMqOaGxsrBgfHBysOlUPW43qjkyzs7Ma
g8+fPy8Prq6u3rQ6scmUsPn5558HeWHN3MpuNmAg1bMDrl+/rj1+ampKHq/s
Um5OnTAhu90eEREh98Pk5OSaSykfwmz6oSE9PV3ukEePHqmeC0xuhVNxcbHc
GPfu3VtzkSdPnjQ0NHR3dw8NDSmbM+VDbBPqhGlt375dbqHp6WmNwZcuXZIH
c+1hAJufn3eNqJGRkc3NzaqvL9bMrexmAwZS7SJqnL0gqJ5d5U1UQUCy2Wy3
b99WNuUnT55MTEzcu3evN0upLjGrq6vzdZ34iDx8+FBuD+eZ5+RWuKU632Nw
cNDfFeEjc+DAAe93gZKSkuTBjY2Nm1YnNplrblU2Rs6vNdabW9nNBgwkn48X
tNaXjU6q96A3p4YCTna7XfX9tsZNVLDVTExMyEfwlU8n52mc5Fa4tXv3btEV
kZGRHDzFep09e1b+bPniiy88ddGTJ09UQcbLB6DgYyTn1qNHjz59+lS8tN7c
ym42YBSr1Sq/NcLCwry5SYXqPp88gBveq66ulpsnODhY+3oibB3K7qLqcIb4
XprcCleLi4tyV5w+fVq8NDo6mp+ff+LEic8++2zPnj2pqakFBQXNzc3e7DFi
S1HyiCqNFhYWuu4ITU5Oqp74pnwo+aVgbA5nblU+OlxvwbGu3MpuNmAgJTLI
bw0vH0qivIPkpfLy8nxdJwKDsp8ZHR0tN8+XX37p76JgFqprFa9cuSJeIrfC
VV9fn9wVOTk5yi/HxsaUT5UgD5SdxvLycu4hDNmxY8dUfZKcnKx0l/P5I1NT
U0rPqO7kEBwczJlCAc/Tl+rryq3sZgMGmpiYUH1We7NUfX29vNS1a9d8XScC
g+sztZVe8ndRMIX+/v6QkBB54y4/tI7cCldtbW1yVxQVFdXW1m7btk0dVl2k
pqZy4BXC0tKSp+86wsLCXH+phNZHjx75u2r4zbpyK7vZgIEGBwflt0ZaWpo3
S7W0tMhL8eh2eEPZpVRt/Q8dOsSBDyiWl5flJ9Ypu4VKjJUHkFvh6vHjx3JX
HD161G30cCs6Opon4EBQPoIKCwtVzxZ3KzExkSOtW9y6ciu72YCBVFd2yNcH
aejo6JCXOnv2rK/rxMeuublZPpoW9P57bG7+Cafs7Gy5N5QdSNUAcitcqS6W
V4mNjT116lRubq7yf+VntgoXLlzw918As5iamiooKAgODtboKCcld/T19fm7
XvjTunIru9mAgfr7++W3xtGjR71ZSnVXvZMnT/q6TnzUWlpaXL/Hrqmp8Xdd
MAXV2Z6HDh2y2WyqMeRWuLp//77bZLFt27aqqirV4AcPHrie8ynfIxRbltIG
qrvcr+nKlSucLLRlrSu3spsNGEj1lU5GRoY3S3V1dclLOR+wCLhVW1vr+iX2
ms/dxhYxPT0dFRUlGiM8PHxsbMx1GLkVrm7fvu0aKGJjY8fHx92OHxkZiYyM
lAcnJCS4fkmCLaWtrc31C429e/cqG6m6urrm5ubi4uJTp065dlpWVhbPXdqa
1pVb2c0GDNTT0yO/Nbz8Skd1fIQT7+HJ3bt3XTf3ztt+Aorjx4/LvVFRUeF2
GLkVru7du+f68dLa2qqxyIMHD1TjR0dHN61gmM3i4qLqq4zg4OCCggKr1aoa
+ezZs/j4eFXzKO3kl7LhX+vKrexmAwZSXTCemprqzVJNTU3yUrm5ub6uEx8d
ZbuvfNK67lUSWiEoKVX1+ePp1DtyK1xVVlaqPl7WvHbMbrd/9tln8iKNjY2b
Uy1MSPXsLUVzc7OnwRaLZf/+/fLgmJgYPou2ID33ZWI3G9BjfHxcfmskJSV5
s1RNTY28VFFRka/rxMdlfn4+OTk5yIWyk+Dv0mAWL1++DA8PF70RGRn59u1b
T4PJrXD16NEj1SeMN8/VKiwsZPsFJ/kihSAv7n4zNDSkulcDN2rYgtaVW9nN
Bgw0MzMjvzViY2O9WUp5B8lLlZaW+rpOfEQmJiY+/fRT1f6ksq2vq6vzd2kw
EWUXUdUkJz1T7SumpaWJlzydWoyA19raqmoh7R1IJ9XTc86cObMJpcKEZmdn
Vf2j7BGtudS1a9fkRS5durQJpcJU1pVb2c0GjLVjxw7x1ggODvbmJhWq8z/J
IxD6+/ujo6NVOwMRERFdXV3+Lg3m4vZWJxvADSu2rIGBAVUzWCyWNZfq6+uT
F/n88883oVSY0PPnz+VOiIuL82aphoYGeamUlBRf1wmzWVdufcduNmCopKQk
+d0xMTGx5iKqU0BHRkY2oU6YX0dHx7Zt21R7krGxsUNDQ/4uDaZDboVOSkpV
3avcm+Nl3d3d8iJeXm6GwKNKoIcOHfJmKWWHR14qPj7e13XCbNabW9nNBgyU
nZ0tvzvW/FbHarXKV6VFRERwK3i8e7836Po0gYMHD2pctIitjNwK/RISEuRm
6OnpWXORqqoqeRFlC7gJdcKEVI8aOX78uDdLDQ0NyUvt37/f13XCbNabW9nN
Bgyk2ohnZmZqj1fd09vLZygjsPX29roeaT1x4sTy8rK/S4NJFRcXJ3lN1VqH
Dh0SL925c8fffwr8RnWVtDd33VTGyIvcvn17E+qECamub929e7en+5nLVHcD
u3DhwiaUClNZb25lNxsw0PT0tHyq1fbt2xcWFjTGK+84+Q1VUFCwaaXCnJQW
Ut2VMYhnssNQ3E8YbqmeFrFr1y7t78qUrdvOnTvlRZ49e7Zp1cJsYmJi5GZ4
8uTJmoucO3dOXqSsrGwT6oSprDe3spsNGOvIkSPyeyQ/P9/TyLGxsZCQEDFS
eSeOj49vZqkwGyWcpqSkqELr1atXvfniGvASuRVuKZ0g3/NEcf36dY3xyqvy
4D179vBJtZWdOHFC7ofPP/9c+545HR0dqo0d33tsQevNre/YzQYMVVtbq/oo
dvsVovJuio2NlYdlZGRsfrUwFdfmOXbsGEdaYSxyKzzJycmRe0PZzfN0+Vh7
e7vqgUocyNji6uvrVduvK1eueNp+TUxMqHaB4uLivLmFNQLMBnIru9mAgZRP
6QMHDqjeU0VFRfIHcm9vr+u5oIODg34sG35ns9k++eQTVVekpKScXQ9vTs3C
FkduhSeLi4uqPb2g9xe6yvcWVrZxSkRVjYmJiZmfn/dj5TCDM2fOqBojOTn5
xYsX8hilf5SUobqHQ3BwsLJf5K+y4UcbyK3sZgPGUj3SziksLOzo0aPp6emq
a0DEjoG/q4afNTc3uzbGepWUlPj774DZkVuhob29XfVAHOf268SJE5cuXTp2
7JjqXGInZSl/Fw7/m5ub27Vrl2t7KCkjKyvr8uXLyl6Q6ppoJ41TPRHYNpBb
37GbDRitvLzc9V3jyZkzZzgXFDdu3PC+Zzwht2JN5FZoq6+vly8KW1NxcbG/
S4ZZdHd3u/1mQ8OxY8e0r4RFANtYbn3HbjZgtMrKStdHcLp9N7HfCIWy7V7X
tt4tcivWRG7Fmjo6OlxPGHYVHh7e2Njo72JhLtPT0xkZGd5ssHbu3Pnw4UN/
1wt/2nBufcduNmC0iYmJ9PR01c0rhKSkJC7ogJCQkODNhl5bRUWFv/8OmN3R
o0dFwyi5w2q1+rsimNHy8nJhYeHu3bvdftTs2LEjJydH2cb5u0yYVEdHx/79
+13POXfavn17VlbW3Nycv8uEn12+fFlujPXe75fdbMBwi4uLzc3N9+/fv3Hj
hrKhLysra29vf/Xqlb/rAgBAi8PhGBgYqK6uvn379tWrV/Pz85X/7urqWlpa
8ndp+AisrKwMDw83NDQUFhZeu3btwYMHSvNMTU35uy4EFHazAQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAIJHa7vb+/v6mpqaKiorCwMC8vr7S09PHjx93d
3UtLS/6uDgAAAACwdX3zzTcXLlzYuXNnkAehoaFpaWnV1dUWi8WnlSgBWYnP
xs55586dbb9SVFRk7OQAAAAAAJ96/vx5UlKSp7jqKjY2tq6uzuFwGF6JMmdt
bW1UVFRFRYWxM8t/YE1NjbGTAwAAAAB8RMmJN2/e9D6xypKTk+fn5w0sZmho
SKTLBw8eGDizUmdwcLCofHJy0sDJAQAAAAA+YrVaz549u7HQ6rR3797Xr18b
UkxnZ6ccLY3NrU1NTWLmffv2GTgzAAAAAMB3zp075zaNJiYmVlVVjY6OLi4u
2my2ycnJ7u7urKysiIgI18F79uwx5Kjro0eP5GmNza0XL14UM+fm5ho4MwAA
AADAR2pra11DaGhoaENDg6dF5ubm3F4Ge+rUKf31+DS3xsbGipm7uroMnBkA
AAAA4AuTk5Pbtm1Txc/t27c/efJEe0GLxaKkVNfoWl1drbMk3+XW0dFRMW14
ePjKyopRMwMAAAAAfCQnJ0cVPHft2jU0NOTNsna7/cqVK6rFd+/ebbPZ9JTk
u9xaWloqpk1LSzNqWgAAAACAj8zNzbkebO3u7l7XJImJiaoZamtr9VTlu9ya
kpIipi0vLzdqWgAAAACAjyjZTRU5lRC63knkO/RueBLFyMhI8XupqanybMnJ
ycW/0tHRsYGZnSwWS1hYmJh2bGxsw1O9e3/K8S1f4gE9AAAAAKA4efKkKnI2
NjaudxK73R4fHy9PEhwcPDc3t9557t+/H7SW9PT09U4rtLe3i3ni4uI2PI/T
nTt31qxWj9bWVp0VAgAAAMDHTsmbO3bskLOSEj+VX25gqurqalXsampqWu8k
vs6t165dE/NcunRpw/M4nT592pB86gnHWwEAAADg5cuXqqxUVFS0samWlpZU
U12/fn29k/g6tyYkJIh5WlpaNjyP0549e3RnU4+ioqJ0lgcAAAAAAeDZs2eq
uPT48eMNzxYdHS1Pde7cufXOMDExUfPe2bNn5alOnDhR8yvPnz/fWHmvX78W
E4aEhCwuLm5sHkHJ+NkfkmsODQ3N9mz79u3y4MOHD6sGKBFeZ3kAAAAAEABc
76fU19e34dmU8CVPlZqauuGpfHE/4aqqKjFhcnKy/glV5FysOHDggMZg1TnG
XV1dhtcDAAAAAAHA9aLUmZmZDc927tw5eaqN3VLYyRe59dSpU2LCO3fu6J9Q
pa2tTa45MzNTY3BMTIwYGRwcvLS0ZHg9AAAAABAAamtr5agVGhqqZ7a8vDx5
tsOHD294KsNzq81mi4iIEBMODg7qnNCV6vbCZWVlnkZOTk56f2QWAAAAALay
jo4O1fFWJd9teLacnBx5Kj03UDI8t8pX8kZHRzscDp0TusrIyJBrfvr0qaeR
zc3N8sjLly8bXgwAAAAABIaRkRFVbn39+vWGZ1Nds6nE2A1PZXhuzc/PF7Od
P39e52xuffLJJ3LN8/Pz3hSjqKmp8UU9AAAAABAAlGylyq29vb0bnu3QoUPy
VCUlJRueyvDceuDAATGbnnsmezI3NycXHBcXpzE4JSVFHjw0NGR4PQAAAAAQ
MHbs2CFnqPr6+g1PJd9rKEjfA1KNza3T09PybLOzs3pmc6uzs1NehfYzgOR/
qJCQED3nZgMAAABAwMvKypID14bPoR0eHpbniYiIsFgsG67K2NxaV1cnptJz
l2MNxcXFcsGVlZWeRi4uLsoj4+PjfVEPAAAAAASM7u5uOUaFh4crwWoD86hu
yqT9FJg1GZtb5Qf0FBQU6JnKk2PHjskFa5z6OzAwII9MS0vzRT0AAAAAEDDs
dvuuXbvkJFVVVbXeSVZWViIjI+VJlDispyoDc6vyB0ZFRYmpenp69BTm1vz8
fGhoqFhFRESEslJPg1tbW+U/7erVq4bXAwAAAAABpqCgQE5SBw8eXO9jYurr
6+UZ9u7dqxHcvGFgbpWPb+7YscMXF5Oqqk1JSdEYLJ+0rCgqKjK8HgAAAAAI
MBaLJT4+Xg5TxcXF3i8+NTUVHR0tlg0ODu7r69NZkoG5Vb7yVM8jZTWoHgCk
cXGrQvlb5MFlZWW+KAkAAAAAAszTp0/lMKVkz46ODm8WXFlZ+fzzz+Vlr127
pr8eA3PrF198Ieaprq7WX5vK4uJieHi4WEVoaKjGk1sVd+7ckf+0DZyVDQAA
AABbU3Z2tpynIiMjJyYm1lxKdTviuLi45eVl/cWocuuGD0ouLCwoGVzMMzk5
qb82lVu3bsmlnj59Wnu86njrzZs3DS8JAAAAAALSysrK8ePH5UgVExOjcdR1
bm7u7NmzqvFjY2OGFNPU1CTPfOfOnY3N09zcLCbZu3evIbXJ3r59u23bNrnU
1tZW7UVU92U6duyY4VUBAAAAQKCyWq0nT54M+lB2dvbS0pJqpJIH5WtaFbt2
7TIqtCra29vlyTMyMjY2j3wQOTc316jy3M6v2Llz55r3fRoaGpIXiYqKMrwq
AAAAAAgYhYWF6R86ceJEkIu4uLjp6Wmx1JUrV1zH7N27N93FzMzMxgp79uyZ
an4ldba1tSl5eWRkxPt5du/eLWbo7OzcWDGeDA8PyychK5R/zzWXWlhYUP1p
b968MbYwAAAAAAgYBw4ccE2gbg0NDelcal2UmOxpzv3793s5yejoqFgqPDzc
YrFsrBi3lPiZkJAgF7Zv376VlRVvllUyvrxgdna2gYUBAAAAQCAxbW5VqFKh
EBYW5uXDYUtLS8VSqampG67Elc1mUyaUqwoODn7+/LmXi1dWVqr+qIGBAQPL
AwAAAICAYebcOjo6unPnTrfTjo+PezODHC0NfEyqw+E4d+6cqqR1XTy7tLS0
fft2efFDhw4p0xpVIQAAAAAEjKSkJC8TqBwVN7bUBgwMDCQmJrpO293dveay
FoslLCxMLPLy5Us9lcjkexQ7xcfHr/ck5JycHNUkg4ODRlUIAAAAANhMb968
6enpaWlp6ezsVOKnl8+HVTKviIR79uzxdZEAAAAAAKyLw+EY/5WpqSl/lwMA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAGA6/x+8IMbp
    "], {{0, 381.5}, {628., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{628., 381.5},
  PlotRange->{{0, 628.}, {0, 381.5}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[6]=",
 CellID->164961916,ExpressionUUID->"0837f9aa-9f44-43c9-946f-3a4b12dcb7a3"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Acknowledgment",
  FontWeight->"Bold"],
 ": Some examples here have been contributed by Ha-Eum Kim."
}], "ExampleText",
 CellID->1797647409,ExpressionUUID->"bc263592-7e53-4733-b00f-da2cef2d3251"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedFunction.png"]],
     ImageSizeCache->{50., {26.47265625, 33.52734375}}], GridBox[{
      {
       StyleBox[
        RowBox[{"See", " ", "Also"}], "SeeAlsoSection"]},
      {Cell[TextData[{
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["NLindbladSolve"]], 
           "paclet:QuantumMob/Q3S/ref/NLindbladSolve", 
           "QuantumMob Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "c4d52cf2-abbd-4c4c-9b9a-4f66116cf5bf"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["LindbladStationary"]], 
           "paclet:QuantumMob/Q3S/ref/LindbladStationary", 
           "QuantumMob Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "534fbf39-ba06-4973-8320-b35274cca323"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["LindbladConvert"]], 
           "paclet:QuantumMob/Q3S/ref/LindbladConvert", 
           "QuantumMob Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "658cc3b7-0017-4a6b-90ce-ba4d27db4e7d"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["LieBasis"]], "paclet:QuantumMob/Q3S/ref/LieBasis", 
           "QuantumMob Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "47f28cd5-d7fd-4970-a20f-e2b285dcfb4d"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["LindbladSupermap"]], 
           "paclet:QuantumMob/Q3S/ref/LindbladSupermap", 
           "QuantumMob Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "74a9434b-e78a-435c-bf66-db25bc71ba06"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["DampingOperator"]], 
           "paclet:QuantumMob/Q3S/ref/DampingOperator", 
           "QuantumMob Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "5ecfa19e-dcad-4863-86ea-22d99e1c74bd"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Supermap"]], "paclet:QuantumMob/Q3S/ref/Supermap", 
           "QuantumMob Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "6e6edb47-7826-4d6d-a4f4-58f0692675cb"]
       }], "SeeAlso",ExpressionUUID->"106f40d3-932b-47ba-a310-3b428c4b6fc0"]}
     }]}
  }]], "SeeAlsoSection",ExpressionUUID->"8915136e-5919-4f6b-8d24-\
a61ce16a17fa"],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedTutorial.png"]],
     ImageSizeCache->{50., {26.47265625, 33.52734375}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Tech", " ", "Notes"}], "TutorialsSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Quantum Noise and Decoherence"]], 
           "paclet:QuantumMob/Q3S/tutorial/QuantumNoiseAndDecoherence"},
          "RefLinkPlain",
          BaseStyle->{"Tutorials"}]], "Tutorials",ExpressionUUID->
         "e38207a3-878d-4e91-a888-2fa4b6af4e83"]}]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Quantum Information Systems with Q3"]], 
           "paclet:QuantumMob/Q3S/tutorial/QuantumInformationSystems"},
          "RefLinkPlain",
          BaseStyle->{"Tutorials"}]], "Tutorials",ExpressionUUID->
         "da847382-88ed-4fed-bcbf-e4ede46719c0"]}]}
     }]}
  }]], "TutorialsSection",ExpressionUUID->"206b3569-3d68-4261-a22c-\
3f8f3c9ca29b"],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, "RelatedGuide.png"]],
     ImageSizeCache->{50., {26.47265625, 33.52734375}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Related", " ", "Guides"}], "MoreAboutSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Dynamical Process of Decoherence"]], 
           "paclet:QuantumMob/Q3S/guide/DynamicalProcessOfDecoherence"},
          "RefLinkPlain",
          BaseStyle->{"MoreAbout"}]], "MoreAbout",ExpressionUUID->
         "b9ff9f3d-f2ff-44f8-96ed-e6a55603e550"]}]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Quantum Information Systems"]], 
           "paclet:QuantumMob/Q3S/guide/QuantumInformationSystems"},
          "RefLinkPlain",
          BaseStyle->{"MoreAbout"}]], "MoreAbout",ExpressionUUID->
         "c4642631-0e39-4518-87e7-9d63aa6dda08"]}]}
     }]}
  }]], "MoreAboutSection",ExpressionUUID->"c44cd99c-f442-461e-b66b-\
ffc145a5dc66"],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{29},
     "Spacer1"], GridBox[{
      {
       RowBox[{
        TemplateBox[{17},
         "Spacer1"], 
        StyleBox[
         RowBox[{"Related", " ", "Links"}], "RelatedLinksSection"]}]},
      {Cell[TextData[{
        Cell[BoxData[
         RowBox[{
          TemplateBox[{16},
           "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData[
               Cell[
                TextData[{
                  Cell[
                   BoxData[
                    TemplateBox[{2}, "Spacer1"]]], 
                  "H.-P. Breuer and F. Petruccione (2002)"}]]]], 
             "https://doi.org/10.1093/acprof:oso/9780199213900.001.0001"},
            "WebLink",
            BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
           "b49f00ba-8cbe-4a4f-aaef-dbe12c51a4de"]}]],ExpressionUUID->
         "d3e74df8-9118-4175-b356-489e8d8556b5"],
        ", The Theory of Open Quantum Systems (Oxford University Press, 2002)."
       }], "RelatedLinks",ExpressionUUID->
        "00e651c6-bd5f-4e3d-bb7e-6229f6c40692"]},
      {Cell[TextData[{
        Cell[BoxData[
         RowBox[{
          TemplateBox[{16},
           "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData[
               Cell[
                TextData[{
                  Cell[
                   BoxData[
                    TemplateBox[{2}, "Spacer1"]]], 
                  "C. W. Gardiner and P. Zoller (2000)"}]]]], 
             "https://www.springer.com/gp/book/9783540223016"},
            "WebLink",
            BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
           "4754ba53-672b-416c-a5f6-efbd9cb43300"]}]],ExpressionUUID->
         "f64a14d5-04ad-46cb-a937-768e49a2da87"],
        ", Quantum Noise (Springer, 2000)."
       }], "RelatedLinks",ExpressionUUID->
        "17d008fb-5c16-45dc-8bea-514d7fd71404"]},
      {Cell[TextData[{
        Cell[BoxData[
         RowBox[{
          TemplateBox[{16},
           "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData[
               Cell[
                TextData[{
                  Cell[
                   BoxData[
                    TemplateBox[{2}, "Spacer1"]]], "Mahn"}]]]], 
             "https://doi.org/10.1007/978-3-030-91214-7"},
            "WebLink",
            BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
           "634d6885-3562-46c0-b60b-abc48c503d02"]}]],ExpressionUUID->
         "24624a09-e3e8-4eb7-beeb-484620b4bc97"],
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData[
             StyleBox[{"-", 
               StyleBox["Soo", IgnoreSpellCheck -> True], " Choi (2022)"}]]], 
           "https://doi.org/10.1007/978-3-030-91214-7"},
          "WebLink",
          BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
         "5ec12094-2527-4def-8908-3f705e96de73"],
        ", A Quantum Computation Workbook (Springer)."
       }], "RelatedLinks",ExpressionUUID->
        "260afeb5-4b60-453b-b5d6-94160dc829b2"]}
     }]}
  }]], "RelatedLinksSection",ExpressionUUID->"cfcda96f-70b7-4a9e-a40a-\
81598d65fa60"],

Cell[" ", "FooterCell",ExpressionUUID->"eba94ef9-7e5c-4e76-a0fe-40ab6f47f4c7"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900, 830},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"LindbladSolve",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, "ExampleSection" -> {"0" -> Open}, 
    "AllOptsTable" -> Closed, "NotesSection" -> Closed}, "NewStyles" -> True, 
  "CitationPopupData" -> $Failed, "ShowCitation" -> False, "HasOptions" -> 
  True, "RootCaptions" -> "", "HeaderCoreAreaLink" -> {}, 
  "Metadata" -> {
   "built" -> "{2025, 3, 3, 18, 30, 17.199781}", 
    "history" -> {"12", "", "", ""}, "context" -> "QuantumMob`Q3S`", 
    "keywords" -> {
     "Lindblad equation", "quantum master equation", "decoherence", 
      "quantum noise"}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Quantum Mob/ Q3S Symbol", "language" -> "en", "paclet" -> 
    "QuantumMob/Q3S", "status" -> "None", "summary" -> 
    "LindbladSolve[{a, b1, b2, ...}, init, t] returns the solution of the \
Lindblad equation specified by the effective Hamiltonian a and the Lindblad \
operators b1, b2, ... with the initial condition init as a function of time \
t. LindbladSolve[a, {b1, b2, ...}, init, t] is also allowed.", 
    "synonyms" -> {}, "tabletags" -> {}, "title" -> "LindbladSolve", 
    "titlemodifier" -> "", "metadescription" -> "", "windowtitle" -> 
    "LindbladSolve", "type" -> "Symbol", "uri" -> 
    "QuantumMob/Q3S/ref/LindbladSolve"}},
CellContext->"Global`",
FrontEndVersion->"14.2 for Mac OS X ARM (64-bit) (December 26, 2024)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "14.2 for Mac OS X ARM (64-bit) (December 26, 2024)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"ec657ede-083c-41eb-811e-51f2c817a0c2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[14767, 391, 1438, 38, 34, "PrimaryExamplesSection",ExpressionUUID->"1cb64417-8e1f-4500-9531-b24331d7a440",
   CellTags->"PrimaryExamplesSection",
   CellID->1842720533]},
 "RasterizedOutput"->{
  Cell[234263, 5725, 192503, 3162, 402, "Output",ExpressionUUID->"0837f9aa-9f44-43c9-946f-3a4b12dcb7a3",
   CellTags->"RasterizedOutput",
   CellID->164961916]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 439279, 9218},
 {"RasterizedOutput", 439480, 9222}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[581, 21, 7339, 176, 50, "AnchorBarGrid",ExpressionUUID->"3dd04b69-516d-4b2f-8244-8b6fe73c7bf5",
 CellID->1],
Cell[7923, 199, 97, 0, 22, "ContextNameCell",ExpressionUUID->"45d39901-ebd4-4dcf-aa5b-7f3d6d9a70e2"],
Cell[CellGroupData[{
Cell[8045, 203, 556, 14, 57, "ObjectNameGrid",ExpressionUUID->"2f296b96-cf2a-4554-8eb1-67baf294714f"],
Cell[8604, 219, 2598, 70, 200, "Usage",ExpressionUUID->"36d294c7-65ad-4677-b95e-6ff5e6e47ce3",
 CellID->982511436]
}, Open  ]],
Cell[CellGroupData[{
Cell[11239, 294, 1916, 48, 34, "NotesSection",ExpressionUUID->"f7a2904b-29f8-4709-ac6c-131b5e500689",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->520274210],
Cell[13158, 344, 1020, 26, 70, "Notes",ExpressionUUID->"f9730bf9-a3df-4498-9028-b1614e86f36a",
 CellID->1067943069],
Cell[14181, 372, 459, 13, 70, "Notes",ExpressionUUID->"251087f2-fd62-4dac-933d-18d6a0a1a408",
 CellID->94066822]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],
Cell[CellGroupData[{
Cell[14767, 391, 1438, 38, 34, "PrimaryExamplesSection",ExpressionUUID->"1cb64417-8e1f-4500-9531-b24331d7a440",
 CellTags->"PrimaryExamplesSection",
 CellID->1842720533],
Cell[16208, 431, 206, 4, 29, "Input",ExpressionUUID->"f5966dca-a897-4aa4-8bba-5576f9eb69d7",
 CellID->1927565408],
Cell[CellGroupData[{
Cell[16439, 439, 1416, 37, 29, "ExampleSection",ExpressionUUID->"d8a54e8f-c63c-495b-a18d-abf663625728",
 CellID->1742324744],
Cell[CellGroupData[{
Cell[17880, 480, 692, 19, 63, "Input",ExpressionUUID->"b62c2195-8339-41f6-865e-365f91973a9c",
 CellID->383286299],
Cell[18575, 501, 1753, 55, 76, "Output",ExpressionUUID->"3f3a81c6-6261-42c7-82d0-873cda5689e2",
 CellID->52888244]
}, Open  ]],
Cell[CellGroupData[{
Cell[20365, 561, 327, 8, 45, "Input",ExpressionUUID->"1bafd019-044b-48fe-acdd-7170d5e4c3e6",
 CellID->575047188],
Cell[20695, 571, 646, 18, 59, "Output",ExpressionUUID->"7e19b720-4acc-4bf1-b639-5c217464c39e",
 CellID->1390411339]
}, Open  ]],
Cell[CellGroupData[{
Cell[21378, 594, 722, 18, 63, "Input",ExpressionUUID->"5873a3e0-7ec1-4cc1-9f91-cfc0df3fdee5",
 CellID->1820491489],
Cell[22103, 614, 1830, 54, 51, "Output",ExpressionUUID->"64f3006a-efa6-48bb-9810-fd3a749309e1",
 CellID->2030628541]
}, Open  ]],
Cell[CellGroupData[{
Cell[23970, 673, 306, 7, 28, "Input",ExpressionUUID->"eb8ee413-e792-495f-9212-8f0a441a15a8",
 CellID->309037009],
Cell[24279, 682, 12069, 317, 92, "Output",ExpressionUUID->"4794f348-4ed2-4ca3-b2ae-bb0d81af7bfe",
 CellID->1989675227]
}, Open  ]],
Cell[CellGroupData[{
Cell[36385, 1004, 354, 10, 70, "Input",ExpressionUUID->"f88c023b-be1c-443d-9bf0-1d5884e4bf07",
 CellID->1017770999],
Cell[36742, 1016, 1755, 55, 76, "Output",ExpressionUUID->"614d403f-3c2e-4962-a908-964c8e43b7f2",
 CellID->1850263197]
}, Open  ]],
Cell[CellGroupData[{
Cell[38534, 1076, 653, 18, 70, "Input",ExpressionUUID->"a220232c-3e9b-4725-b7ea-cc78e6e6ead7",
 CellID->766568750],
Cell[39190, 1096, 1834, 51, 80, "Output",ExpressionUUID->"9bcdde36-bd0c-4245-ade4-a5040457210b",
 CellID->731377188]
}, Open  ]],
Cell[CellGroupData[{
Cell[41061, 1152, 243, 5, 70, "ExampleDelimiter",ExpressionUUID->"a85f5556-69b0-459d-80f2-0f19331365f9",
 CellID->1200765697],
Cell[CellGroupData[{
Cell[41329, 1161, 421, 11, 70, "Input",ExpressionUUID->"9d5bb9d6-e9a7-4563-9896-51ed5603c463",
 CellID->435145815],
Cell[41753, 1174, 851, 26, 76, "Output",ExpressionUUID->"4a0f08f1-6667-4288-8359-dd82715fc323",
 CellID->389448053]
}, Open  ]],
Cell[CellGroupData[{
Cell[42641, 1205, 307, 7, 70, "Input",ExpressionUUID->"a37b5f97-b656-4d8d-af6c-4a189ed4dcb6",
 CellID->1196829607],
Cell[42951, 1214, 687, 21, 59, "Output",ExpressionUUID->"82aa99e7-91bd-40a4-bcc1-6fc57ccfde15",
 CellID->670783829]
}, Open  ]],
Cell[CellGroupData[{
Cell[43675, 1240, 1221, 32, 70, "Input",ExpressionUUID->"5941bdf2-d531-4ec5-b935-8d3956389664",
 CellID->1273375212],
Cell[44899, 1274, 2166, 64, 70, "Print",ExpressionUUID->"61d9378e-2eae-4ba7-aebd-a3059d8b1798",
 CellID->1267029127],
Cell[47068, 1340, 2754, 73, 76, "Output",ExpressionUUID->"aad120a4-b524-4a01-959a-c9e1add1669c",
 CellID->510693837]
}, Open  ]],
Cell[49837, 1416, 819, 24, 70, "Input",ExpressionUUID->"0b25324e-34e4-4cf0-874a-3dc9976be282",
 CellID->374788519],
Cell[CellGroupData[{
Cell[50681, 1444, 1236, 32, 70, "Input",ExpressionUUID->"860f0568-e42e-4cdf-acd1-745301e76be4",
 CellID->667061092],
Cell[51920, 1478, 25268, 528, 70, "Output",ExpressionUUID->"76ce0844-5542-4364-9620-09c0dcb4667b",
 CellID->1881088357]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[77237, 2012, 243, 5, 70, "ExampleDelimiter",ExpressionUUID->"d74132c0-0536-41dd-b2a5-3c526818dbe8",
 CellID->1586259128],
Cell[77483, 2019, 133, 1, 70, "ExampleText",ExpressionUUID->"972e2169-e096-45bb-95d9-fdcb5f078ace",
 CellID->692904445],
Cell[CellGroupData[{
Cell[77641, 2024, 377, 9, 70, "Input",ExpressionUUID->"8c95e3e1-b94c-454d-a470-7cd9f2e7d4cd",
 CellID->1425866839],
Cell[78021, 2035, 667, 19, 91, "Output",ExpressionUUID->"8d9e2191-6b35-4973-98d6-88b470aba392",
 CellID->1379642305]
}, Open  ]],
Cell[CellGroupData[{
Cell[78725, 2059, 693, 19, 70, "Input",ExpressionUUID->"881c7ddc-8630-4d22-9ff3-b27a71037425",
 CellID->1104129648],
Cell[79421, 2080, 2124, 65, 91, "Output",ExpressionUUID->"b7016564-c453-4722-b97a-8f69080b07c2",
 CellID->970248957]
}, Open  ]],
Cell[CellGroupData[{
Cell[81582, 2150, 1102, 29, 70, "Input",ExpressionUUID->"0d1540c8-7744-441e-8f21-75d4ba78f17b",
 CellID->252233040],
Cell[82687, 2181, 1915, 56, 79, "Output",ExpressionUUID->"b01e7a0f-2814-4506-89ad-28e15784453a",
 CellID->908232178]
}, Open  ]],
Cell[CellGroupData[{
Cell[84639, 2242, 1029, 27, 70, "Input",ExpressionUUID->"975a1b30-91b2-4f18-b660-3c615aa01da5",
 CellID->1792714312],
Cell[85671, 2271, 181, 4, 36, "Output",ExpressionUUID->"a3ce4b1e-cf9b-4bb0-9907-5357ef2df9bd",
 CellID->682823937]
}, Open  ]],
Cell[85867, 2278, 379, 11, 70, "Input",ExpressionUUID->"0d223633-c3aa-465e-8995-928b6fa506eb",
 CellID->1112511420],
Cell[CellGroupData[{
Cell[86271, 2293, 684, 17, 70, "Input",ExpressionUUID->"2357a509-eadd-4783-a634-b10d4d1d5ee4",
 CellID->1239593903],
Cell[86958, 2312, 47705, 915, 70, "Output",ExpressionUUID->"7d0a0508-c530-49a7-9420-ae9207c64dca",
 CellID->1675709531]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[134712, 3233, 243, 5, 70, "ExampleDelimiter",ExpressionUUID->"a7fad46a-2258-43b4-83d8-882e793c4604",
 CellID->1261705519],
Cell[134958, 3240, 276, 7, 70, "ExampleText",ExpressionUUID->"530bc623-2c99-4925-b4a1-4ccac1385a81",
 CellID->1231127355],
Cell[CellGroupData[{
Cell[135259, 3251, 415, 11, 70, "Input",ExpressionUUID->"29a296f2-4211-4c6e-90d6-7172394df88e",
 CellID->427878852],
Cell[135677, 3264, 349, 11, 61, "Output",ExpressionUUID->"c69339b2-ada3-409e-98de-bb9799b3a3fd",
 CellID->830978460]
}, Open  ]],
Cell[136041, 3278, 240, 6, 70, "Input",ExpressionUUID->"98a6edb7-c4d0-45f4-801d-c22af0e5d1fe",
 CellID->1686455809],
Cell[CellGroupData[{
Cell[136306, 3288, 621, 16, 70, "Input",ExpressionUUID->"84a403e1-3fd2-4b08-8da8-6fa5621346ad",
 CellID->1773608757],
Cell[136930, 3306, 797, 26, 37, "Output",ExpressionUUID->"4ca5cbad-64d3-4271-ac1e-b645db5aa128",
 CellID->441614973]
}, Open  ]],
Cell[CellGroupData[{
Cell[137764, 3337, 1294, 32, 70, "Input",ExpressionUUID->"4ceccf5c-f279-4e7c-a611-6a5fa547d86d",
 CellID->813112276],
Cell[CellGroupData[{
Cell[139083, 3373, 697, 21, 70, "Print",ExpressionUUID->"8d48ed36-58db-408b-b3b4-71e679578be4",
 CellID->1878386508],
Cell[139783, 3396, 1393, 40, 70, "Print",ExpressionUUID->"e87e2b22-46c7-4efc-be6e-2d850826bc16",
 CellID->2032429056]
}, Open  ]],
Cell[141191, 3439, 1961, 59, 77, "Output",ExpressionUUID->"25934785-e752-46a8-9756-ecb165e76c44",
 CellID->1160255010]
}, Open  ]],
Cell[CellGroupData[{
Cell[143189, 3503, 828, 24, 70, "Input",ExpressionUUID->"0ea49ef7-29f5-43f1-91cb-e443bc638694",
 CellID->1408697964],
Cell[144020, 3529, 837, 23, 37, "Output",ExpressionUUID->"300474ba-b5b8-4b00-b13a-3d1d329503b2",
 CellID->2114916807]
}, Open  ]],
Cell[CellGroupData[{
Cell[144894, 3557, 1236, 32, 70, "Input",ExpressionUUID->"6e604fd2-a166-47bb-86de-025cb0df3401",
 CellID->743762978],
Cell[146133, 3591, 25268, 528, 70, "Output",ExpressionUUID->"eeee1f15-cbe0-4715-8841-ee6a5af10002",
 CellID->1335640062]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[171450, 4125, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"5809209a-25da-421f-a114-344dd0294c3b",
 CellID->818700002],
Cell[171695, 4132, 201, 4, 70, "ExampleText",ExpressionUUID->"e9db8f73-e254-4d14-9096-3aebb3a2d021",
 CellID->1536645940],
Cell[171899, 4138, 221, 5, 70, "Input",ExpressionUUID->"3eb8de68-ff12-43ca-92ed-b078bac20d3d",
 CellID->1470681252],
Cell[172123, 4145, 120, 1, 70, "ExampleText",ExpressionUUID->"c2b3c2bc-03fc-4de2-be54-a8036c8aa330",
 CellID->2051494922],
Cell[CellGroupData[{
Cell[172268, 4150, 375, 10, 70, "Input",ExpressionUUID->"8279e005-918c-459a-ae30-4215b4814db2",
 CellID->963207285],
Cell[172646, 4162, 489, 15, 60, "Output",ExpressionUUID->"7ea26a7e-2a8c-4609-94c8-cea4a995ba04",
 CellID->1737218962]
}, Open  ]],
Cell[173150, 4180, 128, 1, 70, "ExampleText",ExpressionUUID->"52cb4fb5-2ba8-463c-bfd6-4fb124016409",
 CellID->894984484],
Cell[173281, 4183, 236, 6, 70, "Input",ExpressionUUID->"35623ff6-7f20-4f8d-beba-afdd941ea1f0",
 CellID->1701417680],
Cell[173520, 4191, 207, 4, 70, "ExampleText",ExpressionUUID->"098ba08d-0cd3-4107-8c73-62dd26fe2a34",
 CellID->1957216028],
Cell[CellGroupData[{
Cell[173752, 4199, 617, 16, 70, "Input",ExpressionUUID->"bcabe75c-21a0-4b71-b10a-b55f5b1f94e9",
 CellID->682224499],
Cell[174372, 4217, 975, 30, 37, "Output",ExpressionUUID->"ea672a14-83fd-4045-8a8f-a00a462f8785",
 CellID->759363482]
}, Open  ]],
Cell[175362, 4250, 133, 1, 70, "ExampleText",ExpressionUUID->"35310c28-743a-4853-9bfd-23a72e174b61",
 CellID->1153262109],
Cell[175498, 4253, 1013, 26, 70, "Input",ExpressionUUID->"d667fada-5002-4736-9872-927b5f48dcb7",
 CellID->719143774],
Cell[176514, 4281, 149, 1, 70, "ExampleText",ExpressionUUID->"bae39644-7bdf-4c99-8e8e-dbe1033ad290",
 CellID->1738183371],
Cell[CellGroupData[{
Cell[176688, 4286, 193, 4, 70, "Input",ExpressionUUID->"fae3ea3f-de95-4364-b5c8-0636065ea088",
 CellID->711450696],
Cell[176884, 4292, 2081, 60, 54, "Output",ExpressionUUID->"dfe6cb70-1f09-4690-ade1-774656b721ee",
 CellID->504766163]
}, Open  ]],
Cell[178980, 4355, 214, 4, 70, "ExampleText",ExpressionUUID->"03c21235-d928-43e2-b450-2ec4a8f21878",
 CellID->473288516],
Cell[CellGroupData[{
Cell[179219, 4363, 610, 18, 70, "Input",ExpressionUUID->"a8584dde-b442-4647-8faa-fffcea32b859",
 CellID->1210483635],
Cell[179832, 4383, 836, 23, 37, "Output",ExpressionUUID->"f74a180a-b04d-42a5-b3dc-d59200406034",
 CellID->736813913]
}, Open  ]],
Cell[180683, 4409, 169, 3, 70, "ExampleText",ExpressionUUID->"e0fd04a3-03d2-4c03-ab87-4bd7e967d4da",
 CellID->1689424838],
Cell[CellGroupData[{
Cell[180877, 4416, 1237, 32, 70, "Input",ExpressionUUID->"0d88fc09-2a88-4c7c-a428-1a8a6b897ae3",
 CellID->1754552550],
Cell[182117, 4450, 25268, 528, 70, "Output",ExpressionUUID->"ff8d10d5-edff-42dc-9c39-ab31517d0e39",
 CellID->1871124525]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[207434, 4984, 243, 5, 70, "ExampleDelimiter",ExpressionUUID->"a7e8f41d-0645-4649-98a5-bf9e955e9c54",
 CellID->1593892289],
Cell[207680, 4991, 175, 2, 70, "ExampleText",ExpressionUUID->"b4e46964-4fbf-49c1-a4c4-7ce1bb2db082",
 CellID->210970783],
Cell[207858, 4995, 220, 5, 70, "Input",ExpressionUUID->"274168af-2f53-4018-8b3b-a46abde4ca21",
 CellID->290448684],
Cell[208081, 5002, 221, 4, 70, "ExampleText",ExpressionUUID->"88a131b4-35dc-452c-afb6-ef36c9ca0ef2",
 CellID->340702357],
Cell[CellGroupData[{
Cell[208327, 5010, 966, 28, 70, "Input",ExpressionUUID->"36bbd0ad-1534-4d38-9da2-2886a8105f26",
 CellID->993111197],
Cell[209296, 5040, 820, 24, 92, "Output",ExpressionUUID->"d78ade6c-7908-4c21-9534-d73b33c0fe3b",
 CellID->163563629]
}, Open  ]],
Cell[CellGroupData[{
Cell[210153, 5069, 1436, 36, 70, "Input",ExpressionUUID->"2155afbd-7b9d-486b-b9b4-c0009af9a8db",
 CellID->501635503],
Cell[211592, 5107, 1700, 56, 38, "Output",ExpressionUUID->"9a3ceb0a-453a-4f39-a185-fe0748eb9c47",
 CellID->1252798039],
Cell[213295, 5165, 3683, 109, 69, "Output",ExpressionUUID->"4b34f845-5c87-4e69-9200-e404abdc96e6",
 CellID->1846966285]
}, Open  ]],
Cell[CellGroupData[{
Cell[217015, 5279, 484, 13, 70, "Input",ExpressionUUID->"429e6d3d-e29d-4982-b7ea-1bcc97bcda03",
 CellID->1865696334],
Cell[217502, 5294, 14283, 358, 213, "Output",ExpressionUUID->"96b69ec4-e50e-41de-ac1c-89d3aa476df7",
 CellID->543028175]
}, Open  ]],
Cell[CellGroupData[{
Cell[231822, 5657, 1475, 38, 70, "Input",ExpressionUUID->"216c61b8-fd77-4688-9471-2cdc6504194f",
 CellID->260219023],
Cell[233300, 5697, 182, 4, 36, "Output",ExpressionUUID->"73d26d8b-e394-4edd-8c61-4ad5e39d0c2f",
 CellID->185817056]
}, Open  ]],
Cell[CellGroupData[{
Cell[233519, 5706, 741, 17, 70, "Input",ExpressionUUID->"6d04cbac-6c52-4df3-9170-9eb1d4f40354",
 CellID->1542313529],
Cell[234263, 5725, 192503, 3162, 402, "Output",ExpressionUUID->"0837f9aa-9f44-43c9-946f-3a4b12dcb7a3",
 CellTags->"RasterizedOutput",
 CellID->164961916]
}, Open  ]],
Cell[426781, 8890, 222, 5, 70, "ExampleText",ExpressionUUID->"bc263592-7e53-4733-b00f-da2cef2d3251",
 CellID->1797647409]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed]]]],
Cell[427245, 8904, 4124, 111, 70, "SeeAlsoSection",ExpressionUUID->"8915136e-5919-4f6b-8d24-a61ce16a17fa"],
Cell[431372, 9017, 1169, 29, 70, "TutorialsSection",ExpressionUUID->"206b3569-3d68-4261-a22c-3f8f3c9ca29b"],
Cell[432544, 9048, 1154, 28, 70, "MoreAboutSection",ExpressionUUID->"c44cd99c-f442-461e-b66b-ffc145a5dc66"],
Cell[433701, 9078, 3244, 87, 70, "RelatedLinksSection",ExpressionUUID->"cfcda96f-70b7-4a9e-a40a-81598d65fa60"],
Cell[436948, 9167, 78, 0, 70, "FooterCell",ExpressionUUID->"eba94ef9-7e5c-4e76-a0fe-40ab6f47f4c7"]
}
]
*)

(* End of internal cache information *)

